{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3","program":"/home/namn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","xmlparser","--edition=2018","/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=c2fb354441da1a9d","-C","extra-filename=-c2fb354441da1a9d","--out-dir","/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps","-L","dependency=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/namn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libxmlparser-c2fb354441da1a9d.rmeta"},"prelude":{"crate_id":{"name":"xmlparser","disambiguator":[11410274832297465832,3311093396782153937]},"crate_root":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src","external_crates":[{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}}],"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":0,"byte_end":31410,"line_start":1,"line_end":1005,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2053,"byte_end":2054,"line_start":76,"line_end":76,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Error, StreamError, TextPos","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2079,"byte_end":2080,"line_start":77,"line_end":77,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2106,"byte_end":2107,"line_start":78,"line_end":78,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"StrSpan","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2133,"byte_end":2134,"line_start":79,"line_end":79,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"XmlByteExt, XmlCharExt","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":0,"byte_end":31410,"line_start":1,"line_end":1005,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":30},{"krate":0,"index":112},{"krate":0,"index":144},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":444},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":608},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":173},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":228}],"decl_id":null,"docs":"*xmlparser* is a low-level, pull-based, zero-allocation\n[XML 1.0](https://www.w3.org/TR/xml/) parser.","sig":null,"attributes":[{"value":"*\n*xmlparser* is a low-level, pull-based, zero-allocation\n[XML 1.0](https://www.w3.org/TR/xml/) parser.\n\n## Example\n\n```rust\nfor token in xmlparser::Tokenizer::from(\"<tagname name='value'/>\") {\n    println!(\"{:?}\", token);\n}\n```\n\n## Why a new library?\n\nThis library is basically a low-level XML tokenizer that preserves the positions of the tokens\nand is not intended to be used directly.\nIf you are looking for a higher level solution, check out\n[roxmltree](https://github.com/RazrFalcon/roxmltree).\n\n## Benefits\n\n- All tokens contain `StrSpan` structs which represent the position of the substring\n  in the original document.\n- Good error processing. All error types contain the position (line:column) where it occurred.\n- No heap allocations.\n- No dependencies.\n- Tiny. ~1400 LOC and ~30KiB in the release build according to `cargo-bloat`.\n- Supports `no_std` builds. To use without the standard library, disable the default features.\n\n## Limitations\n\n- Currently, only ENTITY objects are parsed from the DOCTYPE. All others are ignored.\n- No tree structure validation. So an XML like `<root><child></root></child>`\n  or a string without root element\n  will be parsed without errors. You should check for this manually.\n  On the other hand `<a/><a/>` will lead to an error.\n- Duplicated attributes is not an error. So XML like `<item a=\"v1\" a=\"v2\"/>`\n  will be parsed without errors. You should check for this manually.\n- UTF-8 only.\n\n## Safety\n\n- The library must not panic. Any panic is considered a critical bug\n  and should be reported.\n- The library forbids unsafe code.\n*/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":0,"byte_end":1583,"line_start":1,"line_end":46,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":1585,"byte_end":1595,"line_start":48,"line_end":48,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":1658,"byte_end":1681,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"warn(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":1682,"byte_end":1704,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":1705,"byte_end":1749,"line_start":54,"line_end":54,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31605,"byte_end":31623,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"InvalidDeclaration","qualname":"::error::Error::InvalidDeclaration","value":"Error::InvalidDeclaration(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31651,"byte_end":31665,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"name":"InvalidComment","qualname":"::error::Error::InvalidComment","value":"Error::InvalidComment(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31693,"byte_end":31702,"line_start":13,"line_end":13,"column_start":5,"column_end":14},"name":"InvalidPI","qualname":"::error::Error::InvalidPI","value":"Error::InvalidPI(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31730,"byte_end":31744,"line_start":14,"line_end":14,"column_start":5,"column_end":19},"name":"InvalidDoctype","qualname":"::error::Error::InvalidDoctype","value":"Error::InvalidDoctype(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31772,"byte_end":31785,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"InvalidEntity","qualname":"::error::Error::InvalidEntity","value":"Error::InvalidEntity(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31813,"byte_end":31827,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"InvalidElement","qualname":"::error::Error::InvalidElement","value":"Error::InvalidElement(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31855,"byte_end":31871,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"InvalidAttribute","qualname":"::error::Error::InvalidAttribute","value":"Error::InvalidAttribute(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31899,"byte_end":31911,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"InvalidCdata","qualname":"::error::Error::InvalidCdata","value":"Error::InvalidCdata(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31939,"byte_end":31954,"line_start":19,"line_end":19,"column_start":5,"column_end":20},"name":"InvalidCharData","qualname":"::error::Error::InvalidCharData","value":"Error::InvalidCharData(StreamError, TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31982,"byte_end":31994,"line_start":20,"line_end":20,"column_start":5,"column_end":17},"name":"UnknownToken","qualname":"::error::Error::UnknownToken","value":"Error::UnknownToken(TextPos)","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":232},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31593,"byte_end":31598,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    InvalidDeclaration(StreamError, TextPos),\n    InvalidComment(StreamError, TextPos),\n    InvalidPI(StreamError, TextPos),\n    InvalidDoctype(StreamError, TextPos),\n    InvalidEntity(StreamError, TextPos),\n    InvalidElement(StreamError, TextPos),\n    InvalidAttribute(StreamError, TextPos),\n    InvalidCdata(StreamError, TextPos),\n    InvalidCharData(StreamError, TextPos),\n    UnknownToken(TextPos),\n}","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269}],"decl_id":null,"docs":" An XML parser errors.\n","sig":null,"attributes":[{"value":"/ An XML parser errors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31484,"byte_end":31509,"line_start":7,"line_end":7,"column_start":1,"column_end":26}},{"value":"allow(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":31510,"byte_end":31532,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32068,"byte_end":32071,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"pos","qualname":"<Error>::pos","value":"pub fn pos(&Self) -> TextPos","parent":null,"children":[],"decl_id":null,"docs":" Returns the error position.\n","sig":null,"attributes":[{"value":"/ Returns the error position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32025,"byte_end":32056,"line_start":24,"line_end":24,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34574,"byte_end":34595,"line_start":93,"line_end":93,"column_start":5,"column_end":26},"name":"UnexpectedEndOfStream","qualname":"::error::StreamError::UnexpectedEndOfStream","value":"StreamError::UnexpectedEndOfStream","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" The steam ended earlier than we expected.","sig":null,"attributes":[{"value":"/ The steam ended earlier than we expected.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34401,"byte_end":34446,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34451,"byte_end":34454,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Should only appear on invalid input data.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34459,"byte_end":34504,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/ Errors in a valid XML should be handled by errors below.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34509,"byte_end":34569,"line_start":92,"line_end":92,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":290},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34627,"byte_end":34638,"line_start":96,"line_end":96,"column_start":5,"column_end":16},"name":"InvalidName","qualname":"::error::StreamError::InvalidName","value":"StreamError::InvalidName","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An invalid name.\n","sig":null,"attributes":[{"value":"/ An invalid name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34602,"byte_end":34622,"line_start":95,"line_end":95,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":292},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34761,"byte_end":34771,"line_start":101,"line_end":101,"column_start":5,"column_end":15},"name":"NonXmlChar","qualname":"::error::StreamError::NonXmlChar","value":"StreamError::NonXmlChar(char, TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" A non-XML character has occurred.","sig":null,"attributes":[{"value":"/ A non-XML character has occurred.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34645,"byte_end":34682,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34687,"byte_end":34690,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Valid characters are: <https://www.w3.org/TR/xml/#char32>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34695,"byte_end":34756,"line_start":100,"line_end":100,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":296},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34982,"byte_end":34993,"line_start":108,"line_end":108,"column_start":5,"column_end":16},"name":"InvalidChar","qualname":"::error::StreamError::InvalidChar","value":"StreamError::InvalidChar(u8, u8, TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An invalid/unexpected character.","sig":null,"attributes":[{"value":"/ An invalid/unexpected character.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34793,"byte_end":34829,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34834,"byte_end":34837,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The first byte is an actual one, the second one is expected.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34842,"byte_end":34906,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34911,"byte_end":34914,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ We are using a single value to reduce the struct size.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34919,"byte_end":34977,"line_start":107,"line_end":107,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35143,"byte_end":35162,"line_start":113,"line_end":113,"column_start":5,"column_end":24},"name":"InvalidCharMultiple","qualname":"::error::StreamError::InvalidCharMultiple","value":"StreamError::InvalidCharMultiple(u8, &'static [u8], TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An invalid/unexpected character.","sig":null,"attributes":[{"value":"/ An invalid/unexpected character.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35017,"byte_end":35053,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35058,"byte_end":35061,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Just like `InvalidChar`, but specifies multiple expected characters.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35066,"byte_end":35138,"line_start":112,"line_end":112,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":306},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35252,"byte_end":35264,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"name":"InvalidQuote","qualname":"::error::StreamError::InvalidQuote","value":"StreamError::InvalidQuote(u8, TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An unexpected character instead of `\"` or `'`.\n","sig":null,"attributes":[{"value":"/ An unexpected character instead of `\"` or `'`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35197,"byte_end":35247,"line_start":115,"line_end":115,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35408,"byte_end":35420,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"InvalidSpace","qualname":"::error::StreamError::InvalidSpace","value":"StreamError::InvalidSpace(u8, TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An unexpected character instead of an XML space.","sig":null,"attributes":[{"value":"/ An unexpected character instead of an XML space.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35284,"byte_end":35336,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35341,"byte_end":35344,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Includes: `' ' \\n \\r \\t &#x20; &#x9; &#xD; &#xA;`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35349,"byte_end":35403,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35521,"byte_end":35534,"line_start":126,"line_end":126,"column_start":5,"column_end":18},"name":"InvalidString","qualname":"::error::StreamError::InvalidString","value":"StreamError::InvalidString(&'static str, TextPos)","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An unexpected string.","sig":null,"attributes":[{"value":"/ An unexpected string.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35440,"byte_end":35465,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35470,"byte_end":35473,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contains what string was expected.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35478,"byte_end":35516,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":318},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35594,"byte_end":35610,"line_start":129,"line_end":129,"column_start":5,"column_end":21},"name":"InvalidReference","qualname":"::error::StreamError::InvalidReference","value":"StreamError::InvalidReference","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An invalid reference.\n","sig":null,"attributes":[{"value":"/ An invalid reference.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35564,"byte_end":35589,"line_start":128,"line_end":128,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35659,"byte_end":35676,"line_start":132,"line_end":132,"column_start":5,"column_end":22},"name":"InvalidExternalID","qualname":"::error::StreamError::InvalidExternalID","value":"StreamError::InvalidExternalID","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" An invalid ExternalID in the DTD.\n","sig":null,"attributes":[{"value":"/ An invalid ExternalID in the DTD.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35617,"byte_end":35654,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":322},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35720,"byte_end":35738,"line_start":135,"line_end":135,"column_start":5,"column_end":23},"name":"InvalidCommentData","qualname":"::error::StreamError::InvalidCommentData","value":"StreamError::InvalidCommentData","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Comment cannot contain `--`.\n","sig":null,"attributes":[{"value":"/ Comment cannot contain `--`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35683,"byte_end":35715,"line_start":134,"line_end":134,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":324},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35782,"byte_end":35799,"line_start":138,"line_end":138,"column_start":5,"column_end":22},"name":"InvalidCommentEnd","qualname":"::error::StreamError::InvalidCommentEnd","value":"StreamError::InvalidCommentEnd","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" Comment cannot end with `-`.\n","sig":null,"attributes":[{"value":"/ Comment cannot end with `-`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35745,"byte_end":35777,"line_start":137,"line_end":137,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35916,"byte_end":35936,"line_start":143,"line_end":143,"column_start":5,"column_end":25},"name":"InvalidCharacterData","qualname":"::error::StreamError::InvalidCharacterData","value":"StreamError::InvalidCharacterData","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" A Character Data node contains an invalid data.","sig":null,"attributes":[{"value":"/ A Character Data node contains an invalid data.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35806,"byte_end":35857,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35862,"byte_end":35865,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Currently, only `]]>` is not allowed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35870,"byte_end":35911,"line_start":142,"line_end":142,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":287},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34383,"byte_end":34394,"line_start":88,"line_end":88,"column_start":10,"column_end":21},"name":"StreamError","qualname":"::error::StreamError","value":"pub enum StreamError {\n    UnexpectedEndOfStream,\n    InvalidName,\n    NonXmlChar(char, TextPos),\n    InvalidChar(u8, u8, TextPos),\n    InvalidCharMultiple(u8, &'static [u8], TextPos),\n    InvalidQuote(u8, TextPos),\n    InvalidSpace(u8, TextPos),\n    InvalidString(&'static str, TextPos),\n    InvalidReference,\n    InvalidExternalID,\n    InvalidCommentData,\n    InvalidCommentEnd,\n    InvalidCharacterData,\n}","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326}],"decl_id":null,"docs":" A stream parser errors.\n","sig":null,"attributes":[{"value":"/ A stream parser errors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34295,"byte_end":34322,"line_start":86,"line_end":86,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38518,"byte_end":38525,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"TextPos","qualname":"::error::TextPos","value":"TextPos { row, col }","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":" Position in text.","sig":null,"attributes":[{"value":"/ Position in text.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38319,"byte_end":38340,"line_start":210,"line_end":210,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38341,"byte_end":38344,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Position indicates a row/line and a column in the original text. Starting from 1:1.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38345,"byte_end":38432,"line_start":212,"line_end":212,"column_start":1,"column_end":88}},{"value":"allow(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38484,"byte_end":38506,"line_start":214,"line_end":214,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":344},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38536,"byte_end":38539,"line_start":216,"line_end":216,"column_start":9,"column_end":12},"name":"row","qualname":"::error::TextPos::row","value":"u32","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":345},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38554,"byte_end":38557,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"name":"col","qualname":"::error::TextPos::col","value":"u32","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38716,"byte_end":38719,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPos>::new","value":"pub fn new(u32, u32) -> TextPos","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `TextPos`.","sig":null,"attributes":[{"value":"/ Constructs a new `TextPos`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38586,"byte_end":38617,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38622,"byte_end":38625,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Should not be invoked manually, but rather via `Stream::gen_text_pos`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38630,"byte_end":38704,"line_start":223,"line_end":223,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39411,"byte_end":39417,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Entity","qualname":"::stream::Reference::Entity","value":"Reference::Entity(&'a str)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" An entity reference.","sig":null,"attributes":[{"value":"/ An entity reference.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39324,"byte_end":39348,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39353,"byte_end":39356,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ <https://www.w3.org/TR/xml/#NT-EntityRef>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39361,"byte_end":39406,"line_start":22,"line_end":22,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39520,"byte_end":39524,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Char","qualname":"::stream::Reference::Char","value":"Reference::Char(char)","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" A character reference.","sig":null,"attributes":[{"value":"/ A character reference.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39433,"byte_end":39459,"line_start":25,"line_end":25,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39464,"byte_end":39467,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ <https://www.w3.org/TR/xml/#NT-CharRef>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39472,"byte_end":39515,"line_start":27,"line_end":27,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":361},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39304,"byte_end":39313,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"Reference","qualname":"::stream::Reference","value":"pub enum Reference<'a> { Entity(&'a str), Char(char), }","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":366}],"decl_id":null,"docs":" Representation of the [Reference](https://www.w3.org/TR/xml/#NT-Reference) value.\n","sig":null,"attributes":[{"value":"/ Representation of the [Reference](https://www.w3.org/TR/xml/#NT-Reference) value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39158,"byte_end":39243,"line_start":17,"line_end":17,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39637,"byte_end":39643,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" A streaming XML parsing interface.\n","sig":null,"attributes":[{"value":"/ A streaming XML parsing interface.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39536,"byte_end":39574,"line_start":32,"line_end":32,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40237,"byte_end":40248,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"from_substr","qualname":"<Stream>::from_substr","value":"pub fn from_substr(&'a str, Range<usize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream from a specified `text` substring.\n","sig":null,"attributes":[{"value":"/ Creates a new stream from a specified `text` substring.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40152,"byte_end":40211,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40216,"byte_end":40225,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40494,"byte_end":40498,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"span","qualname":"<Stream>::span","value":"pub fn span(&Self) -> StrSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an underling string span.\n","sig":null,"attributes":[{"value":"/ Returns an underling string span.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40431,"byte_end":40468,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40473,"byte_end":40482,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40607,"byte_end":40610,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"pos","qualname":"<Stream>::pos","value":"pub fn pos(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns current position.\n","sig":null,"attributes":[{"value":"/ Returns current position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40552,"byte_end":40581,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40586,"byte_end":40595,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40784,"byte_end":40795,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"jump_to_end","qualname":"<Stream>::jump_to_end","value":"pub fn jump_to_end(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets current position equal to the end.","sig":null,"attributes":[{"value":"/ Sets current position equal to the end.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40657,"byte_end":40700,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40705,"byte_end":40708,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Used to indicate end of parsing on error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40713,"byte_end":40758,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40763,"byte_end":40772,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41301,"byte_end":41307,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"at_end","qualname":"<Stream>::at_end","value":"pub fn at_end(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the stream is reached the end.","sig":null,"attributes":[{"value":"/ Checks if the stream is reached the end.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40849,"byte_end":40893,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40898,"byte_end":40901,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Any [`pos()`] value larger than original text length indicates stream end.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40906,"byte_end":40984,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40989,"byte_end":40992,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Accessing stream after reaching end via safe methods will produce","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40997,"byte_end":41066,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ an `UnexpectedEndOfStream` error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41071,"byte_end":41108,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41113,"byte_end":41116,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Accessing stream after reaching end via *_unchecked methods will produce","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41121,"byte_end":41197,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ a Rust's bound checking error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41202,"byte_end":41236,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41241,"byte_end":41244,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`pos()`]: #method.pos","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41249,"byte_end":41275,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41280,"byte_end":41289,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41508,"byte_end":41517,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"curr_byte","qualname":"<Stream>::curr_byte","value":"pub fn curr_byte(&Self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte from a current stream position.","sig":null,"attributes":[{"value":"/ Returns a byte from a current stream position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41365,"byte_end":41415,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41420,"byte_end":41423,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41428,"byte_end":41440,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41445,"byte_end":41448,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41453,"byte_end":41482,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41487,"byte_end":41496,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41861,"byte_end":41880,"line_start":129,"line_end":129,"column_start":12,"column_end":31},"name":"curr_byte_unchecked","qualname":"<Stream>::curr_byte_unchecked","value":"pub fn curr_byte_unchecked(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte from a current stream position.","sig":null,"attributes":[{"value":"/ Returns a byte from a current stream position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41689,"byte_end":41739,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41744,"byte_end":41747,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41752,"byte_end":41764,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41769,"byte_end":41772,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ - if the current position is after the end of the data","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41777,"byte_end":41835,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41840,"byte_end":41849,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42094,"byte_end":42103,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"next_byte","qualname":"<Stream>::next_byte","value":"pub fn next_byte(&Self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a next byte from a current stream position.","sig":null,"attributes":[{"value":"/ Returns a next byte from a current stream position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":41946,"byte_end":42001,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42006,"byte_end":42009,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42014,"byte_end":42026,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42031,"byte_end":42034,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42039,"byte_end":42068,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42073,"byte_end":42082,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42597,"byte_end":42604,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"advance","qualname":"<Stream>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances by `n` bytes.","sig":null,"attributes":[{"value":"/ Advances by `n` bytes.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42294,"byte_end":42320,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42325,"byte_end":42328,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42333,"byte_end":42347,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42352,"byte_end":42355,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```rust,should_panic","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42360,"byte_end":42384,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/ use xmlparser::Stream;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42389,"byte_end":42415,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42420,"byte_end":42423,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut s = Stream::from(\"text\");","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42428,"byte_end":42465,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ s.advance(2); // ok","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42470,"byte_end":42493,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ s.advance(20); // will cause a panic via debug_assert!().","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42498,"byte_end":42559,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42564,"byte_end":42571,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42576,"byte_end":42585,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43141,"byte_end":43152,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Stream>::starts_with","value":"pub fn starts_with(&Self, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the stream starts with a selected text.","sig":null,"attributes":[{"value":"/ Checks that the stream starts with a selected text.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42711,"byte_end":42766,"line_start":164,"line_end":164,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42771,"byte_end":42774,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ We are using `&[u8]` instead of `&str` for performance reasons.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42779,"byte_end":42846,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42851,"byte_end":42854,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42859,"byte_end":42873,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42878,"byte_end":42881,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42886,"byte_end":42893,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ use xmlparser::Stream;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42898,"byte_end":42924,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42929,"byte_end":42932,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut s = Stream::from(\"Some text.\");","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42937,"byte_end":42980,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/ s.advance(5);","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":42985,"byte_end":43002,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(s.starts_with(b\"text\"), true);","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43007,"byte_end":43052,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(s.starts_with(b\"long\"), false);","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43057,"byte_end":43103,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43108,"byte_end":43115,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43120,"byte_end":43129,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43764,"byte_end":43776,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"consume_byte","qualname":"<Stream>::consume_byte","value":"pub fn consume_byte(&mut Self, u8) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the current byte if it's equal to the provided byte.","sig":null,"attributes":[{"value":"/ Consumes the current byte if it's equal to the provided byte.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43261,"byte_end":43326,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43331,"byte_end":43334,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43339,"byte_end":43351,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43356,"byte_end":43359,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - `InvalidChar`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43364,"byte_end":43383,"line_start":187,"line_end":187,"column_start":5,"column_end":24}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43388,"byte_end":43417,"line_start":188,"line_end":188,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43422,"byte_end":43425,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43430,"byte_end":43444,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43449,"byte_end":43452,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43457,"byte_end":43464,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use xmlparser::Stream;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43469,"byte_end":43495,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43500,"byte_end":43503,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut s = Stream::from(\"Some text.\");","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43508,"byte_end":43551,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/ assert!(s.consume_byte(b'S').is_ok());","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43556,"byte_end":43598,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"/ assert!(s.consume_byte(b'o').is_ok());","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43603,"byte_end":43645,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ assert!(s.consume_byte(b'm').is_ok());","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43650,"byte_end":43692,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert!(s.consume_byte(b'q').is_err());","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43697,"byte_end":43740,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":43745,"byte_end":43752,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44167,"byte_end":44183,"line_start":214,"line_end":214,"column_start":12,"column_end":28},"name":"try_consume_byte","qualname":"<Stream>::try_consume_byte","value":"pub fn try_consume_byte(&mut Self, u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tries to consume the current byte if it's equal to the provided byte.","sig":null,"attributes":[{"value":"/ Tries to consume the current byte if it's equal to the provided byte.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44014,"byte_end":44087,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44092,"byte_end":44095,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Unlike `consume_byte()` will not return any errors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44100,"byte_end":44155,"line_start":213,"line_end":213,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44488,"byte_end":44499,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"skip_string","qualname":"<Stream>::skip_string","value":"pub fn skip_string(&mut Self, &'static [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Skips selected string.","sig":null,"attributes":[{"value":"/ Skips selected string.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44391,"byte_end":44417,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44422,"byte_end":44425,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44430,"byte_end":44442,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44447,"byte_end":44450,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ - `InvalidString`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44455,"byte_end":44476,"line_start":228,"line_end":228,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45034,"byte_end":45047,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"consume_bytes","qualname":"<Stream>::consume_bytes","value":"pub fn consume_bytes<F>(&mut Self, F) -> StrSpan where F: Fn(&Stream, u8) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Consumes bytes by the predicate and returns them.","sig":null,"attributes":[{"value":"/ Consumes bytes by the predicate and returns them.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44914,"byte_end":44967,"line_start":243,"line_end":243,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44972,"byte_end":44975,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The result can be empty.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":44980,"byte_end":45008,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45013,"byte_end":45022,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45275,"byte_end":45285,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"skip_bytes","qualname":"<Stream>::skip_bytes","value":"pub fn skip_bytes<F>(&mut Self, F) where F: Fn(&Stream, u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Skips bytes by the predicate.\n","sig":null,"attributes":[{"value":"/ Skips bytes by the predicate.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45230,"byte_end":45263,"line_start":255,"line_end":255,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45593,"byte_end":45606,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"consume_chars","qualname":"<Stream>::consume_chars","value":"pub fn consume_chars<F>(&mut Self, F) -> Result<StrSpan> where\nF: Fn(&Stream, char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes chars by the predicate and returns them.","sig":null,"attributes":[{"value":"/ Consumes chars by the predicate and returns them.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45473,"byte_end":45526,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45531,"byte_end":45534,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The result can be empty.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45539,"byte_end":45567,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45572,"byte_end":45581,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45863,"byte_end":45873,"line_start":278,"line_end":278,"column_start":12,"column_end":22},"name":"skip_chars","qualname":"<Stream>::skip_chars","value":"pub fn skip_chars<F>(&mut Self, F) -> Result<()> where F: Fn(&Stream, char) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Skips chars by the predicate.\n","sig":null,"attributes":[{"value":"/ Skips chars by the predicate.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45804,"byte_end":45837,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":45842,"byte_end":45851,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46478,"byte_end":46488,"line_start":301,"line_end":301,"column_start":12,"column_end":22},"name":"slice_back","qualname":"<Stream>::slice_back","value":"pub fn slice_back(&Self, usize) -> StrSpan","parent":null,"children":[],"decl_id":null,"docs":" Slices data from `pos` to the current position.\n","sig":null,"attributes":[{"value":"/ Slices data from `pos` to the current position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46401,"byte_end":46452,"line_start":299,"line_end":299,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46457,"byte_end":46466,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46661,"byte_end":46671,"line_start":307,"line_end":307,"column_start":12,"column_end":22},"name":"slice_tail","qualname":"<Stream>::slice_tail","value":"pub fn slice_tail(&Self) -> StrSpan","parent":null,"children":[],"decl_id":null,"docs":" Slices data from the current position to the end.\n","sig":null,"attributes":[{"value":"/ Slices data from the current position to the end.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46582,"byte_end":46635,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46640,"byte_end":46649,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46855,"byte_end":46866,"line_start":315,"line_end":315,"column_start":12,"column_end":23},"name":"skip_spaces","qualname":"<Stream>::skip_spaces","value":"pub fn skip_spaces(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Skips whitespaces.","sig":null,"attributes":[{"value":"/ Skips whitespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46758,"byte_end":46780,"line_start":311,"line_end":311,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46785,"byte_end":46788,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Accepted values: `' ' \\n \\r \\t`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46793,"byte_end":46829,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":46834,"byte_end":46843,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47080,"byte_end":47097,"line_start":323,"line_end":323,"column_start":12,"column_end":29},"name":"starts_with_space","qualname":"<Stream>::starts_with_space","value":"pub fn starts_with_space(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the stream is starts with a space.\n","sig":null,"attributes":[{"value":"/ Checks if the stream is starts with a space.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47006,"byte_end":47054,"line_start":321,"line_end":321,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47059,"byte_end":47068,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47432,"byte_end":47446,"line_start":336,"line_end":336,"column_start":12,"column_end":26},"name":"consume_spaces","qualname":"<Stream>::consume_spaces","value":"pub fn consume_spaces(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes whitespaces.","sig":null,"attributes":[{"value":"/ Consumes whitespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47194,"byte_end":47219,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47224,"byte_end":47227,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Like [`skip_spaces()`], but checks that first char is actually a space.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47232,"byte_end":47307,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47312,"byte_end":47315,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`skip_spaces()`]: #method.skip_spaces","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47320,"byte_end":47362,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47367,"byte_end":47370,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47375,"byte_end":47387,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47392,"byte_end":47395,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ - `InvalidSpace`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47400,"byte_end":47420,"line_start":335,"line_end":335,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47910,"byte_end":47931,"line_start":352,"line_end":352,"column_start":12,"column_end":33},"name":"try_consume_reference","qualname":"<Stream>::try_consume_reference","value":"pub fn try_consume_reference(&mut Self) -> Option<Reference>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an XML character reference if there is one.","sig":null,"attributes":[{"value":"/ Consumes an XML character reference if there is one.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47776,"byte_end":47832,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47837,"byte_end":47840,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ On error will reset the position to the original.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":47845,"byte_end":47898,"line_start":351,"line_end":351,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48636,"byte_end":48653,"line_start":377,"line_end":377,"column_start":12,"column_end":29},"name":"consume_reference","qualname":"<Stream>::consume_reference","value":"pub fn consume_reference(&mut Self) -> Result<Reference>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an XML reference.","sig":null,"attributes":[{"value":"/ Consumes an XML reference.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48451,"byte_end":48481,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48486,"byte_end":48489,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Consumes according to: <https://www.w3.org/TR/xml/#NT-Reference>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48494,"byte_end":48562,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48567,"byte_end":48570,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48575,"byte_end":48587,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48592,"byte_end":48595,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ - `InvalidReference`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":48600,"byte_end":48624,"line_start":376,"line_end":376,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50408,"byte_end":50420,"line_start":429,"line_end":429,"column_start":12,"column_end":24},"name":"consume_name","qualname":"<Stream>::consume_name","value":"pub fn consume_name(&mut Self) -> Result<StrSpan>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an XML name and returns it.","sig":null,"attributes":[{"value":"/ Consumes an XML name and returns it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50139,"byte_end":50179,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50184,"byte_end":50187,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Consumes according to: <https://www.w3.org/TR/xml/#NT-Name>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50192,"byte_end":50255,"line_start":423,"line_end":423,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50260,"byte_end":50263,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50268,"byte_end":50280,"line_start":425,"line_end":425,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50285,"byte_end":50288,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ - `InvalidName` - if name is empty or starts with an invalid char","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50293,"byte_end":50362,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50367,"byte_end":50396,"line_start":428,"line_end":428,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50902,"byte_end":50911,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"skip_name","qualname":"<Stream>::skip_name","value":"pub fn skip_name(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Skips an XML name.","sig":null,"attributes":[{"value":"/ Skips an XML name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50678,"byte_end":50700,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50705,"byte_end":50708,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The same as `consume_name()`, but does not return a consumed name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50713,"byte_end":50783,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50788,"byte_end":50791,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50796,"byte_end":50808,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50813,"byte_end":50816,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ - `InvalidName` - if name is empty or starts with an invalid char","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":50821,"byte_end":50890,"line_start":447,"line_end":447,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51670,"byte_end":51683,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"consume_qname","qualname":"<Stream>::consume_qname","value":"pub fn consume_qname(&mut Self) -> Result<(StrSpan, StrSpan)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a qualified XML name and returns it.","sig":null,"attributes":[{"value":"/ Consumes a qualified XML name and returns it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51394,"byte_end":51443,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51448,"byte_end":51451,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Consumes according to: <https://www.w3.org/TR/xml-names/#ns-qualnames>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51456,"byte_end":51530,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51535,"byte_end":51538,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51543,"byte_end":51555,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51560,"byte_end":51563,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ - `InvalidName` - if name is empty or starts with an invalid char","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51568,"byte_end":51637,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"inline(never)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":51642,"byte_end":51658,"line_start":476,"line_end":476,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53891,"byte_end":53901,"line_start":547,"line_end":547,"column_start":12,"column_end":22},"name":"consume_eq","qualname":"<Stream>::consume_eq","value":"pub fn consume_eq(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `=`.","sig":null,"attributes":[{"value":"/ Consumes `=`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53697,"byte_end":53714,"line_start":539,"line_end":539,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53719,"byte_end":53722,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ Consumes according to: <https://www.w3.org/TR/xml/#NT-Eq>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53727,"byte_end":53788,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53793,"byte_end":53796,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53801,"byte_end":53813,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53818,"byte_end":53821,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ - `InvalidChar`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53826,"byte_end":53845,"line_start":545,"line_end":545,"column_start":5,"column_end":24}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":53850,"byte_end":53879,"line_start":546,"line_end":546,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54221,"byte_end":54234,"line_start":563,"line_end":563,"column_start":12,"column_end":25},"name":"consume_quote","qualname":"<Stream>::consume_quote","value":"pub fn consume_quote(&mut Self) -> Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes quote.","sig":null,"attributes":[{"value":"/ Consumes quote.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54046,"byte_end":54065,"line_start":555,"line_end":555,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54070,"byte_end":54073,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Consumes `'` or `\"` and returns it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54078,"byte_end":54117,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54122,"byte_end":54125,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54130,"byte_end":54142,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54147,"byte_end":54150,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ - `InvalidQuote`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54155,"byte_end":54175,"line_start":561,"line_end":561,"column_start":5,"column_end":25}},{"value":"/ - `UnexpectedEndOfStream`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54180,"byte_end":54209,"line_start":562,"line_end":562,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54633,"byte_end":54645,"line_start":577,"line_end":577,"column_start":12,"column_end":24},"name":"gen_text_pos","qualname":"<Stream>::gen_text_pos","value":"pub fn gen_text_pos(&Self) -> TextPos","parent":null,"children":[],"decl_id":null,"docs":" Calculates a current absolute position.","sig":null,"attributes":[{"value":"/ Calculates a current absolute position.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54486,"byte_end":54529,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54534,"byte_end":54537,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ This operation is very expensive. Use only for errors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54542,"byte_end":54600,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"inline(never)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54605,"byte_end":54621,"line_start":576,"line_end":576,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55294,"byte_end":55311,"line_start":599,"line_end":599,"column_start":12,"column_end":29},"name":"gen_text_pos_from","qualname":"<Stream>::gen_text_pos_from","value":"pub fn gen_text_pos_from(&Self, usize) -> TextPos","parent":null,"children":[],"decl_id":null,"docs":" Calculates an absolute position at `pos`.","sig":null,"attributes":[{"value":"/ Calculates an absolute position at `pos`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54876,"byte_end":54921,"line_start":586,"line_end":586,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54926,"byte_end":54929,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This operation is very expensive. Use only for errors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54934,"byte_end":54992,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":54997,"byte_end":55000,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55005,"byte_end":55019,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55024,"byte_end":55027,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55032,"byte_end":55039,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ let s = xmlparser::Stream::from(\"text\");","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55044,"byte_end":55088,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55093,"byte_end":55096,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.gen_text_pos_from(2), xmlparser::TextPos::new(1, 3));","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55101,"byte_end":55171,"line_start":595,"line_end":595,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(s.gen_text_pos_from(9999), xmlparser::TextPos::new(1, 5));","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55176,"byte_end":55249,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55254,"byte_end":55261,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"inline(never)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":55266,"byte_end":55282,"line_start":598,"line_end":598,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56186,"byte_end":56193,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"StrSpan","qualname":"::strspan::StrSpan","value":"StrSpan {  }","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" A string slice.","sig":null,"attributes":[{"value":"/ A string slice.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56000,"byte_end":56019,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56020,"byte_end":56023,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Like `&str`, but also contains the position in the input XML","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56024,"byte_end":56088,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ from which it was parsed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56089,"byte_end":56118,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"must_use","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56119,"byte_end":56130,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56746,"byte_end":56751,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"start","qualname":"<StrSpan>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the start position of the span.\n","sig":null,"attributes":[{"value":"/ Returns the start position of the span.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56677,"byte_end":56720,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56725,"byte_end":56734,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56867,"byte_end":56870,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"end","qualname":"<StrSpan>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end position of the span.\n","sig":null,"attributes":[{"value":"/ Returns the end position of the span.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56800,"byte_end":56841,"line_start":40,"line_end":40,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56846,"byte_end":56855,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56997,"byte_end":57002,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"range","qualname":"<StrSpan>::range","value":"pub fn range(&Self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the range of the span.\n","sig":null,"attributes":[{"value":"/ Returns the range of the span.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56937,"byte_end":56971,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56976,"byte_end":56985,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57134,"byte_end":57140,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"as_str","qualname":"<StrSpan>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the span as a string slice\n","sig":null,"attributes":[{"value":"/ Returns the span as a string slice","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57070,"byte_end":57108,"line_start":52,"line_end":52,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57113,"byte_end":57122,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":57923,"byte_end":57933,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"XmlCharExt","qualname":"::xmlchar::XmlCharExt","value":"XmlCharExt","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" Extension methods for XML-subset only operations.\n","sig":null,"attributes":[{"value":"/ Extension methods for XML-subset only operations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":57859,"byte_end":57912,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58061,"byte_end":58078,"line_start":5,"line_end":5,"column_start":8,"column_end":25},"name":"is_xml_name_start","qualname":"::xmlchar::XmlCharExt::is_xml_name_start","value":"pub fn is_xml_name_start(&Self) -> bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Checks if the value is within the\n [NameStartChar](https://www.w3.org/TR/xml/#NT-NameStartChar) range.\n","sig":null,"attributes":[{"value":"/ Checks if the value is within the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":57940,"byte_end":57977,"line_start":3,"line_end":3,"column_start":5,"column_end":42}},{"value":"/ [NameStartChar](https://www.w3.org/TR/xml/#NT-NameStartChar) range.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":57982,"byte_end":58053,"line_start":4,"line_end":4,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58211,"byte_end":58222,"line_start":9,"line_end":9,"column_start":8,"column_end":19},"name":"is_xml_name","qualname":"::xmlchar::XmlCharExt::is_xml_name","value":"pub fn is_xml_name(&Self) -> bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Checks if the value is within the\n [NameChar](https://www.w3.org/TR/xml/#NT-NameChar) range.\n","sig":null,"attributes":[{"value":"/ Checks if the value is within the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58100,"byte_end":58137,"line_start":7,"line_end":7,"column_start":5,"column_end":42}},{"value":"/ [NameChar](https://www.w3.org/TR/xml/#NT-NameChar) range.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58142,"byte_end":58203,"line_start":8,"line_end":8,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58347,"byte_end":58358,"line_start":13,"line_end":13,"column_start":8,"column_end":19},"name":"is_xml_char","qualname":"::xmlchar::XmlCharExt::is_xml_char","value":"pub fn is_xml_char(&Self) -> bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Checks if the value is within the\n [Char](https://www.w3.org/TR/xml/#NT-Char) range.\n","sig":null,"attributes":[{"value":"/ Checks if the value is within the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58244,"byte_end":58281,"line_start":11,"line_end":11,"column_start":5,"column_end":42}},{"value":"/ [Char](https://www.w3.org/TR/xml/#NT-Char) range.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":58286,"byte_end":58339,"line_start":12,"line_end":12,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":153},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60344,"byte_end":60354,"line_start":90,"line_end":90,"column_start":11,"column_end":21},"name":"XmlByteExt","qualname":"::xmlchar::XmlByteExt","value":"XmlByteExt","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" Extension methods for XML-subset only operations.\n","sig":null,"attributes":[{"value":"/ Extension methods for XML-subset only operations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60280,"byte_end":60333,"line_start":89,"line_end":89,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60423,"byte_end":60435,"line_start":94,"line_end":94,"column_start":8,"column_end":20},"name":"is_xml_digit","qualname":"::xmlchar::XmlByteExt::is_xml_digit","value":"pub fn is_xml_digit(&Self) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Checks if byte is a digit.","sig":null,"attributes":[{"value":"/ Checks if byte is a digit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60361,"byte_end":60391,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60396,"byte_end":60399,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ `[0-9]`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60404,"byte_end":60415,"line_start":93,"line_end":93,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60529,"byte_end":60545,"line_start":99,"line_end":99,"column_start":8,"column_end":24},"name":"is_xml_hex_digit","qualname":"::xmlchar::XmlByteExt::is_xml_hex_digit","value":"pub fn is_xml_hex_digit(&Self) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Checks if byte is a hex digit.","sig":null,"attributes":[{"value":"/ Checks if byte is a hex digit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60457,"byte_end":60491,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60496,"byte_end":60499,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ `[0-9A-Fa-f]`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60504,"byte_end":60521,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60633,"byte_end":60645,"line_start":104,"line_end":104,"column_start":8,"column_end":20},"name":"is_xml_space","qualname":"::xmlchar::XmlByteExt::is_xml_space","value":"pub fn is_xml_space(&Self) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Checks if byte is a space.","sig":null,"attributes":[{"value":"/ Checks if byte is a space.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60567,"byte_end":60597,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60602,"byte_end":60605,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ `[ \\r\\n\\t]`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60610,"byte_end":60625,"line_start":103,"line_end":103,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60738,"byte_end":60751,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"is_xml_letter","qualname":"::xmlchar::XmlByteExt::is_xml_letter","value":"pub fn is_xml_letter(&Self) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Checks if byte is an ASCII char.","sig":null,"attributes":[{"value":"/ Checks if byte is an ASCII char.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60667,"byte_end":60703,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60708,"byte_end":60711,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ `[A-Za-z]`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60716,"byte_end":60730,"line_start":108,"line_end":108,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60877,"byte_end":60888,"line_start":113,"line_end":113,"column_start":8,"column_end":19},"name":"is_xml_name","qualname":"::xmlchar::XmlByteExt::is_xml_name","value":"pub fn is_xml_name(&Self) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Checks if byte is within the ASCII\n [Char](https://www.w3.org/TR/xml/#NT-Char) range.\n","sig":null,"attributes":[{"value":"/ Checks if byte is within the ASCII","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60773,"byte_end":60811,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ [Char](https://www.w3.org/TR/xml/#NT-Char) range.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/xmlchar.rs","byte_start":60816,"byte_end":60869,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":446},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2681,"byte_end":2692,"line_start":95,"line_end":95,"column_start":5,"column_end":16},"name":"Declaration","qualname":"::Token::Declaration","value":"Token::Declaration { version, encoding, standalone, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Declaration token.","sig":null,"attributes":[{"value":"/ Declaration token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2255,"byte_end":2277,"line_start":86,"line_end":86,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2290,"byte_end":2301,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ <?xml version='1.0' encoding='UTF-8' standalone='yes'?>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2306,"byte_end":2365,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/                ---                                      - version","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2370,"byte_end":2439,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/                               -----                     - encoding?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2444,"byte_end":2515,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/                                                  ---    - standalone?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2520,"byte_end":2593,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/ ------------------------------------------------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2598,"byte_end":2664,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2669,"byte_end":2676,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3046,"byte_end":3067,"line_start":110,"line_end":110,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::Token::ProcessingInstruction","value":"Token::ProcessingInstruction { target, content, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Processing instruction token.","sig":null,"attributes":[{"value":"/ Processing instruction token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2837,"byte_end":2870,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2875,"byte_end":2878,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2883,"byte_end":2894,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ <?target content?>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2899,"byte_end":2921,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/   ------           - target","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2926,"byte_end":2957,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/          -------   - content?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2962,"byte_end":2995,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ ------------------ - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3000,"byte_end":3029,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3034,"byte_end":3041,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":455},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3315,"byte_end":3322,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"Comment","qualname":"::Token::Comment","value":"Token::Comment { text, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Comment token.","sig":null,"attributes":[{"value":"/ Comment token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3176,"byte_end":3194,"line_start":116,"line_end":116,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3199,"byte_end":3202,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3207,"byte_end":3218,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ <!-- text -->","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3223,"byte_end":3240,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/     ------    - text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3245,"byte_end":3269,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ ------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3274,"byte_end":3298,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3303,"byte_end":3310,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":458},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3677,"byte_end":3685,"line_start":136,"line_end":136,"column_start":5,"column_end":13},"name":"DtdStart","qualname":"::Token::DtdStart","value":"Token::DtdStart { name, external_id, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" DOCTYPE start token.","sig":null,"attributes":[{"value":"/ DOCTYPE start token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3391,"byte_end":3415,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3420,"byte_end":3423,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3428,"byte_end":3439,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ <!DOCTYPE greeting SYSTEM \"hello.dtd\" [","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3444,"byte_end":3487,"line_start":131,"line_end":131,"column_start":5,"column_end":48}},{"value":"/           --------                      - name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3492,"byte_end":3542,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/                    ------------------   - external_id?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3547,"byte_end":3605,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ --------------------------------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3610,"byte_end":3660,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3665,"byte_end":3672,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":462},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4081,"byte_end":4089,"line_start":150,"line_end":150,"column_start":5,"column_end":13},"name":"EmptyDtd","qualname":"::Token::EmptyDtd","value":"Token::EmptyDtd { name, external_id, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Empty DOCTYPE token.","sig":null,"attributes":[{"value":"/ Empty DOCTYPE token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3799,"byte_end":3823,"line_start":142,"line_end":142,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3828,"byte_end":3831,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3836,"byte_end":3847,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ <!DOCTYPE greeting SYSTEM \"hello.dtd\">","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3852,"byte_end":3894,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/           --------                     - name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3899,"byte_end":3948,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/                    ------------------  - external_id?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":3953,"byte_end":4010,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/ -------------------------------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4015,"byte_end":4064,"line_start":148,"line_end":148,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4069,"byte_end":4076,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":466},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4520,"byte_end":4537,"line_start":166,"line_end":166,"column_start":5,"column_end":22},"name":"EntityDeclaration","qualname":"::Token::EntityDeclaration","value":"Token::EntityDeclaration { name, definition, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" ENTITY token.","sig":null,"attributes":[{"value":"/ ENTITY token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4203,"byte_end":4220,"line_start":156,"line_end":156,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4225,"byte_end":4228,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Can appear only inside the DTD.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4233,"byte_end":4268,"line_start":158,"line_end":158,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4281,"byte_end":4292,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ <!ENTITY ns_extend \"http://test.com\">","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4297,"byte_end":4338,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/          ---------                    - name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4343,"byte_end":4391,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"/                     ---------------   - definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4396,"byte_end":4450,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/ ------------------------------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4455,"byte_end":4503,"line_start":164,"line_end":164,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4508,"byte_end":4515,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":470},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4779,"byte_end":4785,"line_start":180,"line_end":180,"column_start":5,"column_end":11},"name":"DtdEnd","qualname":"::Token::DtdEnd","value":"Token::DtdEnd { span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" DOCTYPE end token.","sig":null,"attributes":[{"value":"/ DOCTYPE end token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4648,"byte_end":4670,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4675,"byte_end":4678,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4683,"byte_end":4694,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ <!DOCTYPE svg [","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4699,"byte_end":4718,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/    ...","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4723,"byte_end":4733,"line_start":176,"line_end":176,"column_start":5,"column_end":15}},{"value":"/ ]>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4738,"byte_end":4744,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/ -- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4749,"byte_end":4762,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4767,"byte_end":4774,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":472},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5044,"byte_end":5056,"line_start":192,"line_end":192,"column_start":5,"column_end":17},"name":"ElementStart","qualname":"::Token::ElementStart","value":"Token::ElementStart { prefix, local, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Element start token.","sig":null,"attributes":[{"value":"/ Element start token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4827,"byte_end":4851,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4856,"byte_end":4859,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4864,"byte_end":4875,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/ <ns:elem attr=\"value\"/>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4880,"byte_end":4907,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/  --                     - prefix","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4912,"byte_end":4948,"line_start":188,"line_end":188,"column_start":5,"column_end":41}},{"value":"/     ----                - local","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4953,"byte_end":4988,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ --------                - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":4993,"byte_end":5027,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5032,"byte_end":5039,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":476},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5400,"byte_end":5409,"line_start":207,"line_end":207,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::Token::Attribute","value":"Token::Attribute { prefix, local, value, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Attribute token.","sig":null,"attributes":[{"value":"/ Attribute token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5155,"byte_end":5175,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5180,"byte_end":5183,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5188,"byte_end":5199,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ <elem ns:attr=\"value\"/>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5204,"byte_end":5231,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/       --              - prefix","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5236,"byte_end":5270,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/          ----         - local","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5275,"byte_end":5308,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/                -----  - value","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5313,"byte_end":5346,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/       --------------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5351,"byte_end":5383,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5388,"byte_end":5395,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":481},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6041,"byte_end":6051,"line_start":233,"line_end":233,"column_start":5,"column_end":15},"name":"ElementEnd","qualname":"::Token::ElementEnd","value":"Token::ElementEnd { end, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Element end token.","sig":null,"attributes":[{"value":"/ Element end token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5536,"byte_end":5558,"line_start":214,"line_end":214,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5563,"byte_end":5566,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5571,"byte_end":5582,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ <ns:elem>text</ns:elem>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5587,"byte_end":5614,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/                         - ElementEnd::Open","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5619,"byte_end":5665,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/         -               - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5670,"byte_end":5704,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5709,"byte_end":5716,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5721,"byte_end":5724,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5729,"byte_end":5740,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ <ns:elem>text</ns:elem>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5745,"byte_end":5772,"line_start":223,"line_end":223,"column_start":5,"column_end":32}},{"value":"/                -- ----  - ElementEnd::Close(prefix, local)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5777,"byte_end":5839,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/              ---------- - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5844,"byte_end":5878,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5883,"byte_end":5890,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5895,"byte_end":5898,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5903,"byte_end":5914,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ <ns:elem/>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5919,"byte_end":5933,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/                         - ElementEnd::Empty","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5938,"byte_end":5985,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/         --              - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":5990,"byte_end":6024,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6029,"byte_end":6036,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":484},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6474,"byte_end":6478,"line_start":250,"line_end":250,"column_start":5,"column_end":9},"name":"Text","qualname":"::Token::Text","value":"Token::Text { text }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Text token.","sig":null,"attributes":[{"value":"/ Text token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6122,"byte_end":6137,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6142,"byte_end":6145,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Contains text between elements including whitespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6150,"byte_end":6207,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/ Basically everything between `>` and `<`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6212,"byte_end":6257,"line_start":241,"line_end":241,"column_start":5,"column_end":50}},{"value":"/ Except `]]>`, which is not allowed and will lead to an error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6262,"byte_end":6327,"line_start":242,"line_end":242,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6332,"byte_end":6335,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6340,"byte_end":6351,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ <p> text </p>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6356,"byte_end":6373,"line_start":245,"line_end":245,"column_start":5,"column_end":22}},{"value":"/    ------     - text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6378,"byte_end":6402,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6407,"byte_end":6414,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6419,"byte_end":6422,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The token span is equal to the `text`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6427,"byte_end":6469,"line_start":249,"line_end":249,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":486},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6687,"byte_end":6692,"line_start":261,"line_end":261,"column_start":5,"column_end":10},"name":"Cdata","qualname":"::Token::Cdata","value":"Token::Cdata { text, span }","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" CDATA token.","sig":null,"attributes":[{"value":"/ CDATA token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6520,"byte_end":6536,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6541,"byte_end":6544,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6549,"byte_end":6560,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ <p><![CDATA[text]]></p>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6565,"byte_end":6592,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/             ----        - text","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6597,"byte_end":6631,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/    ----------------     - span","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6636,"byte_end":6670,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6675,"byte_end":6682,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":444},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2239,"byte_end":2244,"line_start":85,"line_end":85,"column_start":10,"column_end":15},"name":"Token","qualname":"::Token","value":"pub enum Token<'a> {\n    Declaration {\n        version: StrSpan,\n        encoding: Option<StrSpan>,\n        standalone: Option<bool>,\n        span: StrSpan,\n    },\n    ProcessingInstruction {\n        target: StrSpan,\n        content: Option<StrSpan>,\n        span: StrSpan,\n    },\n    Comment {\n        text: StrSpan,\n        span: StrSpan,\n    },\n    DtdStart {\n        name: StrSpan,\n        external_id: Option<ExternalId>,\n        span: StrSpan,\n    },\n    EmptyDtd {\n        name: StrSpan,\n        external_id: Option<ExternalId>,\n        span: StrSpan,\n    },\n    EntityDeclaration {\n        name: StrSpan,\n        definition: EntityDefinition,\n        span: StrSpan,\n    },\n    DtdEnd {\n        span: StrSpan,\n    },\n    ElementStart {\n        prefix: StrSpan,\n        local: StrSpan,\n        span: StrSpan,\n    },\n    Attribute {\n        prefix: StrSpan,\n        local: StrSpan,\n        value: StrSpan,\n        span: StrSpan,\n    },\n    ElementEnd {\n        end: ElementEnd,\n        span: StrSpan,\n    },\n    Text {\n        text: StrSpan,\n    },\n    Cdata {\n        text: StrSpan,\n        span: StrSpan,\n    },\n}","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":" An XML token.\n","sig":null,"attributes":[{"value":"/ An XML token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2138,"byte_end":2155,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":2156,"byte_end":2178,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6887,"byte_end":6891,"line_start":272,"line_end":272,"column_start":5,"column_end":9},"name":"Open","qualname":"::ElementEnd::Open","value":"ElementEnd::Open","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Indicates `>`\n","sig":null,"attributes":[{"value":"/ Indicates `>`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6865,"byte_end":6882,"line_start":271,"line_end":271,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":516},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6925,"byte_end":6930,"line_start":274,"line_end":274,"column_start":5,"column_end":10},"name":"Close","qualname":"::ElementEnd::Close","value":"ElementEnd::Close(StrSpan, StrSpan)","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Indicates `</name>`\n","sig":null,"attributes":[{"value":"/ Indicates `</name>`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6897,"byte_end":6920,"line_start":273,"line_end":273,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6985,"byte_end":6990,"line_start":276,"line_end":276,"column_start":5,"column_end":10},"name":"Empty","qualname":"::ElementEnd::Empty","value":"ElementEnd::Empty","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Indicates `/>`\n","sig":null,"attributes":[{"value":"/ Indicates `/>`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6962,"byte_end":6980,"line_start":275,"line_end":275,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":512},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6844,"byte_end":6854,"line_start":270,"line_end":270,"column_start":10,"column_end":20},"name":"ElementEnd","qualname":"::ElementEnd","value":"pub enum ElementEnd<'a> { Open, Close(StrSpan, StrSpan), Empty, }","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":520}],"decl_id":null,"docs":" `ElementEnd` token.\n","sig":null,"attributes":[{"value":"/ `ElementEnd` token.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6760,"byte_end":6783,"line_start":268,"line_end":268,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7188,"byte_end":7194,"line_start":284,"line_end":284,"column_start":5,"column_end":11},"name":"System","qualname":"::ExternalId::System","value":"ExternalId::System(StrSpan)","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":550},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7213,"byte_end":7219,"line_start":285,"line_end":285,"column_start":5,"column_end":11},"name":"Public","qualname":"::ExternalId::Public","value":"ExternalId::Public(StrSpan, StrSpan)","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":545},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7167,"byte_end":7177,"line_start":283,"line_end":283,"column_start":10,"column_end":20},"name":"ExternalId","qualname":"::ExternalId","value":"pub enum ExternalId<'a> { System(StrSpan), Public(StrSpan, StrSpan), }","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":550}],"decl_id":null,"docs":" Representation of the [ExternalID](https://www.w3.org/TR/xml/#NT-ExternalID) value.\n","sig":null,"attributes":[{"value":"/ Representation of the [ExternalID](https://www.w3.org/TR/xml/#NT-ExternalID) value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":6996,"byte_end":7083,"line_start":280,"line_end":280,"column_start":1,"column_end":88}},{"value":"allow(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7084,"byte_end":7106,"line_start":281,"line_end":281,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7447,"byte_end":7458,"line_start":293,"line_end":293,"column_start":5,"column_end":16},"name":"EntityValue","qualname":"::EntityDefinition::EntityValue","value":"EntityDefinition::EntityValue(StrSpan)","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":582},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7477,"byte_end":7487,"line_start":294,"line_end":294,"column_start":5,"column_end":15},"name":"ExternalId","qualname":"::EntityDefinition::ExternalId","value":"EntityDefinition::ExternalId(ExternalId)","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":577},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7420,"byte_end":7436,"line_start":292,"line_end":292,"column_start":10,"column_end":26},"name":"EntityDefinition","qualname":"::EntityDefinition","value":"pub enum EntityDefinition<'a> {\n    EntityValue(StrSpan),\n    ExternalId(ExternalId),\n}","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":582}],"decl_id":null,"docs":" Representation of the [EntityDef](https://www.w3.org/TR/xml/#NT-EntityDef) value.\n","sig":null,"attributes":[{"value":"/ Representation of the [EntityDef](https://www.w3.org/TR/xml/#NT-EntityDef) value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7251,"byte_end":7336,"line_start":289,"line_end":289,"column_start":1,"column_end":86}},{"value":"allow(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7337,"byte_end":7359,"line_start":290,"line_end":290,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7840,"byte_end":7849,"line_start":316,"line_end":316,"column_start":12,"column_end":21},"name":"Tokenizer","qualname":"::Tokenizer","value":"Tokenizer {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":" Tokenizer for the XML structure.\n","sig":null,"attributes":[{"value":"/ Tokenizer for the XML structure.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7792,"byte_end":7828,"line_start":315,"line_end":315,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8965,"byte_end":8978,"line_start":359,"line_end":359,"column_start":12,"column_end":25},"name":"from_fragment","qualname":"<Tokenizer>::from_fragment","value":"pub fn from_fragment(&'a str, core::ops::Range<usize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables document fragment parsing.","sig":null,"attributes":[{"value":"/ Enables document fragment parsing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8611,"byte_end":8649,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8654,"byte_end":8657,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ By default, `xmlparser` will check for DTD, root element, etc.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8662,"byte_end":8728,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/ But if we have to parse an XML fragment, it will lead to an error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8733,"byte_end":8803,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ This method switches the parser to the root element content parsing mode,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8808,"byte_end":8885,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ so it will treat any data as a content of the root element.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8890,"byte_end":8953,"line_start":358,"line_end":358,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32013,"byte_end":32018,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32649,"byte_end":32654,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34210,"byte_end":34215,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35963,"byte_end":35974,"line_start":146,"line_end":146,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38221,"byte_end":38232,"line_start":203,"line_end":203,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38572,"byte_end":38579,"line_start":220,"line_end":220,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38813,"byte_end":38820,"line_start":229,"line_end":229,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39735,"byte_end":39741,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39946,"byte_end":39952,"line_start":51,"line_end":51,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40135,"byte_end":40141,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56267,"byte_end":56274,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56418,"byte_end":56425,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57424,"byte_end":57431,"line_start":65,"line_end":65,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57615,"byte_end":57622,"line_start":71,"line_end":71,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57755,"byte_end":57762,"line_start":77,"line_end":77,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7974,"byte_end":7983,"line_start":323,"line_end":323,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8591,"byte_end":8600,"line_start":352,"line_end":352,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":31020,"byte_end":31029,"line_start":987,"line_end":987,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32013,"byte_end":32018,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":32649,"byte_end":32654,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":232},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":34210,"byte_end":34215,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":232},"to":{"krate":4,"index":2326}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":35963,"byte_end":35974,"line_start":146,"line_end":146,"column_start":23,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":287},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38221,"byte_end":38232,"line_start":203,"line_end":203,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":287},"to":{"krate":4,"index":2326}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38572,"byte_end":38579,"line_start":220,"line_end":220,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/error.rs","byte_start":38813,"byte_end":38820,"line_start":229,"line_end":229,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39735,"byte_end":39741,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":39946,"byte_end":39952,"line_start":51,"line_end":51,"column_start":32,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/stream.rs","byte_start":40135,"byte_end":40141,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56267,"byte_end":56274,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":56418,"byte_end":56425,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57424,"byte_end":57431,"line_start":65,"line_end":65,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57615,"byte_end":57622,"line_start":71,"line_end":71,"column_start":27,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/strspan.rs","byte_start":57755,"byte_end":57762,"line_start":77,"line_end":77,"column_start":20,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":3064}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":7974,"byte_end":7983,"line_start":323,"line_end":323,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":173},"to":{"krate":1,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":8591,"byte_end":8600,"line_start":352,"line_end":352,"column_start":10,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/xmlparser-0.13.3/src/lib.rs","byte_start":31020,"byte_end":31029,"line_start":987,"line_end":987,"column_start":23,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":173},"to":{"krate":1,"index":7310}}]}