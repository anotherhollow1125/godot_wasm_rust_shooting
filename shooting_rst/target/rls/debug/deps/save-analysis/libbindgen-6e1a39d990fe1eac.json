{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0","program":"/home/namn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bindgen","--edition=2018","/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"runtime\"","-C","metadata=6e1a39d990fe1eac","-C","extra-filename=-6e1a39d990fe1eac","--out-dir","/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps","-L","dependency=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps","--extern","bitflags=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libbitflags-f21dd3546e759a0e.rmeta","--extern","cexpr=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libcexpr-b8471f3349633d5b.rmeta","--extern","clang_sys=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libclang_sys-946f871673f50009.rmeta","--extern","lazy_static=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/liblazy_static-5c53d641eb010a81.rmeta","--extern","lazycell=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/liblazycell-05b01983d1848580.rmeta","--extern","peeking_take_while=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libpeeking_take_while-9cff6bed9a8ada4a.rmeta","--extern","proc_macro2=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libproc_macro2-7dd2162933f40441.rmeta","--extern","quote=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libquote-5e41371eeaa390f6.rmeta","--extern","regex=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libregex-85814fa774c3c1bd.rmeta","--extern","rustc_hash=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/librustc_hash-7bf68832c0f4b1a6.rmeta","--extern","shlex=/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libshlex-da61fa59b29a1a9a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/namn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/namn/Desktop/n/dev/minigame/shooting_rst/target/rls/debug/deps/libbindgen-6e1a39d990fe1eac.rmeta"},"prelude":{"crate_id":{"name":"bindgen","disambiguator":[10048677427651167485,16009171655983578631]},"crate_root":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src","external_crates":[{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":19,"id":{"name":"bitflags","disambiguator":[16730659889094014356,7128048099307846450]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[17429883251842719286,8759280939258129328]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":21,"id":{"name":"quote","disambiguator":[12624846919710797229,14755416449785470100]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":22,"id":{"name":"proc_macro","disambiguator":[2093069893297275651,16777481339829781235]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/dyngen.rs","num":23,"id":{"name":"proc_macro2","disambiguator":[10946182204138188654,119854076574976460]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":24,"id":{"name":"unicode_xid","disambiguator":[13219613387727977071,9632829167078983513]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":25,"id":{"name":"cexpr","disambiguator":[8836788120364545667,4206041519027665156]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":26,"id":{"name":"nom","disambiguator":[6690802095213921882,1931682329685928570]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":27,"id":{"name":"memchr","disambiguator":[14518394530756491520,16840662510850886035]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":28,"id":{"name":"clang_sys","disambiguator":[4567588249911678672,4431685367790552429]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":29,"id":{"name":"glob","disambiguator":[9421091976330955559,15707610982086083405]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":30,"id":{"name":"libc","disambiguator":[18091614471720634845,4949966746281602082]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":31,"id":{"name":"libloading","disambiguator":[15603966378039754826,16862511232923464341]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","num":32,"id":{"name":"cfg_if","disambiguator":[16080861371651131289,6278962951450619567]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/regex_set.rs","num":33,"id":{"name":"regex","disambiguator":[14925812461441324239,3359134171764918376]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/regex_set.rs","num":34,"id":{"name":"regex_syntax","disambiguator":[4478446441147620091,4380241286605820191]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","num":35,"id":{"name":"peeking_take_while","disambiguator":[14227767342779748825,11151070405344412476]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","num":36,"id":{"name":"lazycell","disambiguator":[1819847609953831693,1925746903925520832]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":37,"id":{"name":"rustc_hash","disambiguator":[16035510083443015177,17061807868707357065]}},{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","num":38,"id":{"name":"shlex","disambiguator":[18147968575770062253,3686188841111974872]}}],"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":0,"byte_end":84718,"line_start":1,"line_end":2488,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5180},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":847903,"byte_end":847928,"line_start":3,"line_end":3,"column_start":30,"column_end":55},"alias_span":null,"name":"EnumVariantCustomBehavior","value":"","parent":{"krate":0,"index":3858}},{"kind":"Use","ref_id":{"krate":0,"index":5210},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":847930,"byte_end":847946,"line_start":3,"line_end":3,"column_start":57,"column_end":73},"alias_span":null,"name":"EnumVariantValue","value":"","parent":{"krate":0,"index":3858}},{"kind":"Use","ref_id":{"krate":0,"index":5302},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":847973,"byte_end":847980,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"alias_span":null,"name":"IntKind","value":"","parent":{"krate":0,"index":3858}},{"kind":"Use","ref_id":{"krate":0,"index":4478},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1827,"byte_end":1841,"line_start":68,"line_end":68,"column_start":26,"column_end":40},"alias_span":null,"name":"AliasVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4441},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1843,"byte_end":1856,"line_start":68,"line_end":68,"column_start":42,"column_end":55},"alias_span":null,"name":"EnumVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4465},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1858,"byte_end":1876,"line_start":68,"line_end":68,"column_start":57,"column_end":75},"alias_span":null,"name":"MacroTypeVariation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4514},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1945,"byte_end":1955,"line_start":71,"line_end":71,"column_start":5,"column_end":15},"alias_span":null,"name":"RustTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1207},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1957,"byte_end":1975,"line_start":71,"line_end":71,"column_start":17,"column_end":35},"alias_span":null,"name":"LATEST_STABLE_RUST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4559},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1977,"byte_end":1996,"line_start":71,"line_end":71,"column_start":37,"column_end":56},"alias_span":null,"name":"RUST_TARGET_STRINGS","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":0,"byte_end":84718,"line_start":1,"line_end":2488,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":349},{"krate":0,"index":1197},{"krate":0,"index":1211},{"krate":0,"index":3788},{"krate":0,"index":3815},{"krate":0,"index":3834},{"krate":0,"index":3858},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3943},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3950},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":5757},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5771},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5786},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5792},{"krate":0,"index":5794},{"krate":0,"index":5820},{"krate":0,"index":5823},{"krate":0,"index":5825},{"krate":0,"index":5828},{"krate":0,"index":5830},{"krate":0,"index":5833},{"krate":0,"index":5835},{"krate":0,"index":5838},{"krate":0,"index":5840},{"krate":0,"index":5843},{"krate":0,"index":5846},{"krate":0,"index":3978},{"krate":0,"index":3985},{"krate":0,"index":5869},{"krate":0,"index":5873},{"krate":0,"index":5875},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":5877},{"krate":0,"index":5956},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4157},{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":4163},{"krate":0,"index":5980},{"krate":0,"index":5982},{"krate":0,"index":4165}],"decl_id":null,"docs":" Generate Rust bindings for C and C++ libraries.","sig":null,"attributes":[{"value":"/ Generate Rust bindings for C and C++ libraries.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provide a C/C++ header file, receive Rust FFI code to call into C/C++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":56,"byte_end":129,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ functions and use types defined in the header.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":130,"byte_end":180,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":181,"byte_end":184,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See the [`Builder`](./struct.Builder.html) struct for usage.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":185,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":250,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Users Guide](https://rust-lang.github.io/rust-bindgen/) for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":254,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ additional documentation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":327,"byte_end":356,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":357,"byte_end":379,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"deny(unused_extern_crates)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":380,"byte_end":410,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":498,"byte_end":531,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":564,"byte_end":591,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4167},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87317,"byte_end":87323,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::clang::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":4168}],"decl_id":null,"docs":" A cursor into the Clang AST, pointing to an AST node.","sig":null,"attributes":[{"value":"/ A cursor into the Clang AST, pointing to an AST node.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87146,"byte_end":87203,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87204,"byte_end":87207,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ We call the AST node pointed to by the cursor the cursor's \"referent\".","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87208,"byte_end":87282,"line_start":19,"line_end":19,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87861,"byte_end":87864,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"usr","qualname":"<Cursor>::usr","value":"pub fn usr(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the Unified Symbol Resolution for this cursor's referent, if\n available.","sig":null,"attributes":[{"value":"/ Get the Unified Symbol Resolution for this cursor's referent, if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87680,"byte_end":87748,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ available.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87753,"byte_end":87767,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87772,"byte_end":87775,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The USR can be used to compare entities across translation units.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87780,"byte_end":87849,"line_start":42,"line_end":42,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88126,"byte_end":88140,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_declaration","qualname":"<Cursor>::is_declaration","value":"pub fn is_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a declaration?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a declaration?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88070,"byte_end":88114,"line_start":52,"line_end":52,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88280,"byte_end":88288,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Cursor>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's spelling.\n","sig":null,"attributes":[{"value":"/ Get this cursor's referent's spelling.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88226,"byte_end":88268,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88589,"byte_end":88601,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"display_name","qualname":"<Cursor>::display_name","value":"pub fn display_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get this cursor's referent's display name.","sig":null,"attributes":[{"value":"/ Get this cursor's referent's display name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88392,"byte_end":88438,"line_start":62,"line_end":62,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88443,"byte_end":88446,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This is not necessarily a valid identifier. It includes extra","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88451,"byte_end":88516,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ information, such as parameters for a function, etc.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88521,"byte_end":88577,"line_start":65,"line_end":65,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88771,"byte_end":88779,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"mangling","qualname":"<Cursor>::mangling","value":"pub fn mangling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the mangled name of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the mangled name of this cursor's referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88708,"byte_end":88759,"line_start":70,"line_end":70,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88995,"byte_end":89008,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"cxx_manglings","qualname":"<Cursor>::cxx_manglings","value":"pub fn cxx_manglings(&Self) -> Result<Vec<String>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Gets the C++ manglings for this cursor, or an error if the manglings\n are not available.\n","sig":null,"attributes":[{"value":"/ Gets the C++ manglings for this cursor, or an error if the manglings","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88884,"byte_end":88956,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ are not available.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":88961,"byte_end":88983,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89701,"byte_end":89711,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"is_builtin","qualname":"<Cursor>::is_builtin","value":"pub fn is_builtin(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the cursor refers to a built-in definition.\n","sig":null,"attributes":[{"value":"/ Returns whether the cursor refers to a built-in definition.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89626,"byte_end":89689,"line_start":96,"line_end":96,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90478,"byte_end":90492,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"lexical_parent","qualname":"<Cursor>::lexical_parent","value":"pub fn lexical_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the `Cursor` for this cursor's referent's lexical parent.","sig":null,"attributes":[{"value":"/ Get the `Cursor` for this cursor's referent's lexical parent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89828,"byte_end":89893,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89898,"byte_end":89901,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The lexical parent is the parent of the definition. The semantic parent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89906,"byte_end":89981,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ is the parent of the declaration. Generally, the lexical parent doesn't","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":89986,"byte_end":90061,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ have any effect on semantics, while the semantic parent does.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90066,"byte_end":90131,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90136,"byte_end":90139,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ In the following snippet, the `Foo` class would be the semantic parent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90144,"byte_end":90218,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ of the out-of-line `method` definition, while the lexical parent is the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90223,"byte_end":90298,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ translation unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90303,"byte_end":90324,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90329,"byte_end":90332,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90337,"byte_end":90347,"line_start":112,"line_end":112,"column_start":5,"column_end":15}},{"value":"/ class Foo {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90352,"byte_end":90367,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/     void method();","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90372,"byte_end":90394,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90399,"byte_end":90405,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90410,"byte_end":90413,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ void Foo::method() { /* ... */ }","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90418,"byte_end":90454,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90459,"byte_end":90466,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90821,"byte_end":90845,"line_start":131,"line_end":131,"column_start":12,"column_end":36},"name":"fallible_semantic_parent","qualname":"<Cursor>::fallible_semantic_parent","value":"pub fn fallible_semantic_parent(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent, if one is available.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent, if one is available.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90642,"byte_end":90702,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90707,"byte_end":90710,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90715,"byte_end":90784,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":90789,"byte_end":90809,"line_start":130,"line_end":130,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91267,"byte_end":91282,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"semantic_parent","qualname":"<Cursor>::semantic_parent","value":"pub fn semantic_parent(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's semantic parent.","sig":null,"attributes":[{"value":"/ Get the referent's semantic parent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91109,"byte_end":91148,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91153,"byte_end":91156,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ See documentation for `lexical_parent` for details on semantic vs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91161,"byte_end":91230,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ lexical parents.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91235,"byte_end":91255,"line_start":146,"line_end":146,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91657,"byte_end":91674,"line_start":157,"line_end":157,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Cursor>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of template arguments used by this cursor's referent,\n if the referent is either a template instantiation. Returns `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Return the number of template arguments used by this cursor's referent,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91362,"byte_end":91437,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ if the referent is either a template instantiation. Returns `None`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91442,"byte_end":91512,"line_start":152,"line_end":152,"column_start":5,"column_end":75}},{"value":"/ otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91517,"byte_end":91531,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91536,"byte_end":91539,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ NOTE: This may not return `Some` for partial template specializations,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91544,"byte_end":91618,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ see #193 and #194.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":91623,"byte_end":91645,"line_start":156,"line_end":156,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92965,"byte_end":92981,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<Cursor>::translation_unit","value":"pub fn translation_unit(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this referent's containing translation unit.","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this referent's containing translation unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92593,"byte_end":92666,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92671,"byte_end":92674,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that we shouldn't create a `TranslationUnit` struct here, because","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92679,"byte_end":92753,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ bindgen assumes there will only be one of them alive at a time, and","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92758,"byte_end":92829,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ disposes it on drop. That can change if this would be required, but I","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92834,"byte_end":92907,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ think we can survive fine without it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":92912,"byte_end":92953,"line_start":190,"line_end":190,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":93352,"byte_end":93363,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Cursor>::is_toplevel","value":"pub fn is_toplevel(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a top level construct?\n","sig":null,"attributes":[{"value":"/ Is the referent a top level construct?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":93298,"byte_end":93340,"line_start":203,"line_end":203,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94260,"byte_end":94276,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"is_template_like","qualname":"<Cursor>::is_template_like","value":"pub fn is_template_like(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are a few kinds of types that we need to treat specially, mainly\n not tracking the type declaration but the location of the cursor, given\n clang doesn't expose a proper declaration for these types.\n","sig":null,"attributes":[{"value":"/ There are a few kinds of types that we need to treat specially, mainly","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94027,"byte_end":94101,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ not tracking the type declaration but the location of the cursor, given","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94106,"byte_end":94181,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ clang doesn't expose a proper declaration for these types.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94186,"byte_end":94248,"line_start":224,"line_end":224,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94590,"byte_end":94612,"line_start":235,"line_end":235,"column_start":12,"column_end":34},"name":"is_macro_function_like","qualname":"<Cursor>::is_macro_function_like","value":"pub fn is_macro_function_like(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this Cursor pointing to a function-like macro definition?\n","sig":null,"attributes":[{"value":"/ Is this Cursor pointing to a function-like macro definition?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94514,"byte_end":94578,"line_start":234,"line_end":234,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94774,"byte_end":94778,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"kind","qualname":"<Cursor>::kind","value":"pub fn kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of referent this cursor is pointing to.\n","sig":null,"attributes":[{"value":"/ Get the kind of referent this cursor is pointing to.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94706,"byte_end":94762,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94893,"byte_end":94906,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"is_definition","qualname":"<Cursor>::is_definition","value":"pub fn is_definition(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is the cursor is a definition\n","sig":null,"attributes":[{"value":"/ Returns true is the cursor is a definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94835,"byte_end":94881,"line_start":244,"line_end":244,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95050,"byte_end":95076,"line_start":250,"line_end":250,"column_start":12,"column_end":38},"name":"is_template_specialization","qualname":"<Cursor>::is_template_specialization","value":"pub fn is_template_specialization(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":94992,"byte_end":95038,"line_start":249,"line_end":249,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95272,"byte_end":95301,"line_start":256,"line_end":256,"column_start":12,"column_end":41},"name":"is_fully_specialized_template","qualname":"<Cursor>::is_fully_specialized_template","value":"pub fn is_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a fully specialized template specialization without any\n remaining free template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a fully specialized template specialization without any","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95142,"byte_end":95217,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ remaining free template arguments?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95222,"byte_end":95260,"line_start":255,"line_end":255,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95618,"byte_end":95654,"line_start":264,"line_end":264,"column_start":12,"column_end":48},"name":"is_in_non_fully_specialized_template","qualname":"<Cursor>::is_in_non_fully_specialized_template","value":"pub fn is_in_non_fully_specialized_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent a template specialization that still has remaining free\n template arguments?\n","sig":null,"attributes":[{"value":"/ Is the referent a template specialization that still has remaining free","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95503,"byte_end":95578,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ template arguments?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":95583,"byte_end":95606,"line_start":263,"line_end":263,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96081,"byte_end":96089,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Cursor>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor pointing a valid referent?\n","sig":null,"attributes":[{"value":"/ Is this cursor pointing a valid referent?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96024,"byte_end":96069,"line_start":281,"line_end":281,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96228,"byte_end":96236,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"location","qualname":"<Cursor>::location","value":"pub fn location(&Self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" Get the source location for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location for the referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96171,"byte_end":96216,"line_start":286,"line_end":286,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96460,"byte_end":96466,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"extent","qualname":"<Cursor>::extent","value":"pub fn extent(&Self) -> CXSourceRange","parent":null,"children":[],"decl_id":null,"docs":" Get the source location range for the referent.\n","sig":null,"attributes":[{"value":"/ Get the source location range for the referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96397,"byte_end":96448,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96634,"byte_end":96645,"line_start":301,"line_end":301,"column_start":12,"column_end":23},"name":"raw_comment","qualname":"<Cursor>::raw_comment","value":"pub fn raw_comment(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the raw declaration comment for this referent, if one exists.\n","sig":null,"attributes":[{"value":"/ Get the raw declaration comment for this referent, if one exists.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96553,"byte_end":96622,"line_start":300,"line_end":300,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96933,"byte_end":96940,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(&Self) -> Comment","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's parsed comment.\n","sig":null,"attributes":[{"value":"/ Get the referent's parsed comment.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":96883,"byte_end":96921,"line_start":312,"line_end":312,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97133,"byte_end":97141,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"cur_type","qualname":"<Cursor>::cur_type","value":"pub fn cur_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the referent's type.\n","sig":null,"attributes":[{"value":"/ Get the referent's type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97093,"byte_end":97121,"line_start":321,"line_end":321,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97474,"byte_end":97484,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"definition","qualname":"<Cursor>::definition","value":"pub fn definition(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a reference to another type, or is\n a declaration, get the cursor pointing to the referenced type or type of\n the declared thing.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a reference to another type, or is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97278,"byte_end":97353,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ a declaration, get the cursor pointing to the referenced type or type of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97358,"byte_end":97434,"line_start":331,"line_end":331,"column_start":5,"column_end":81}},{"value":"/ the declared thing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97439,"byte_end":97462,"line_start":332,"line_end":332,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97927,"byte_end":97937,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"referenced","qualname":"<Cursor>::referenced","value":"pub fn referenced(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is reference type, get the cursor\n pointing to the referenced type.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is reference type, get the cursor","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97803,"byte_end":97874,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/ pointing to the referenced type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":97879,"byte_end":97915,"line_start":348,"line_end":348,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98463,"byte_end":98472,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"canonical","qualname":"<Cursor>::canonical","value":"pub fn canonical(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical cursor for this referent.","sig":null,"attributes":[{"value":"/ Get the canonical cursor for this referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98218,"byte_end":98265,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98270,"byte_end":98273,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Many types can be declared multiple times before finally being properly","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98278,"byte_end":98353,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ defined. This method allows us to get the canonical cursor for the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98358,"byte_end":98428,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ referent type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98433,"byte_end":98451,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98820,"byte_end":98831,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"specialized","qualname":"<Cursor>::specialized","value":"pub fn specialized(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor points to either a template specialization or a\n template instantiation, get a cursor pointing to the template definition\n that is being specialized.\n","sig":null,"attributes":[{"value":"/ Given that this cursor points to either a template specialization or a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98618,"byte_end":98692,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ template instantiation, get a cursor pointing to the template definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98697,"byte_end":98773,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ that is being specialized.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":98778,"byte_end":98808,"line_start":378,"line_end":378,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99279,"byte_end":99292,"line_start":394,"line_end":394,"column_start":12,"column_end":25},"name":"template_kind","qualname":"<Cursor>::template_kind","value":"pub fn template_kind(&Self) -> CXCursorKind","parent":null,"children":[],"decl_id":null,"docs":" Assuming that this cursor's referent is a template declaration, get the\n kind of cursor that would be generated for its specializations.\n","sig":null,"attributes":[{"value":"/ Assuming that this cursor's referent is a template declaration, get the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99120,"byte_end":99195,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ kind of cursor that would be generated for its specializations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99200,"byte_end":99267,"line_start":393,"line_end":393,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99517,"byte_end":99522,"line_start":401,"line_end":401,"column_start":12,"column_end":17},"name":"visit","qualname":"<Cursor>::visit","value":"pub fn visit<Visitor>(&Self, Visitor) where Visitor: FnMut(Cursor) ->\nCXChildVisitResult","parent":null,"children":[],"decl_id":null,"docs":" Traverse this cursor's referent and its children.","sig":null,"attributes":[{"value":"/ Traverse this cursor's referent and its children.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99384,"byte_end":99437,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99442,"byte_end":99445,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Call the given function on each AST node traversed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99450,"byte_end":99505,"line_start":400,"line_end":400,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99911,"byte_end":99927,"line_start":415,"line_end":415,"column_start":12,"column_end":28},"name":"collect_children","qualname":"<Cursor>::collect_children","value":"pub fn collect_children(&Self) -> Vec<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Collect all of this cursor's children into a vec and return them.\n","sig":null,"attributes":[{"value":"/ Collect all of this cursor's children into a vec and return them.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":99830,"byte_end":99899,"line_start":414,"line_end":414,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100167,"byte_end":100179,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Cursor>::has_children","value":"pub fn has_children(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have any children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have any children?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100116,"byte_end":100155,"line_start":424,"line_end":424,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100428,"byte_end":100453,"line_start":435,"line_end":435,"column_start":12,"column_end":37},"name":"has_at_least_num_children","qualname":"<Cursor>::has_at_least_num_children","value":"pub fn has_at_least_num_children(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this cursor have at least `n` children?\n","sig":null,"attributes":[{"value":"/ Does this cursor have at least `n` children?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100368,"byte_end":100416,"line_start":434,"line_end":434,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100944,"byte_end":100959,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"contains_cursor","qualname":"<Cursor>::contains_cursor","value":"pub fn contains_cursor(&Self, CXCursorKind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the given location contains a cursor with the given\n kind in the first level of nesting underneath (doesn't look\n recursively).\n","sig":null,"attributes":[{"value":"/ Returns whether the given location contains a cursor with the given","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100771,"byte_end":100842,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ kind in the first level of nesting underneath (doesn't look","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100847,"byte_end":100910,"line_start":450,"line_end":450,"column_start":5,"column_end":68}},{"value":"/ recursively).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":100915,"byte_end":100932,"line_start":451,"line_end":451,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101316,"byte_end":101335,"line_start":468,"line_end":468,"column_start":12,"column_end":31},"name":"is_inlined_function","qualname":"<Cursor>::is_inlined_function","value":"pub fn is_inlined_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the referent an inlined function?\n","sig":null,"attributes":[{"value":"/ Is the referent an inlined function?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101264,"byte_end":101304,"line_start":467,"line_end":467,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101547,"byte_end":101556,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<Cursor>::bit_width","value":"pub fn bit_width(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the width of this cursor's referent bit field, or `None` if the\n referent is not a bit field.\n","sig":null,"attributes":[{"value":"/ Get the width of this cursor's referent bit field, or `None` if the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101427,"byte_end":101498,"line_start":472,"line_end":472,"column_start":5,"column_end":76}},{"value":"/ referent is not a bit field.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101503,"byte_end":101535,"line_start":473,"line_end":473,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101893,"byte_end":101902,"line_start":487,"line_end":487,"column_start":12,"column_end":21},"name":"enum_type","qualname":"<Cursor>::enum_type","value":"pub fn enum_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the integer representation type used to hold this cursor's referent\n enum type.\n","sig":null,"attributes":[{"value":"/ Get the integer representation type used to hold this cursor's referent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101787,"byte_end":101862,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ enum type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":101867,"byte_end":101881,"line_start":486,"line_end":486,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102340,"byte_end":102356,"line_start":503,"line_end":503,"column_start":12,"column_end":28},"name":"enum_val_boolean","qualname":"<Cursor>::enum_val_boolean","value":"pub fn enum_val_boolean(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the boolean constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the boolean constant value for this cursor's enum variant referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102175,"byte_end":102250,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102255,"byte_end":102258,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102263,"byte_end":102328,"line_start":502,"line_end":502,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102764,"byte_end":102779,"line_start":516,"line_end":516,"column_start":12,"column_end":27},"name":"enum_val_signed","qualname":"<Cursor>::enum_val_signed","value":"pub fn enum_val_signed(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get the signed constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the signed constant value for this cursor's enum variant referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102600,"byte_end":102674,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102679,"byte_end":102682,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":102687,"byte_end":102752,"line_start":515,"line_end":515,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103190,"byte_end":103207,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"enum_val_unsigned","qualname":"<Cursor>::enum_val_unsigned","value":"pub fn enum_val_unsigned(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the unsigned constant value for this cursor's enum variant referent.","sig":null,"attributes":[{"value":"/ Get the unsigned constant value for this cursor's enum variant referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103024,"byte_end":103100,"line_start":526,"line_end":526,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103105,"byte_end":103108,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not an enum variant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103113,"byte_end":103178,"line_start":528,"line_end":528,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103535,"byte_end":103562,"line_start":540,"line_end":540,"column_start":12,"column_end":39},"name":"has_warn_unused_result_attr","qualname":"<Cursor>::has_warn_unused_result_attr","value":"pub fn has_warn_unused_result_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this cursor has the `warn_unused_result` attribute.\n","sig":null,"attributes":[{"value":"/ Whether this cursor has the `warn_unused_result` attribute.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":103460,"byte_end":103523,"line_start":539,"line_end":539,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":104698,"byte_end":104710,"line_start":572,"line_end":572,"column_start":12,"column_end":24},"name":"typedef_type","qualname":"<Cursor>::typedef_type","value":"pub fn typedef_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a `typedef`, get the `Type` that is\n being aliased.\n","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a `typedef`, get the `Type` that is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":104587,"byte_end":104663,"line_start":570,"line_end":570,"column_start":5,"column_end":81}},{"value":"/ being aliased.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":104668,"byte_end":104686,"line_start":571,"line_end":571,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105080,"byte_end":105087,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Cursor>::linkage","value":"pub fn linkage(&Self) -> CXLinkageKind","parent":null,"children":[],"decl_id":null,"docs":" Get the linkage kind for this cursor's referent.","sig":null,"attributes":[{"value":"/ Get the linkage kind for this cursor's referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":104954,"byte_end":105006,"line_start":584,"line_end":584,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105011,"byte_end":105014,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ This only applies to functions and variables.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105019,"byte_end":105068,"line_start":586,"line_end":586,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105236,"byte_end":105246,"line_start":592,"line_end":592,"column_start":12,"column_end":22},"name":"visibility","qualname":"<Cursor>::visibility","value":"pub fn visibility(&Self) -> CXVisibilityKind","parent":null,"children":[],"decl_id":null,"docs":" Get the visibility of this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the visibility of this cursor's referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105175,"byte_end":105224,"line_start":591,"line_end":591,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105554,"byte_end":105558,"line_start":601,"line_end":601,"column_start":12,"column_end":16},"name":"args","qualname":"<Cursor>::args","value":"pub fn args(&Self) -> Option<Vec<Cursor>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function, return cursors to its\n parameters.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function, return cursors to its","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105340,"byte_end":105414,"line_start":596,"line_end":596,"column_start":5,"column_end":79}},{"value":"/ parameters.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105419,"byte_end":105434,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105439,"byte_end":105442,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor's referent is not a function/method call or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105447,"byte_end":105521,"line_start":599,"line_end":599,"column_start":5,"column_end":79}},{"value":"/ declaration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105526,"byte_end":105542,"line_start":600,"line_end":600,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106184,"byte_end":106192,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Cursor>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this cursor's referent is a function/method call or\n declaration, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this cursor's referent is a function/method call or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":105937,"byte_end":106003,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/ declaration, return the number of arguments it takes.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106008,"byte_end":106065,"line_start":615,"line_end":615,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106070,"byte_end":106073,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the cursor's referent is not a function/method call or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106078,"byte_end":106151,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ declaration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106156,"byte_end":106172,"line_start":618,"line_end":618,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106498,"byte_end":106514,"line_start":631,"line_end":631,"column_start":12,"column_end":28},"name":"access_specifier","qualname":"<Cursor>::access_specifier","value":"pub fn access_specifier(&Self) -> CX_CXXAccessSpecifier","parent":null,"children":[],"decl_id":null,"docs":" Get the access specifier for this cursor's referent.\n","sig":null,"attributes":[{"value":"/ Get the access specifier for this cursor's referent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106430,"byte_end":106486,"line_start":630,"line_end":630,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106713,"byte_end":106729,"line_start":637,"line_end":637,"column_start":12,"column_end":28},"name":"is_mutable_field","qualname":"<Cursor>::is_mutable_field","value":"pub fn is_mutable_field(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a field declaration that is marked as\n `mutable`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a field declaration that is marked as","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106615,"byte_end":106682,"line_start":635,"line_end":635,"column_start":5,"column_end":72}},{"value":"/ `mutable`?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106687,"byte_end":106701,"line_start":636,"line_end":636,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106885,"byte_end":106900,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"offset_of_field","qualname":"<Cursor>::offset_of_field","value":"pub fn offset_of_field(&Self) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of the field represented by the Cursor.\n","sig":null,"attributes":[{"value":"/ Get the offset of the field represented by the Cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":106815,"byte_end":106873,"line_start":641,"line_end":641,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107242,"byte_end":107258,"line_start":653,"line_end":653,"column_start":12,"column_end":28},"name":"method_is_static","qualname":"<Cursor>::method_is_static","value":"pub fn method_is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `static`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `static`?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107156,"byte_end":107230,"line_start":652,"line_end":652,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107429,"byte_end":107444,"line_start":658,"line_end":658,"column_start":12,"column_end":27},"name":"method_is_const","qualname":"<Cursor>::method_is_const","value":"pub fn method_is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is declared `const`?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is declared `const`?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107344,"byte_end":107417,"line_start":657,"line_end":657,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107605,"byte_end":107622,"line_start":663,"line_end":663,"column_start":12,"column_end":29},"name":"method_is_virtual","qualname":"<Cursor>::method_is_virtual","value":"pub fn method_is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is virtual?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107529,"byte_end":107593,"line_start":662,"line_end":662,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107790,"byte_end":107812,"line_start":668,"line_end":668,"column_start":12,"column_end":34},"name":"method_is_pure_virtual","qualname":"<Cursor>::method_is_pure_virtual","value":"pub fn method_is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a member function that is pure virtual?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a member function that is pure virtual?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107709,"byte_end":107778,"line_start":667,"line_end":667,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107984,"byte_end":107999,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"is_virtual_base","qualname":"<Cursor>::is_virtual_base","value":"pub fn is_virtual_base(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this cursor's referent a struct or class with virtual members?\n","sig":null,"attributes":[{"value":"/ Is this cursor's referent a struct or class with virtual members?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":107903,"byte_end":107972,"line_start":672,"line_end":672,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108124,"byte_end":108132,"line_start":678,"line_end":678,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Cursor>::evaluate","value":"pub fn evaluate(&Self) -> Option<EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Try to evaluate this cursor.\n","sig":null,"attributes":[{"value":"/ Try to evaluate this cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108080,"byte_end":108112,"line_start":677,"line_end":677,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108260,"byte_end":108268,"line_start":683,"line_end":683,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Cursor>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Return the result type for this cursor\n","sig":null,"attributes":[{"value":"/ Return the result type for this cursor","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108206,"byte_end":108248,"line_start":682,"line_end":682,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108556,"byte_end":108562,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Cursor>::tokens","value":"pub fn tokens(&Self) -> RawTokens","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108493,"byte_end":108544,"line_start":694,"line_end":694,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108707,"byte_end":108719,"line_start":700,"line_end":700,"column_start":12,"column_end":24},"name":"cexpr_tokens","qualname":"<Cursor>::cexpr_tokens","value":"pub fn cexpr_tokens(Self) -> Vec<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Gets the tokens that correspond to that cursor as  `cexpr` tokens.\n","sig":null,"attributes":[{"value":"/ Gets the tokens that correspond to that cursor as  `cexpr` tokens.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108625,"byte_end":108695,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":109068,"byte_end":109090,"line_start":710,"line_end":710,"column_start":12,"column_end":34},"name":"get_included_file_name","qualname":"<Cursor>::get_included_file_name","value":"pub fn get_included_file_name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the real path name of a cursor of InclusionDirective kind.","sig":null,"attributes":[{"value":"/ Obtain the real path name of a cursor of InclusionDirective kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108888,"byte_end":108957,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108962,"byte_end":108965,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cursor does not include a file, otherwise the file's full name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":108970,"byte_end":109056,"line_start":709,"line_end":709,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":109461,"byte_end":109470,"line_start":723,"line_end":723,"column_start":12,"column_end":21},"name":"RawTokens","qualname":"::clang::RawTokens","value":"RawTokens {  }","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" A struct that owns the tokenizer result from a given cursor.\n","sig":null,"attributes":[{"value":"/ A struct that owns the tokenizer result from a given cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":109385,"byte_end":109449,"line_start":722,"line_end":722,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110271,"byte_end":110275,"line_start":753,"line_end":753,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawTokens>::iter","value":"pub fn iter(&Self) -> ClangTokenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over these tokens.\n","sig":null,"attributes":[{"value":"/ Get an iterator over these tokens.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110221,"byte_end":110259,"line_start":752,"line_end":752,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4172},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110940,"byte_end":110950,"line_start":779,"line_end":779,"column_start":12,"column_end":22},"name":"ClangToken","qualname":"::clang::ClangToken","value":"ClangToken { extent, kind }","parent":null,"children":[{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4175}],"decl_id":null,"docs":" A raw clang token, that exposes only kind, spelling, and extent. This is a\n slightly more convenient version of `CXToken` which owns the spelling\n string and extent.\n","sig":null,"attributes":[{"value":"/ A raw clang token, that exposes only kind, spelling, and extent. This is a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110736,"byte_end":110814,"line_start":775,"line_end":775,"column_start":1,"column_end":79}},{"value":"/ slightly more convenient version of `CXToken` which owns the spelling","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110815,"byte_end":110888,"line_start":776,"line_end":776,"column_start":1,"column_end":74}},{"value":"/ string and extent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110889,"byte_end":110911,"line_start":777,"line_end":777,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4174},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111082,"byte_end":111088,"line_start":783,"line_end":783,"column_start":9,"column_end":15},"name":"extent","qualname":"::clang::ClangToken::extent","value":"clang_sys::CXSourceRange","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" The extent of the token. This is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[{"value":"/ The extent of the token. This is the same as the relevant member from","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110981,"byte_end":111054,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ `CXToken`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111059,"byte_end":111073,"line_start":782,"line_end":782,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":4175},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111208,"byte_end":111212,"line_start":786,"line_end":786,"column_start":9,"column_end":13},"name":"kind","qualname":"::clang::ClangToken::kind","value":"i32","parent":{"krate":0,"index":4172},"children":[],"decl_id":null,"docs":" The kind of the token. This is the same as the relevant member from\n `CXToken`.\n","sig":null,"attributes":[{"value":"/ The kind of the token. This is the same as the relevant member from","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111109,"byte_end":111180,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ `CXToken`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111185,"byte_end":111199,"line_start":785,"line_end":785,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111325,"byte_end":111333,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"spelling","qualname":"<ClangToken>::spelling","value":"pub fn spelling(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the token spelling, without being converted to utf-8.\n","sig":null,"attributes":[{"value":"/ Get the token spelling, without being converted to utf-8.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111252,"byte_end":111313,"line_start":790,"line_end":790,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111569,"byte_end":111583,"line_start":799,"line_end":799,"column_start":12,"column_end":26},"name":"as_cexpr_token","qualname":"<ClangToken>::as_cexpr_token","value":"pub fn as_cexpr_token(&Self) -> Option<cexpr::token::Token>","parent":null,"children":[],"decl_id":null,"docs":" Converts a ClangToken to a `cexpr` token if possible.\n","sig":null,"attributes":[{"value":"/ Converts a ClangToken to a `cexpr` token if possible.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111500,"byte_end":111557,"line_start":798,"line_end":798,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112510,"byte_end":112528,"line_start":830,"line_end":830,"column_start":12,"column_end":30},"name":"ClangTokenIterator","qualname":"::clang::ClangTokenIterator","value":"ClangTokenIterator {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":" An iterator over a set of Tokens.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of Tokens.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112461,"byte_end":112498,"line_start":829,"line_end":829,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4178},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114167,"byte_end":114171,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"Type","qualname":"::clang::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":4179}],"decl_id":null,"docs":" The type of a node in clang's AST.\n","sig":null,"attributes":[{"value":"/ The type of a node in clang's AST.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114094,"byte_end":114132,"line_start":893,"line_end":893,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4184},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114915,"byte_end":114922,"line_start":925,"line_end":925,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::clang::LayoutError::Invalid","value":"LayoutError::Invalid","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" Asked for the layout of an invalid type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an invalid type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114866,"byte_end":114910,"line_start":924,"line_end":924,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4186},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114980,"byte_end":114990,"line_start":927,"line_end":927,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::clang::LayoutError::Incomplete","value":"LayoutError::Incomplete","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" Asked for the layout of an incomplete type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of an incomplete type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114928,"byte_end":114975,"line_start":926,"line_end":926,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4188},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115046,"byte_end":115055,"line_start":929,"line_end":929,"column_start":5,"column_end":14},"name":"Dependent","qualname":"::clang::LayoutError::Dependent","value":"LayoutError::Dependent","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" Asked for the layout of a dependent type.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a dependent type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114996,"byte_end":115041,"line_start":928,"line_end":928,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4190},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115134,"byte_end":115149,"line_start":931,"line_end":931,"column_start":5,"column_end":20},"name":"NotConstantSize","qualname":"::clang::LayoutError::NotConstantSize","value":"LayoutError::NotConstantSize","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" Asked for the layout of a type that does not have constant size.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a type that does not have constant size.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115061,"byte_end":115129,"line_start":930,"line_end":930,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4192},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115246,"byte_end":115262,"line_start":934,"line_end":934,"column_start":5,"column_end":21},"name":"InvalidFieldName","qualname":"::clang::LayoutError::InvalidFieldName","value":"LayoutError::InvalidFieldName","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" Asked for the layout of a field in a type that does not have such a\n field.\n","sig":null,"attributes":[{"value":"/ Asked for the layout of a field in a type that does not have such a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115155,"byte_end":115226,"line_start":932,"line_end":932,"column_start":5,"column_end":76}},{"value":"/ field.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115231,"byte_end":115241,"line_start":933,"line_end":933,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4194},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115301,"byte_end":115308,"line_start":936,"line_end":936,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::clang::LayoutError::Unknown","value":"LayoutError::Unknown","parent":{"krate":0,"index":4183},"children":[],"decl_id":null,"docs":" An unknown layout error.\n","sig":null,"attributes":[{"value":"/ An unknown layout error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115268,"byte_end":115296,"line_start":935,"line_end":935,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":4183},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114848,"byte_end":114859,"line_start":923,"line_end":923,"column_start":10,"column_end":21},"name":"LayoutError","qualname":"::clang::LayoutError","value":"pub enum LayoutError {\n    Invalid,\n    Incomplete,\n    Dependent,\n    NotConstantSize,\n    InvalidFieldName,\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4186},{"krate":0,"index":4188},{"krate":0,"index":4190},{"krate":0,"index":4192},{"krate":0,"index":4194}],"decl_id":null,"docs":" An error about the layout of a struct, class, or type.\n","sig":null,"attributes":[{"value":"/ An error about the layout of a struct, class, or type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114729,"byte_end":114787,"line_start":921,"line_end":921,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115841,"byte_end":115845,"line_start":956,"line_end":956,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> CXTypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get this type's kind.\n","sig":null,"attributes":[{"value":"/ Get this type's kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115804,"byte_end":115829,"line_start":955,"line_end":955,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115965,"byte_end":115976,"line_start":961,"line_end":961,"column_start":12,"column_end":23},"name":"declaration","qualname":"<Type>::declaration","value":"pub fn declaration(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to this type's declaration.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to this type's declaration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115900,"byte_end":115953,"line_start":960,"line_end":960,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":116201,"byte_end":116222,"line_start":970,"line_end":970,"column_start":12,"column_end":33},"name":"canonical_declaration","qualname":"<Type>::canonical_declaration","value":"pub fn canonical_declaration(&Self, Option<&Cursor>)\n-> Option<CanonicalTypeDeclaration>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical declaration of this type, if it is available.\n","sig":null,"attributes":[{"value":"/ Get the canonical declaration of this type, if it is available.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":116122,"byte_end":116189,"line_start":969,"line_end":969,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":117057,"byte_end":117065,"line_start":996,"line_end":996,"column_start":12,"column_end":20},"name":"spelling","qualname":"<Type>::spelling","value":"pub fn spelling(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get a raw display name for this type.\n","sig":null,"attributes":[{"value":"/ Get a raw display name for this type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":117004,"byte_end":117045,"line_start":995,"line_end":995,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":117537,"byte_end":117545,"line_start":1010,"line_end":1010,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type const qualified?\n","sig":null,"attributes":[{"value":"/ Is this type const qualified?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":117492,"byte_end":117525,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":118977,"byte_end":118981,"line_start":1048,"line_end":1048,"column_start":12,"column_end":16},"name":"size","qualname":"<Type>::size","value":"pub fn size(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type? Paper over invalid types by returning `0`\n for them.\n","sig":null,"attributes":[{"value":"/ What is the size of this type? Paper over invalid types by returning `0`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":118871,"byte_end":118947,"line_start":1046,"line_end":1046,"column_start":5,"column_end":81}},{"value":"/ for them.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":118952,"byte_end":118965,"line_start":1047,"line_end":1047,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119209,"byte_end":119222,"line_start":1058,"line_end":1058,"column_start":12,"column_end":25},"name":"fallible_size","qualname":"<Type>::fallible_size","value":"pub fn fallible_size(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the size of this type?\n","sig":null,"attributes":[{"value":"/ What is the size of this type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119163,"byte_end":119197,"line_start":1057,"line_end":1057,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119587,"byte_end":119592,"line_start":1072,"line_end":1072,"column_start":12,"column_end":17},"name":"align","qualname":"<Type>::align","value":"pub fn align(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type? Paper over invalid types by\n returning `0`.\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type? Paper over invalid types by","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119485,"byte_end":119552,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ returning `0`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119557,"byte_end":119575,"line_start":1071,"line_end":1071,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119826,"byte_end":119840,"line_start":1082,"line_end":1082,"column_start":12,"column_end":26},"name":"fallible_align","qualname":"<Type>::fallible_align","value":"pub fn fallible_align(&Self, &BindgenContext) -> Result<usize, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" What is the alignment of this type?\n","sig":null,"attributes":[{"value":"/ What is the alignment of this type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":119775,"byte_end":119814,"line_start":1081,"line_end":1081,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120217,"byte_end":120232,"line_start":1096,"line_end":1096,"column_start":12,"column_end":27},"name":"fallible_layout","qualname":"<Type>::fallible_layout","value":"pub fn fallible_layout(&Self, &BindgenContext)\n-> Result<crate::ir::layout::Layout, LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Get the layout for this type, or an error describing why it does not\n have a valid layout.\n","sig":null,"attributes":[{"value":"/ Get the layout for this type, or an error describing why it does not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120104,"byte_end":120176,"line_start":1094,"line_end":1094,"column_start":5,"column_end":77}},{"value":"/ have a valid layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120181,"byte_end":120205,"line_start":1095,"line_end":1095,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120637,"byte_end":120654,"line_start":1108,"line_end":1108,"column_start":12,"column_end":29},"name":"num_template_args","qualname":"<Type>::num_template_args","value":"pub fn num_template_args(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of template arguments this type has, or `None` if it is\n not some kind of template.\n","sig":null,"attributes":[{"value":"/ Get the number of template arguments this type has, or `None` if it is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120516,"byte_end":120590,"line_start":1106,"line_end":1106,"column_start":5,"column_end":79}},{"value":"/ not some kind of template.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120595,"byte_end":120625,"line_start":1107,"line_end":1107,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121016,"byte_end":121029,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"template_args","qualname":"<Type>::template_args","value":"pub fn template_args(&Self) -> Option<TypeTemplateArgIterator>","parent":null,"children":[],"decl_id":null,"docs":" If this type is a class template specialization, return its\n template arguments. Otherwise, return None.\n","sig":null,"attributes":[{"value":"/ If this type is a class template specialization, return its","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120889,"byte_end":120952,"line_start":1118,"line_end":1118,"column_start":5,"column_end":68}},{"value":"/ template arguments. Otherwise, return None.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":120957,"byte_end":121004,"line_start":1119,"line_end":1119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121398,"byte_end":121402,"line_start":1131,"line_end":1131,"column_start":12,"column_end":16},"name":"args","qualname":"<Type>::args","value":"pub fn args(&Self) -> Option<Vec<Type>>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the types of its parameters.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the types of its parameters.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121231,"byte_end":121316,"line_start":1128,"line_end":1128,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121321,"byte_end":121324,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ Returns None if the type is not a function prototype.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121329,"byte_end":121386,"line_start":1130,"line_end":1130,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121839,"byte_end":121847,"line_start":1144,"line_end":1144,"column_start":12,"column_end":20},"name":"num_args","qualname":"<Type>::num_args","value":"pub fn num_args(&Self) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function prototype, return the number of arguments it takes.","sig":null,"attributes":[{"value":"/ Given that this type is a function prototype, return the number of arguments it takes.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121668,"byte_end":121758,"line_start":1141,"line_end":1141,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121763,"byte_end":121766,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns Err if the type is not a function prototype.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":121771,"byte_end":121827,"line_start":1143,"line_end":1143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122175,"byte_end":122187,"line_start":1157,"line_end":1157,"column_start":12,"column_end":24},"name":"pointee_type","qualname":"<Type>::pointee_type","value":"pub fn pointee_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a pointer type, return the type that it points\n to.\n","sig":null,"attributes":[{"value":"/ Given that this type is a pointer type, return the type that it points","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122077,"byte_end":122151,"line_start":1155,"line_end":1155,"column_start":5,"column_end":79}},{"value":"/ to.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122156,"byte_end":122163,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122817,"byte_end":122826,"line_start":1177,"line_end":1177,"column_start":12,"column_end":21},"name":"elem_type","qualname":"<Type>::elem_type","value":"pub fn elem_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array, vector, or complex type, return the\n type of its elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array, vector, or complex type, return the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122702,"byte_end":122775,"line_start":1175,"line_end":1175,"column_start":5,"column_end":78}},{"value":"/ type of its elements.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":122780,"byte_end":122805,"line_start":1176,"line_end":1176,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123179,"byte_end":123191,"line_start":1190,"line_end":1190,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<Type>::num_elements","value":"pub fn num_elements(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is an array or vector type, return its number of\n elements.\n","sig":null,"attributes":[{"value":"/ Given that this type is an array or vector type, return its number of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123076,"byte_end":123149,"line_start":1188,"line_end":1188,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123154,"byte_end":123167,"line_start":1189,"line_end":1189,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123583,"byte_end":123597,"line_start":1201,"line_end":1201,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical version of this type. This sees through `typedef`s and\n aliases to get the underlying, canonical type.\n","sig":null,"attributes":[{"value":"/ Get the canonical version of this type. This sees through `typedef`s and","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123440,"byte_end":123516,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ aliases to get the underlying, canonical type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123521,"byte_end":123571,"line_start":1200,"line_end":1200,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123791,"byte_end":123802,"line_start":1210,"line_end":1210,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<Type>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a variadic function type?\n","sig":null,"attributes":[{"value":"/ Is this type a variadic function type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123737,"byte_end":123779,"line_start":1209,"line_end":1209,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123990,"byte_end":123998,"line_start":1216,"line_end":1216,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<Type>::ret_type","value":"pub fn ret_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get the type of its return\n value.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get the type of its return","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123892,"byte_end":123963,"line_start":1214,"line_end":1214,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":123968,"byte_end":123978,"line_start":1215,"line_end":1215,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124378,"byte_end":124387,"line_start":1229,"line_end":1229,"column_start":12,"column_end":21},"name":"call_conv","qualname":"<Type>::call_conv","value":"pub fn call_conv(&Self) -> CXCallingConv","parent":null,"children":[],"decl_id":null,"docs":" Given that this type is a function type, get its calling convention. If\n this is not a function type, `CXCallingConv_Invalid` is returned.\n","sig":null,"attributes":[{"value":"/ Given that this type is a function type, get its calling convention. If","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124217,"byte_end":124292,"line_start":1227,"line_end":1227,"column_start":5,"column_end":80}},{"value":"/ this is not a function type, `CXCallingConv_Invalid` is returned.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124297,"byte_end":124366,"line_start":1228,"line_end":1228,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124645,"byte_end":124650,"line_start":1235,"line_end":1235,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" For elaborated types (types which use `class`, `struct`, or `union` to\n disambiguate types from local bindings), get the underlying type.\n","sig":null,"attributes":[{"value":"/ For elaborated types (types which use `class`, `struct`, or `union` to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124485,"byte_end":124559,"line_start":1233,"line_end":1233,"column_start":5,"column_end":79}},{"value":"/ disambiguate types from local bindings), get the underlying type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124564,"byte_end":124633,"line_start":1234,"line_end":1234,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124828,"byte_end":124836,"line_start":1244,"line_end":1244,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Type>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid type?\n","sig":null,"attributes":[{"value":"/ Is this a valid type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124791,"byte_end":124816,"line_start":1243,"line_end":1243,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124952,"byte_end":124972,"line_start":1249,"line_end":1249,"column_start":12,"column_end":32},"name":"is_valid_and_exposed","qualname":"<Type>::is_valid_and_exposed","value":"pub fn is_valid_and_exposed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a valid and exposed type?\n","sig":null,"attributes":[{"value":"/ Is this a valid and exposed type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":124903,"byte_end":124940,"line_start":1248,"line_end":1248,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125119,"byte_end":125149,"line_start":1254,"line_end":1254,"column_start":12,"column_end":42},"name":"is_fully_instantiated_template","qualname":"<Type>::is_fully_instantiated_template","value":"pub fn is_fully_instantiated_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type a fully instantiated template?\n","sig":null,"attributes":[{"value":"/ Is this type a fully instantiated template?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125060,"byte_end":125107,"line_start":1253,"line_end":1253,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125931,"byte_end":125949,"line_start":1276,"line_end":1276,"column_start":12,"column_end":30},"name":"is_associated_type","qualname":"<Type>::is_associated_type","value":"pub fn is_associated_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type an associated template type? Eg `T::Associated` in\n this example:","sig":null,"attributes":[{"value":"/ Is this type an associated template type? Eg `T::Associated` in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125691,"byte_end":125758,"line_start":1267,"line_end":1267,"column_start":5,"column_end":72}},{"value":"/ this example:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125763,"byte_end":125780,"line_start":1268,"line_end":1268,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125785,"byte_end":125788,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125793,"byte_end":125803,"line_start":1270,"line_end":1270,"column_start":5,"column_end":15}},{"value":"/ template <typename T>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125808,"byte_end":125833,"line_start":1271,"line_end":1271,"column_start":5,"column_end":30}},{"value":"/ class Foo {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125838,"byte_end":125853,"line_start":1272,"line_end":1272,"column_start":5,"column_end":20}},{"value":"/     typename T::Associated member;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125858,"byte_end":125896,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125901,"byte_end":125907,"line_start":1274,"line_end":1274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":125912,"byte_end":125919,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126977,"byte_end":127001,"line_start":1302,"line_end":1302,"column_start":12,"column_end":36},"name":"CanonicalTypeDeclaration","qualname":"::clang::CanonicalTypeDeclaration","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `CanonicalTypeDeclaration` type exists as proof-by-construction that its\n cursor is the canonical declaration for its type. If you have a\n `CanonicalTypeDeclaration` instance, you know for sure that the type and\n cursor match up in a canonical declaration relationship, and it simply\n cannot be otherwise.\n","sig":null,"attributes":[{"value":"/ The `CanonicalTypeDeclaration` type exists as proof-by-construction that its","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126595,"byte_end":126675,"line_start":1296,"line_end":1296,"column_start":1,"column_end":81}},{"value":"/ cursor is the canonical declaration for its type. If you have a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126676,"byte_end":126743,"line_start":1297,"line_end":1297,"column_start":1,"column_end":68}},{"value":"/ `CanonicalTypeDeclaration` instance, you know for sure that the type and","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126744,"byte_end":126820,"line_start":1298,"line_end":1298,"column_start":1,"column_end":77}},{"value":"/ cursor match up in a canonical declaration relationship, and it simply","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126821,"byte_end":126895,"line_start":1299,"line_end":1299,"column_start":1,"column_end":75}},{"value":"/ cannot be otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":126896,"byte_end":126920,"line_start":1300,"line_end":1300,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127083,"byte_end":127085,"line_start":1306,"line_end":1306,"column_start":12,"column_end":14},"name":"ty","qualname":"<CanonicalTypeDeclaration>::ty","value":"pub fn ty(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get the type.\n","sig":null,"attributes":[{"value":"/ Get the type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127054,"byte_end":127071,"line_start":1305,"line_end":1305,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127191,"byte_end":127197,"line_start":1311,"line_end":1311,"column_start":12,"column_end":18},"name":"cursor","qualname":"<CanonicalTypeDeclaration>::cursor","value":"pub fn cursor(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get the type's canonical declaration cursor.\n","sig":null,"attributes":[{"value":"/ Get the type's canonical declaration cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127131,"byte_end":127179,"line_start":1310,"line_end":1310,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127303,"byte_end":127326,"line_start":1317,"line_end":1317,"column_start":12,"column_end":35},"name":"TypeTemplateArgIterator","qualname":"::clang::TypeTemplateArgIterator","value":"TypeTemplateArgIterator {  }","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" An iterator for a type's template arguments.\n","sig":null,"attributes":[{"value":"/ An iterator for a type's template arguments.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127243,"byte_end":127291,"line_start":1316,"line_end":1316,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128060,"byte_end":128074,"line_start":1347,"line_end":1347,"column_start":12,"column_end":26},"name":"SourceLocation","qualname":"::clang::SourceLocation","value":"SourceLocation {  }","parent":null,"children":[{"krate":0,"index":255}],"decl_id":null,"docs":" A `SourceLocation` is a file, line, column, and byte offset location for\n some source text.\n","sig":null,"attributes":[{"value":"/ A `SourceLocation` is a file, line, column, and byte offset location for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127950,"byte_end":128026,"line_start":1345,"line_end":1345,"column_start":1,"column_end":77}},{"value":"/ some source text.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128027,"byte_end":128048,"line_start":1346,"line_end":1346,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128228,"byte_end":128236,"line_start":1354,"line_end":1354,"column_start":12,"column_end":20},"name":"location","qualname":"<SourceLocation>::location","value":"pub fn location(&Self) -> (File, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the (file, line, column, byte offset) tuple for this source\n location.\n","sig":null,"attributes":[{"value":"/ Get the (file, line, column, byte offset) tuple for this source","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128131,"byte_end":128198,"line_start":1352,"line_end":1352,"column_start":5,"column_end":72}},{"value":"/ location.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128203,"byte_end":128216,"line_start":1353,"line_end":1353,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129075,"byte_end":129082,"line_start":1382,"line_end":1382,"column_start":12,"column_end":19},"name":"Comment","qualname":"::clang::Comment","value":"Comment {  }","parent":null,"children":[{"krate":0,"index":261}],"decl_id":null,"docs":" A comment in the source text.","sig":null,"attributes":[{"value":"/ A comment in the source text.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128957,"byte_end":128990,"line_start":1379,"line_end":1379,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128991,"byte_end":128994,"line_start":1380,"line_end":1380,"column_start":1,"column_end":4}},{"value":"/ Comments are sort of parsed by Clang, and have a tree structure.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128995,"byte_end":129063,"line_start":1381,"line_end":1381,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129170,"byte_end":129174,"line_start":1388,"line_end":1388,"column_start":12,"column_end":16},"name":"kind","qualname":"<Comment>::kind","value":"pub fn kind(&Self) -> CXCommentKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of comment is this?\n","sig":null,"attributes":[{"value":"/ What kind of comment is this?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129125,"byte_end":129158,"line_start":1387,"line_end":1387,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129312,"byte_end":129324,"line_start":1393,"line_end":1393,"column_start":12,"column_end":24},"name":"get_children","qualname":"<Comment>::get_children","value":"pub fn get_children(&Self) -> CommentChildrenIterator","parent":null,"children":[],"decl_id":null,"docs":" Get this comment's children comment\n","sig":null,"attributes":[{"value":"/ Get this comment's children comment","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129261,"byte_end":129300,"line_start":1392,"line_end":1392,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129636,"byte_end":129648,"line_start":1403,"line_end":1403,"column_start":12,"column_end":24},"name":"get_tag_name","qualname":"<Comment>::get_tag_name","value":"pub fn get_tag_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is the start or end of an HTML tag, get its tag\n name.\n","sig":null,"attributes":[{"value":"/ Given that this comment is the start or end of an HTML tag, get its tag","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129535,"byte_end":129610,"line_start":1401,"line_end":1401,"column_start":5,"column_end":80}},{"value":"/ name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129615,"byte_end":129624,"line_start":1402,"line_end":1402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129841,"byte_end":129854,"line_start":1408,"line_end":1408,"column_start":12,"column_end":25},"name":"get_tag_attrs","qualname":"<Comment>::get_tag_attrs","value":"pub fn get_tag_attrs(&Self) -> CommentAttributesIterator","parent":null,"children":[],"decl_id":null,"docs":" Given that this comment is an HTML start tag, get its attributes.\n","sig":null,"attributes":[{"value":"/ Given that this comment is an HTML start tag, get its attributes.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129760,"byte_end":129829,"line_start":1407,"line_end":1407,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130116,"byte_end":130139,"line_start":1418,"line_end":1418,"column_start":12,"column_end":35},"name":"CommentChildrenIterator","qualname":"::clang::CommentChildrenIterator","value":"CommentChildrenIterator {  }","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"decl_id":null,"docs":" An iterator for a comment's children\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's children","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130064,"byte_end":130104,"line_start":1417,"line_end":1417,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130639,"byte_end":130655,"line_start":1440,"line_end":1440,"column_start":12,"column_end":28},"name":"CommentAttribute","qualname":"::clang::CommentAttribute","value":"CommentAttribute { name, value }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" An HTML start tag comment attribute\n","sig":null,"attributes":[{"value":"/ An HTML start tag comment attribute","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130588,"byte_end":130627,"line_start":1439,"line_end":1439,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130704,"byte_end":130708,"line_start":1442,"line_end":1442,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::CommentAttribute::name","value":"std::string::String","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" HTML start tag attribute name\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130662,"byte_end":130695,"line_start":1441,"line_end":1441,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130765,"byte_end":130770,"line_start":1444,"line_end":1444,"column_start":9,"column_end":14},"name":"value","qualname":"::clang::CommentAttribute::value","value":"std::string::String","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" HTML start tag attribute value\n","sig":null,"attributes":[{"value":"/ HTML start tag attribute value","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130722,"byte_end":130756,"line_start":1443,"line_end":1443,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130837,"byte_end":130862,"line_start":1448,"line_end":1448,"column_start":12,"column_end":37},"name":"CommentAttributesIterator","qualname":"::clang::CommentAttributesIterator","value":"CommentAttributesIterator {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" An iterator for a comment's attributes\n","sig":null,"attributes":[{"value":"/ An iterator for a comment's attributes","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130783,"byte_end":130825,"line_start":1447,"line_end":1447,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131661,"byte_end":131665,"line_start":1479,"line_end":1479,"column_start":12,"column_end":16},"name":"File","qualname":"::clang::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A source file.\n","sig":null,"attributes":[{"value":"/ A source file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131631,"byte_end":131649,"line_start":1478,"line_end":1478,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131751,"byte_end":131755,"line_start":1485,"line_end":1485,"column_start":12,"column_end":16},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of this source file.\n","sig":null,"attributes":[{"value":"/ Get the name of this source file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131702,"byte_end":131739,"line_start":1484,"line_end":1484,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":290},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132450,"byte_end":132455,"line_start":1509,"line_end":1509,"column_start":12,"column_end":17},"name":"Index","qualname":"::clang::Index","value":"Index {  }","parent":null,"children":[{"krate":0,"index":291}],"decl_id":null,"docs":" An `Index` is an environment for a set of translation units that will\n typically end up linked together in one final binary.\n","sig":null,"attributes":[{"value":"/ An `Index` is an environment for a set of translation units that will","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132307,"byte_end":132380,"line_start":1507,"line_end":1507,"column_start":1,"column_end":74}},{"value":"/ typically end up linked together in one final binary.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132381,"byte_end":132438,"line_start":1508,"line_end":1508,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132782,"byte_end":132785,"line_start":1520,"line_end":1520,"column_start":12,"column_end":15},"name":"new","qualname":"<Index>::new","value":"pub fn new(bool, bool) -> Index","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Index`.","sig":null,"attributes":[{"value":"/ Construct a new `Index`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132494,"byte_end":132522,"line_start":1514,"line_end":1514,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132527,"byte_end":132530,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ The `pch` parameter controls whether declarations in pre-compiled","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132535,"byte_end":132604,"line_start":1516,"line_end":1516,"column_start":5,"column_end":74}},{"value":"/ headers are included when enumerating a translation unit's \"locals\".","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132609,"byte_end":132681,"line_start":1517,"line_end":1517,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132686,"byte_end":132689,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ The `diag` parameter controls whether debugging diagnostics are enabled.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132694,"byte_end":132770,"line_start":1519,"line_end":1519,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133272,"byte_end":133287,"line_start":1544,"line_end":1544,"column_start":12,"column_end":27},"name":"TranslationUnit","qualname":"::clang::TranslationUnit","value":"TranslationUnit {  }","parent":null,"children":[{"krate":0,"index":299}],"decl_id":null,"docs":" A translation unit (or \"compilation unit\").\n","sig":null,"attributes":[{"value":"/ A translation unit (or \"compilation unit\").","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133213,"byte_end":133260,"line_start":1543,"line_end":1543,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133559,"byte_end":133564,"line_start":1556,"line_end":1556,"column_start":12,"column_end":17},"name":"parse","qualname":"<TranslationUnit>::parse","value":"pub fn parse(&Index, &str, &[String], &[UnsavedFile], CXTranslationUnit_Flags)\n-> Option<TranslationUnit>","parent":null,"children":[],"decl_id":null,"docs":" Parse a source file into a translation unit.\n","sig":null,"attributes":[{"value":"/ Parse a source file into a translation unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133499,"byte_end":133547,"line_start":1555,"line_end":1555,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":134679,"byte_end":134684,"line_start":1592,"line_end":1592,"column_start":12,"column_end":17},"name":"diags","qualname":"<TranslationUnit>::diags","value":"pub fn diags(&Self) -> Vec<Diagnostic>","parent":null,"children":[],"decl_id":null,"docs":" Get the Clang diagnostic information associated with this translation\n unit.\n","sig":null,"attributes":[{"value":"/ Get the Clang diagnostic information associated with this translation","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":134580,"byte_end":134653,"line_start":1590,"line_end":1590,"column_start":5,"column_end":78}},{"value":"/ unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":134658,"byte_end":134667,"line_start":1591,"line_end":1591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135119,"byte_end":135125,"line_start":1606,"line_end":1606,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TranslationUnit>::cursor","value":"pub fn cursor(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor pointing to the root of this translation unit's AST.\n","sig":null,"attributes":[{"value":"/ Get a cursor pointing to the root of this translation unit's AST.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135038,"byte_end":135107,"line_start":1605,"line_end":1605,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135327,"byte_end":135334,"line_start":1615,"line_end":1615,"column_start":12,"column_end":19},"name":"is_null","qualname":"<TranslationUnit>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this the null translation unit?\n","sig":null,"attributes":[{"value":"/ Is this the null translation unit?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135277,"byte_end":135315,"line_start":1614,"line_end":1614,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135609,"byte_end":135619,"line_start":1629,"line_end":1629,"column_start":12,"column_end":22},"name":"Diagnostic","qualname":"::clang::Diagnostic","value":"Diagnostic {  }","parent":null,"children":[{"krate":0,"index":313}],"decl_id":null,"docs":" A diagnostic message generated while parsing a translation unit.\n","sig":null,"attributes":[{"value":"/ A diagnostic message generated while parsing a translation unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135529,"byte_end":135597,"line_start":1628,"line_end":1628,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135769,"byte_end":135775,"line_start":1636,"line_end":1636,"column_start":12,"column_end":18},"name":"format","qualname":"<Diagnostic>::format","value":"pub fn format(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format this diagnostic message as a string, using the given option bit\n flags.\n","sig":null,"attributes":[{"value":"/ Format this diagnostic message as a string, using the given option bit","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135668,"byte_end":135742,"line_start":1634,"line_end":1634,"column_start":5,"column_end":79}},{"value":"/ flags.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135747,"byte_end":135757,"line_start":1635,"line_end":1635,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136032,"byte_end":136040,"line_start":1644,"line_end":1644,"column_start":12,"column_end":20},"name":"severity","qualname":"<Diagnostic>::severity","value":"pub fn severity(&Self) -> CXDiagnosticSeverity","parent":null,"children":[],"decl_id":null,"docs":" What is the severity of this diagnostic message?\n","sig":null,"attributes":[{"value":"/ What is the severity of this diagnostic message?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135968,"byte_end":136020,"line_start":1643,"line_end":1643,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136368,"byte_end":136379,"line_start":1659,"line_end":1659,"column_start":12,"column_end":23},"name":"UnsavedFile","qualname":"::clang::UnsavedFile","value":"UnsavedFile { name }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":" A file which has not been saved to disk.\n","sig":null,"attributes":[{"value":"/ A file which has not been saved to disk.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136312,"byte_end":136356,"line_start":1658,"line_end":1658,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136523,"byte_end":136527,"line_start":1663,"line_end":1663,"column_start":9,"column_end":13},"name":"name","qualname":"::clang::UnsavedFile::name","value":"std::ffi::CString","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":" The name of the unsaved file. Kept here to avoid leaving dangling pointers in\n `CXUnsavedFile`.\n","sig":null,"attributes":[{"value":"/ The name of the unsaved file. Kept here to avoid leaving dangling pointers in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136408,"byte_end":136489,"line_start":1661,"line_end":1661,"column_start":5,"column_end":86}},{"value":"/ `CXUnsavedFile`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136494,"byte_end":136514,"line_start":1662,"line_end":1662,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136669,"byte_end":136672,"line_start":1669,"line_end":1669,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsavedFile>::new","value":"pub fn new(&str, &str) -> UnsavedFile","parent":null,"children":[],"decl_id":null,"docs":" Construct a new unsaved file with the given `name` and `contents`.\n","sig":null,"attributes":[{"value":"/ Construct a new unsaved file with the given `name` and `contents`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136587,"byte_end":136657,"line_start":1668,"line_end":1668,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4237},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144611,"byte_end":144621,"line_start":1938,"line_end":1938,"column_start":12,"column_end":22},"name":"EvalResult","qualname":"::clang::EvalResult","value":"EvalResult {  }","parent":null,"children":[{"krate":0,"index":4238}],"decl_id":null,"docs":" A wrapper for the result of evaluating an expression.\n","sig":null,"attributes":[{"value":"/ A wrapper for the result of evaluating an expression.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144525,"byte_end":144582,"line_start":1936,"line_end":1936,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144726,"byte_end":144729,"line_start":1944,"line_end":1944,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalResult>::new","value":"pub fn new(Cursor) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate `cursor` and return the result.\n","sig":null,"attributes":[{"value":"/ Evaluate `cursor` and return the result.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144670,"byte_end":144714,"line_start":1943,"line_end":1943,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":145716,"byte_end":145725,"line_start":1975,"line_end":1975,"column_start":12,"column_end":21},"name":"as_double","qualname":"<EvalResult>::as_double","value":"pub fn as_double(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as a double.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as a double.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":145661,"byte_end":145704,"line_start":1974,"line_end":1974,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":146000,"byte_end":146006,"line_start":1985,"line_end":1985,"column_start":12,"column_end":18},"name":"as_int","qualname":"<EvalResult>::as_int","value":"pub fn as_int(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to get back the result as an integer.\n","sig":null,"attributes":[{"value":"/ Try to get back the result as an integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":145943,"byte_end":145988,"line_start":1984,"line_end":1984,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147066,"byte_end":147083,"line_start":2017,"line_end":2017,"column_start":12,"column_end":29},"name":"as_literal_string","qualname":"<EvalResult>::as_literal_string","value":"pub fn as_literal_string(&Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the expression as a literal string, that may or may not be\n valid utf-8.\n","sig":null,"attributes":[{"value":"/ Evaluates the expression as a literal string, that may or may not be","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":146961,"byte_end":147033,"line_start":2015,"line_end":2015,"column_start":5,"column_end":77}},{"value":"/ valid utf-8.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147038,"byte_end":147054,"line_start":2016,"line_end":2016,"column_start":5,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":500},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321190,"byte_end":321195,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::impl_debug::ImplDebug::Extra","value":"type Extra;","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" Any extra parameter required by this a particular `ImplDebug` implementation.\n","sig":null,"attributes":[{"value":"/ Any extra parameter required by this a particular `ImplDebug` implementation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321099,"byte_end":321180,"line_start":56,"line_end":56,"column_start":5,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":880},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":160581,"byte_end":160586,"line_start":423,"line_end":423,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::CodeGenerator::Extra","value":"type Extra;","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Extra information from the caller.\n","sig":null,"attributes":[{"value":"/ Extra information from the caller.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":160533,"byte_end":160571,"line_start":422,"line_end":422,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":935},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":185219,"byte_end":185224,"line_start":1121,"line_end":1121,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::FieldCodegen::Extra","value":"type Extra;","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4442},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227300,"byte_end":227304,"line_start":2370,"line_end":2370,"column_start":5,"column_end":9},"name":"Rust","qualname":"::codegen::EnumVariation::Rust","value":"EnumVariation::Rust { non_exhaustive }","parent":{"krate":0,"index":4441},"children":[],"decl_id":null,"docs":" The code for this enum will use a Rust enum. Note that creating this in unsafe code\n (including FFI) with an invalid value will invoke undefined behaviour, whether or not\n its marked as non_exhaustive.\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a Rust enum. Note that creating this in unsafe code","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227076,"byte_end":227163,"line_start":2367,"line_end":2367,"column_start":5,"column_end":92}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour, whether or not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227168,"byte_end":227257,"line_start":2368,"line_end":2368,"column_start":5,"column_end":94}},{"value":"/ its marked as non_exhaustive.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227262,"byte_end":227295,"line_start":2369,"line_end":2369,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":4444},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227479,"byte_end":227486,"line_start":2375,"line_end":2375,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::EnumVariation::NewType","value":"EnumVariation::NewType { is_bitfield }","parent":{"krate":0,"index":4441},"children":[],"decl_id":null,"docs":" The code for this enum will use a newtype\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a newtype","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227429,"byte_end":227474,"line_start":2374,"line_end":2374,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4446},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227644,"byte_end":227650,"line_start":2380,"line_end":2380,"column_start":5,"column_end":11},"name":"Consts","qualname":"::codegen::EnumVariation::Consts","value":"EnumVariation::Consts","parent":{"krate":0,"index":4441},"children":[],"decl_id":null,"docs":" The code for this enum will use consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use consts","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227597,"byte_end":227639,"line_start":2379,"line_end":2379,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4448},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227723,"byte_end":227735,"line_start":2382,"line_end":2382,"column_start":5,"column_end":17},"name":"ModuleConsts","qualname":"::codegen::EnumVariation::ModuleConsts","value":"EnumVariation::ModuleConsts","parent":{"krate":0,"index":4441},"children":[],"decl_id":null,"docs":" The code for this enum will use a module containing consts\n","sig":null,"attributes":[{"value":"/ The code for this enum will use a module containing consts","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227656,"byte_end":227718,"line_start":2381,"line_end":2381,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4441},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227056,"byte_end":227069,"line_start":2366,"line_end":2366,"column_start":10,"column_end":23},"name":"EnumVariation","qualname":"::codegen::EnumVariation","value":"pub enum EnumVariation {\n    Rust {\n        non_exhaustive: bool,\n    },\n    NewType {\n        is_bitfield: bool,\n    },\n    Consts,\n    ModuleConsts,\n}","parent":null,"children":[{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4448}],"decl_id":null,"docs":" A helper type that represents different enum variations.\n","sig":null,"attributes":[{"value":"/ A helper type that represents different enum variations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":226945,"byte_end":227005,"line_start":2364,"line_end":2364,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4466},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250689,"byte_end":250695,"line_start":3061,"line_end":3061,"column_start":5,"column_end":11},"name":"Signed","qualname":"::codegen::MacroTypeVariation::Signed","value":"MacroTypeVariation::Signed","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":" Use i32 or i64\n","sig":null,"attributes":[{"value":"/ Use i32 or i64","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250666,"byte_end":250684,"line_start":3060,"line_end":3060,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4468},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250724,"byte_end":250732,"line_start":3063,"line_end":3063,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::codegen::MacroTypeVariation::Unsigned","value":"MacroTypeVariation::Unsigned","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":" Use u32 or u64\n","sig":null,"attributes":[{"value":"/ Use u32 or u64","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250701,"byte_end":250719,"line_start":3062,"line_end":3062,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":4465},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250641,"byte_end":250659,"line_start":3059,"line_end":3059,"column_start":10,"column_end":28},"name":"MacroTypeVariation","qualname":"::codegen::MacroTypeVariation","value":"pub enum MacroTypeVariation { Signed, Unsigned, }","parent":null,"children":[{"krate":0,"index":4466},{"krate":0,"index":4468}],"decl_id":null,"docs":" Enum for the default type of macro constants.\n","sig":null,"attributes":[{"value":"/ Enum for the default type of macro constants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250541,"byte_end":250590,"line_start":3057,"line_end":3057,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250840,"byte_end":250846,"line_start":3068,"line_end":3068,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MacroTypeVariation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convert a `MacroTypeVariation` to its str representation.\n","sig":null,"attributes":[{"value":"/ Convert a `MacroTypeVariation` to its str representation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250767,"byte_end":250828,"line_start":3067,"line_end":3067,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4479},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251910,"byte_end":251919,"line_start":3105,"line_end":3105,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::codegen::AliasVariation::TypeAlias","value":"AliasVariation::TypeAlias","parent":{"krate":0,"index":4478},"children":[],"decl_id":null,"docs":" Convert to regular Rust alias\n","sig":null,"attributes":[{"value":"/ Convert to regular Rust alias","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251872,"byte_end":251905,"line_start":3104,"line_end":3104,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4481},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252019,"byte_end":252026,"line_start":3107,"line_end":3107,"column_start":5,"column_end":12},"name":"NewType","qualname":"::codegen::AliasVariation::NewType","value":"AliasVariation::NewType","parent":{"krate":0,"index":4478},"children":[],"decl_id":null,"docs":" Create a new type by wrapping the old type in a struct and using #[repr(transparent)]\n","sig":null,"attributes":[{"value":"/ Create a new type by wrapping the old type in a struct and using #[repr(transparent)]","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251925,"byte_end":252014,"line_start":3106,"line_end":3106,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4483},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252128,"byte_end":252140,"line_start":3109,"line_end":3109,"column_start":5,"column_end":17},"name":"NewTypeDeref","qualname":"::codegen::AliasVariation::NewTypeDeref","value":"AliasVariation::NewTypeDeref","parent":{"krate":0,"index":4478},"children":[],"decl_id":null,"docs":" Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type\n","sig":null,"attributes":[{"value":"/ Same as NewStruct but also impl Deref to be able to use the methods of the wrapped type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252032,"byte_end":252123,"line_start":3108,"line_end":3108,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":4478},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251851,"byte_end":251865,"line_start":3103,"line_end":3103,"column_start":10,"column_end":24},"name":"AliasVariation","qualname":"::codegen::AliasVariation","value":"pub enum AliasVariation { TypeAlias, NewType, NewTypeDeref, }","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483}],"decl_id":null,"docs":" Enum for how aliases should be translated.\n","sig":null,"attributes":[{"value":"/ Enum for how aliases should be translated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251754,"byte_end":251800,"line_start":3101,"line_end":3101,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252241,"byte_end":252247,"line_start":3114,"line_end":3114,"column_start":12,"column_end":18},"name":"as_str","qualname":"<AliasVariation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convert an `AliasVariation` to its str representation.\n","sig":null,"attributes":[{"value":"/ Convert an `AliasVariation` to its str representation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252171,"byte_end":252229,"line_start":3113,"line_end":3113,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1055},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":253587,"byte_end":253592,"line_start":3155,"line_end":3155,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":255589,"byte_end":255594,"line_start":3211,"line_end":3211,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTy::Extra","value":"type Extra;","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1069},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":256060,"byte_end":256065,"line_start":3226,"line_end":3226,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::TryToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1078},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":257830,"byte_end":257835,"line_start":3274,"line_end":3274,"column_start":10,"column_end":15},"name":"Extra","qualname":"::codegen::ToRustTyOrOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1207},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/features.rs","byte_start":349073,"byte_end":349091,"line_start":137,"line_end":137,"column_start":11,"column_end":29},"name":"LATEST_STABLE_RUST","qualname":"::features::LATEST_STABLE_RUST","value":"RustTarget","parent":null,"children":[],"decl_id":null,"docs":" Latest stable release of Rust\n","sig":null,"attributes":[{"value":"/ Latest stable release of Rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/features.rs","byte_start":349029,"byte_end":349062,"line_start":136,"line_end":136,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4593},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373574,"byte_end":373596,"line_start":149,"line_end":149,"column_start":12,"column_end":34},"name":"UsedTemplateParameters","qualname":"::ir::analysis::template_params::UsedTemplateParameters","value":"UsedTemplateParameters {  }","parent":null,"children":[{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598}],"decl_id":null,"docs":" An analysis that finds for each IR item its set of template parameters that\n it uses.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item its set of template parameters that","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371401,"byte_end":371480,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ it uses.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371481,"byte_end":371493,"line_start":100,"line_end":100,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371494,"byte_end":371497,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `template_param_usage`, defined as","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371498,"byte_end":371576,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ follows:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371577,"byte_end":371589,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371590,"byte_end":371593,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * If `T` is a named template type parameter, it trivially uses itself:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371594,"byte_end":371668,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371669,"byte_end":371672,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371673,"byte_end":371686,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(T) = { T }","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371687,"byte_end":371722,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371723,"byte_end":371730,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371731,"byte_end":371734,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * If `inst` is a template instantiation, `inst.args` are the template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371735,"byte_end":371808,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/   instantiation's template arguments, `inst.def` is the template definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371809,"byte_end":371888,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/   being instantiated, and `inst.def.params` is the template definition's","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371889,"byte_end":371965,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/   template parameters, then the instantiation's usage is the union of each","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":371966,"byte_end":372044,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/   of its arguments' usages *if* the corresponding template parameter is in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372045,"byte_end":372123,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/   turn used by the template definition:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372124,"byte_end":372167,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372168,"byte_end":372171,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372172,"byte_end":372185,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(inst) = union(","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372186,"byte_end":372225,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/     template_param_usage(inst.args[i])","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372226,"byte_end":372268,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/         for i in 0..length(inst.args.length)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372269,"byte_end":372317,"line_start":121,"line_end":121,"column_start":1,"column_end":49}},{"value":"/             if inst.def.params[i] in template_param_usage(inst.def)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372318,"byte_end":372389,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ )","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372390,"byte_end":372395,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372396,"byte_end":372403,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372404,"byte_end":372407,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ * Finally, for all other IR item kinds, we use our lattice's `join`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372408,"byte_end":372479,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ operation: set union with each successor of the given item's template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372480,"byte_end":372553,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ parameter usage:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372554,"byte_end":372574,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372575,"byte_end":372578,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372579,"byte_end":372592,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/ template_param_usage(v) =","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372593,"byte_end":372622,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/     union(template_param_usage(w) for w in successors(v))","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372623,"byte_end":372684,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372685,"byte_end":372692,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372693,"byte_end":372696,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Note that we ignore certain edges in the graph, such as edges from a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372697,"byte_end":372769,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ template declaration to its template parameters' definitions for this","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372770,"byte_end":372843,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/ analysis. If we didn't, then we would mistakenly determine that ever","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372844,"byte_end":372916,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/ template parameter is always used.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372917,"byte_end":372955,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372956,"byte_end":372959,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ The final wrinkle is handling of blacklisted types. Normally, we say that","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":372960,"byte_end":373037,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ the set of whitelisted items is the transitive closure of items explicitly","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373038,"byte_end":373116,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ called out for whitelisting, *without* any items explicitly called out as","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373117,"byte_end":373194,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ blacklisted. However, for the purposes of this analysis's correctness, we","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373195,"byte_end":373272,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ simplify and consider run the analysis on the full transitive closure of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373273,"byte_end":373349,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ whitelisted items. We do, however, treat instantiations of blacklisted items","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373350,"byte_end":373430,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ specially; see `constrain_instantiation_of_blacklisted_template` and its","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373431,"byte_end":373507,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ documentation for details.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":373508,"byte_end":373538,"line_start":147,"line_end":147,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4623},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":393062,"byte_end":393074,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"CannotDerive","qualname":"::ir::analysis::derive::CannotDerive","value":"CannotDerive {  }","parent":null,"children":[{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628}],"decl_id":null,"docs":" An analysis that finds for each IR item whether a trait cannot be derived.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether a trait cannot be derived.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391672,"byte_end":391750,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391751,"byte_end":391754,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `cannot_derive`, defined as follows","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391755,"byte_end":391834,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ for type T:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391835,"byte_end":391850,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391851,"byte_end":391854,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ * If T is Opaque and the layout of the type is known, get this layout as an","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391855,"byte_end":391934,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   opaquetype and check whether it can derive using trivial checks.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":391935,"byte_end":392005,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392006,"byte_end":392009,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ * If T is Array, a trait cannot be derived if the array is incomplete,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392010,"byte_end":392084,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/   if the length of the array is larger than the limit (unless the trait","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392085,"byte_end":392160,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/   allows it), or the trait cannot be derived for the type of data the array","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392161,"byte_end":392240,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/   contains.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392241,"byte_end":392256,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392257,"byte_end":392260,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * If T is Vector, a trait cannot be derived if the trait cannot be derived","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392261,"byte_end":392339,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/   for the type of data the vector contains.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392340,"byte_end":392387,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392388,"byte_end":392391,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392392,"byte_end":392472,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/   the trait cannot be derived if the trait cannot be derived for type T","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392473,"byte_end":392548,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/   refers to.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392549,"byte_end":392565,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392566,"byte_end":392569,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * If T is a compound type, the trait cannot be derived if the trait cannot","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392570,"byte_end":392648,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   be derived for any of its base members or fields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392649,"byte_end":392704,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392705,"byte_end":392708,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is an instantiation of an abstract template definition, the trait","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392709,"byte_end":392785,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/   cannot be derived if any of the template arguments or template definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392786,"byte_end":392865,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   cannot derive the trait.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392866,"byte_end":392896,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392897,"byte_end":392900,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * For all other (simple) types, compiler and standard library limitations","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392901,"byte_end":392978,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/   dictate whether the trait is implemented.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":392979,"byte_end":393026,"line_start":61,"line_end":61,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4637},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417027,"byte_end":417029,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::analysis::has_vtable::HasVtableResult::No","value":"HasVtableResult::No","parent":{"krate":0,"index":4636},"children":[],"decl_id":null,"docs":" The item does not have a vtable pointer.\n","sig":null,"attributes":[{"value":"/ The item does not have a vtable pointer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":416978,"byte_end":417022,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4639},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417117,"byte_end":417130,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"SelfHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::SelfHasVtable","value":"HasVtableResult::SelfHasVtable","parent":{"krate":0,"index":4636},"children":[],"decl_id":null,"docs":" The item has a vtable and the actual vtable pointer is within this item.\n","sig":null,"attributes":[{"value":"/ The item has a vtable and the actual vtable pointer is within this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417036,"byte_end":417112,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4641},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417227,"byte_end":417240,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"BaseHasVtable","qualname":"::ir::analysis::has_vtable::HasVtableResult::BaseHasVtable","value":"HasVtableResult::BaseHasVtable","parent":{"krate":0,"index":4636},"children":[],"decl_id":null,"docs":" The item has a vtable, but the actual vtable pointer is in a base\n member.\n","sig":null,"attributes":[{"value":"/ The item has a vtable, but the actual vtable pointer is in a base","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417137,"byte_end":417206,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ member.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417211,"byte_end":417222,"line_start":21,"line_end":21,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":4636},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":416956,"byte_end":416971,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"HasVtableResult","qualname":"::ir::analysis::has_vtable::HasVtableResult","value":"pub enum HasVtableResult { No, SelfHasVtable, BaseHasVtable, }","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4639},{"krate":0,"index":4641}],"decl_id":null,"docs":" The result of the `HasVtableAnalysis` for an individual item.\n","sig":null,"attributes":[{"value":"/ The result of the `HasVtableAnalysis` for an individual item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":416819,"byte_end":416884,"line_start":11,"line_end":11,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417434,"byte_end":417438,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"join","qualname":"<HasVtableResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417371,"byte_end":417422,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4658},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418392,"byte_end":418409,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"HasVtableAnalysis","qualname":"::ir::analysis::has_vtable::HasVtableAnalysis","value":"HasVtableAnalysis {  }","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has vtable or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has vtable or not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417796,"byte_end":417868,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417869,"byte_end":417872,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has vtable`, defined as follows:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417873,"byte_end":417939,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417940,"byte_end":417943,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, an indirection to another type,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417944,"byte_end":418022,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/   or a reference of a type, T has vtable if the type T refers to has vtable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418023,"byte_end":418103,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ * If T is a compound type, T has vtable if we saw a virtual function when","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418104,"byte_end":418181,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/   parsing it or any of its base member has vtable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418182,"byte_end":418236,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418237,"byte_end":418309,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/   vtable if template definition has vtable","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":418310,"byte_end":418356,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4670},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425295,"byte_end":425316,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"HasDestructorAnalysis","qualname":"::ir::analysis::has_destructor::HasDestructorAnalysis","value":"HasDestructorAnalysis {  }","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has a destructor or not","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has a destructor or not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424406,"byte_end":424484,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424485,"byte_end":424488,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ We use the monotone function `has destructor`, defined as follows:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424489,"byte_end":424559,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424560,"byte_end":424563,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * If T is a type alias, a templated alias, or an indirection to another type,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424564,"byte_end":424645,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   T has a destructor if the type T refers to has a destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424646,"byte_end":424712,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ * If T is a compound type, T has a destructor if we saw a destructor when parsing it,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424713,"byte_end":424802,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/   or if it's a struct, T has a destructor if any of its base members has a destructor,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424803,"byte_end":424893,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/   or if any of its fields have a destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424894,"byte_end":424942,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":424943,"byte_end":425015,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/   a destructor if its template definition has a destructor,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425016,"byte_end":425079,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/   or if any of the template arguments has a destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425080,"byte_end":425139,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ * If T is the type of a field, that field has a destructor if it's not a bitfield,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425140,"byte_end":425226,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/   and if T has a destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425227,"byte_end":425259,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4681},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431549,"byte_end":431572,"line_start":25,"line_end":25,"column_start":12,"column_end":35},"name":"HasTypeParameterInArray","qualname":"::ir::analysis::has_type_param_in_array::HasTypeParameterInArray","value":"HasTypeParameterInArray {  }","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has array or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has array or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":430845,"byte_end":430917,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":430918,"byte_end":430921,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_type_parameter_in_array`,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":430922,"byte_end":430996,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ defined as follows:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":430997,"byte_end":431020,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431021,"byte_end":431024,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is Array type with type parameter, T trivially has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431025,"byte_end":431087,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431088,"byte_end":431168,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has type parameter in array if the type T refers to has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431169,"byte_end":431234,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ * If T is a compound type, it has array if any of base memter or field","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431235,"byte_end":431309,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has type paramter in array.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431310,"byte_end":431343,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431344,"byte_end":431416,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   type parameter in array if any of the template arguments or template definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431417,"byte_end":431502,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/   has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":431503,"byte_end":431513,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440434,"byte_end":440442,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"HasFloat","qualname":"::ir::analysis::has_float::HasFloat","value":"HasFloat {  }","parent":null,"children":[{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696}],"decl_id":null,"docs":" An analysis that finds for each IR item whether it has float or not.","sig":null,"attributes":[{"value":"/ An analysis that finds for each IR item whether it has float or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439815,"byte_end":439887,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439888,"byte_end":439891,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ We use the monotone constraint function `has_float`,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439892,"byte_end":439948,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ defined as follows:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439949,"byte_end":439972,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439973,"byte_end":439976,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * If T is float or complex float, T trivially has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":439977,"byte_end":440031,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ * If T is a type alias, a templated alias or an indirection to another type,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440032,"byte_end":440112,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   it has float if the type T refers to has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440113,"byte_end":440160,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ * If T is a compound type, it has float if any of base memter or field","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440161,"byte_end":440235,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/   has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440236,"byte_end":440246,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/ * If T is an instantiation of an abstract template definition, T has","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440247,"byte_end":440319,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/   float if any of the template arguments or template definition","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440320,"byte_end":440387,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/   has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":440388,"byte_end":440398,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4704},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449279,"byte_end":449288,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"ZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::ZeroSized","value":"SizednessResult::ZeroSized","parent":{"krate":0,"index":4703},"children":[],"decl_id":null,"docs":" The type is zero-sized.","sig":null,"attributes":[{"value":"/ The type is zero-sized.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449037,"byte_end":449064,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449069,"byte_end":449072,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that if it is a C++ type, and is not being used as a base","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449077,"byte_end":449149,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ member, then we must add an `_address` byte to enforce the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449154,"byte_end":449216,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/ unique-address-per-distinct-object-instance rule.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449221,"byte_end":449274,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4706},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449976,"byte_end":449994,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"DependsOnTypeParam","qualname":"::ir::analysis::sizedness::SizednessResult::DependsOnTypeParam","value":"SizednessResult::DependsOnTypeParam","parent":{"krate":0,"index":4703},"children":[],"decl_id":null,"docs":" Whether this type is zero-sized or not depends on whether a type\n parameter is zero-sized or not.","sig":null,"attributes":[{"value":"/ Whether this type is zero-sized or not depends on whether a type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449295,"byte_end":449363,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/ parameter is zero-sized or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449368,"byte_end":449403,"line_start":37,"line_end":37,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449408,"byte_end":449411,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ For example, given these definitions:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449416,"byte_end":449457,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449462,"byte_end":449465,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449470,"byte_end":449480,"line_start":41,"line_end":41,"column_start":5,"column_end":15}},{"value":"/ template<class T>","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449485,"byte_end":449506,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/ class Flongo : public T {};","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449511,"byte_end":449542,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449547,"byte_end":449550,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ class Empty {};","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449555,"byte_end":449574,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449579,"byte_end":449582,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ class NonEmpty { int x; };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449587,"byte_end":449617,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449622,"byte_end":449629,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449634,"byte_end":449637,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Then `Flongo<Empty>` is zero-sized, and needs an `_address` byte","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449642,"byte_end":449710,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ inserted, while `Flongo<NonEmpty>` is *not* zero-sized, and should *not*","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449715,"byte_end":449791,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ have an `_address` byte inserted.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449796,"byte_end":449833,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449838,"byte_end":449841,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ We don't properly handle this situation correctly right now:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449846,"byte_end":449910,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ https://github.com/rust-lang/rust-bindgen/issues/586","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449915,"byte_end":449971,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4708},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450252,"byte_end":450264,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"NonZeroSized","qualname":"::ir::analysis::sizedness::SizednessResult::NonZeroSized","value":"SizednessResult::NonZeroSized","parent":{"krate":0,"index":4703},"children":[],"decl_id":null,"docs":" Has some size that is known to be greater than zero. That doesn't mean\n it has a static size, but it is not zero sized for sure. In other words,\n it might contain an incomplete array or some other dynamically sized\n type.\n","sig":null,"attributes":[{"value":"/ Has some size that is known to be greater than zero. That doesn't mean","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450001,"byte_end":450075,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ it has a static size, but it is not zero sized for sure. In other words,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450080,"byte_end":450156,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ it might contain an incomplete array or some other dynamically sized","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450161,"byte_end":450233,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450238,"byte_end":450247,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":4703},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":449015,"byte_end":449030,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"name":"SizednessResult","qualname":"::ir::analysis::sizedness::SizednessResult","value":"pub enum SizednessResult { ZeroSized, DependsOnTypeParam, NonZeroSized, }","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4706},{"krate":0,"index":4708}],"decl_id":null,"docs":" The result of the `Sizedness` analysis for an individual item.","sig":null,"attributes":[{"value":"/ The result of the `Sizedness` analysis for an individual item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448510,"byte_end":448576,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448577,"byte_end":448580,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a chain lattice of the form:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448581,"byte_end":448621,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448622,"byte_end":448625,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448626,"byte_end":448639,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/                   NonZeroSized","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448640,"byte_end":448674,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                        |","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448675,"byte_end":448703,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/                DependsOnTypeParam","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448704,"byte_end":448741,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/                        |","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448742,"byte_end":448770,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/                     ZeroSized","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448771,"byte_end":448804,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448805,"byte_end":448812,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448813,"byte_end":448816,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ We initially assume that all types are `ZeroSized` and then update our","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448817,"byte_end":448891,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ understanding as we learn more about each type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":448892,"byte_end":448943,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450465,"byte_end":450469,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"join","qualname":"<SizednessResult>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450402,"byte_end":450453,"line_start":72,"line_end":72,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4725},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451301,"byte_end":451318,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"SizednessAnalysis","qualname":"::ir::analysis::sizedness::SizednessAnalysis","value":"SizednessAnalysis {  }","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729}],"decl_id":null,"docs":" An analysis that computes the sizedness of all types.","sig":null,"attributes":[{"value":"/ An analysis that computes the sizedness of all types.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450827,"byte_end":450884,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450885,"byte_end":450888,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * For types with known sizes -- for example pointers, scalars, etc... --","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450889,"byte_end":450965,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ they are assigned `NonZeroSized`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450966,"byte_end":451003,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451004,"byte_end":451007,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types with one or more fields, they are assigned","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451008,"byte_end":451085,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ `NonZeroSized`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451086,"byte_end":451105,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451106,"byte_end":451109,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * For compound structure types without any fields, the results of the bases","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451110,"byte_end":451189,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ are `join`ed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451190,"byte_end":451207,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451208,"byte_end":451211,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * For type parameters, `DependsOnTypeParam` is assigned.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451212,"byte_end":451272,"line_start":103,"line_end":103,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1809},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357251,"byte_end":357255,"line_start":81,"line_end":81,"column_start":10,"column_end":14},"name":"Node","qualname":"::ir::analysis::MonotoneFramework::Node","value":"type Node: Copy;","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" The type of node in our dependency graph.","sig":null,"attributes":[{"value":"/ The type of node in our dependency graph.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357045,"byte_end":357090,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357095,"byte_end":357098,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is just generic (and not `ItemId`) so that we can easily unit test","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357103,"byte_end":357178,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ without constructing real `Item`s and their `ItemId`s.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357183,"byte_end":357241,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357536,"byte_end":357541,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::analysis::MonotoneFramework::Extra","value":"type Extra: Sized;","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Any extra data that is needed during computation.","sig":null,"attributes":[{"value":"/ Any extra data that is needed during computation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357268,"byte_end":357321,"line_start":83,"line_end":83,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357326,"byte_end":357329,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Again, this is just generic (and not `&BindgenContext`) so that we can","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357334,"byte_end":357408,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ easily unit test without constructing real `BindgenContext`s full of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357413,"byte_end":357485,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ real `Item`s and real `ItemId`s.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357490,"byte_end":357526,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1811},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357738,"byte_end":357744,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"Output","qualname":"::ir::analysis::MonotoneFramework::Output","value":"type Output: From<Self> + fmt::Debug;","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" The final output of this analysis. Once we have reached a fix-point, we\n convert `self` into this type, and return it as the final result of the\n analysis.\n","sig":null,"attributes":[{"value":"/ The final output of this analysis. Once we have reached a fix-point, we","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357555,"byte_end":357630,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ convert `self` into this type, and return it as the final result of the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357635,"byte_end":357710,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ analysis.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357715,"byte_end":357728,"line_start":92,"line_end":92,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4751},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460228,"byte_end":460232,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::ir::annotations::FieldAccessorKind::None","value":"FieldAccessorKind::None","parent":{"krate":0,"index":4750},"children":[],"decl_id":null,"docs":" No accessor.\n","sig":null,"attributes":[{"value":"/ No accessor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460207,"byte_end":460223,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4753},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460262,"byte_end":460269,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Regular","qualname":"::ir::annotations::FieldAccessorKind::Regular","value":"FieldAccessorKind::Regular","parent":{"krate":0,"index":4750},"children":[],"decl_id":null,"docs":" Plain accessor.\n","sig":null,"attributes":[{"value":"/ Plain accessor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460238,"byte_end":460257,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4755},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460300,"byte_end":460306,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Unsafe","qualname":"::ir::annotations::FieldAccessorKind::Unsafe","value":"FieldAccessorKind::Unsafe","parent":{"krate":0,"index":4750},"children":[],"decl_id":null,"docs":" Unsafe accessor.\n","sig":null,"attributes":[{"value":"/ Unsafe accessor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460275,"byte_end":460295,"line_start":16,"line_end":16,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4757},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460340,"byte_end":460349,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Immutable","qualname":"::ir::annotations::FieldAccessorKind::Immutable","value":"FieldAccessorKind::Immutable","parent":{"krate":0,"index":4750},"children":[],"decl_id":null,"docs":" Immutable accessor.\n","sig":null,"attributes":[{"value":"/ Immutable accessor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460312,"byte_end":460335,"line_start":18,"line_end":18,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":4750},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460183,"byte_end":460200,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"FieldAccessorKind","qualname":"::ir::annotations::FieldAccessorKind","value":"pub enum FieldAccessorKind { None, Regular, Unsafe, Immutable, }","parent":null,"children":[{"krate":0,"index":4751},{"krate":0,"index":4753},{"krate":0,"index":4755},{"krate":0,"index":4757}],"decl_id":null,"docs":" What kind of accessor should we provide for a field?\n","sig":null,"attributes":[{"value":"/ What kind of accessor should we provide for a field?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460076,"byte_end":460132,"line_start":9,"line_end":9,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4767},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460606,"byte_end":460617,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"Annotations","qualname":"::ir::annotations::Annotations","value":"Annotations {  }","parent":null,"children":[{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777}],"decl_id":null,"docs":" Annotations for a given item, or a field.","sig":null,"attributes":[{"value":"/ Annotations for a given item, or a field.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460354,"byte_end":460399,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460400,"byte_end":460403,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ You can see the kind of comments that are accepted in the Doxygen","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460404,"byte_end":460473,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ documentation:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460474,"byte_end":460492,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460493,"byte_end":460496,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":460497,"byte_end":460559,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462950,"byte_end":462953,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Annotations>::new","value":"pub fn new(&clang::Cursor) -> Option<Annotations>","parent":null,"children":[],"decl_id":null,"docs":" Construct new annotations for the given cursor and its bindgen comments\n (if any).\n","sig":null,"attributes":[{"value":"/ Construct new annotations for the given cursor and its bindgen comments","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462845,"byte_end":462920,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ (if any).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462925,"byte_end":462938,"line_start":97,"line_end":97,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463291,"byte_end":463295,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"hide","qualname":"<Annotations>::hide","value":"pub fn hide(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be hidden?\n","sig":null,"attributes":[{"value":"/ Should this type be hidden?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463248,"byte_end":463279,"line_start":110,"line_end":110,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463385,"byte_end":463391,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Annotations>::opaque","value":"pub fn opaque(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should this type be opaque?\n","sig":null,"attributes":[{"value":"/ Should this type be opaque?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463342,"byte_end":463373,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464018,"byte_end":464032,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"use_instead_of","qualname":"<Annotations>::use_instead_of","value":"pub fn use_instead_of(&Self) -> Option<&[String]>","parent":null,"children":[],"decl_id":null,"docs":" For a given type, indicates the type it should replace.","sig":null,"attributes":[{"value":"/ For a given type, indicates the type it should replace.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463440,"byte_end":463499,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463504,"byte_end":463507,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For example, in the following code:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463512,"byte_end":463551,"line_start":122,"line_end":122,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463556,"byte_end":463559,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463564,"byte_end":463574,"line_start":124,"line_end":124,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463579,"byte_end":463582,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463587,"byte_end":463636,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/ struct Foo { int x; };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463641,"byte_end":463667,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463672,"byte_end":463675,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ struct Bar { char foo; };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463680,"byte_end":463709,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463714,"byte_end":463721,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463726,"byte_end":463729,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ the generated code would look something like:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463734,"byte_end":463783,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463788,"byte_end":463791,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463796,"byte_end":463803,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ /** <div rustbindgen replaces=\"Bar\"></div> */","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463808,"byte_end":463857,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ struct Bar {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463862,"byte_end":463878,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/     x: ::std::os::raw::c_int,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463883,"byte_end":463916,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463921,"byte_end":463927,"line_start":138,"line_end":138,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463932,"byte_end":463939,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463944,"byte_end":463947,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ That is, code for `Foo` is used to generate `Bar`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":463952,"byte_end":464006,"line_start":141,"line_end":141,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464205,"byte_end":464212,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"derives","qualname":"<Annotations>::derives","value":"pub fn derives(&Self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The list of derives that have been specified in this annotation.\n","sig":null,"attributes":[{"value":"/ The list of derives that have been specified in this annotation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464125,"byte_end":464193,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464330,"byte_end":464343,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"disallow_copy","qualname":"<Annotations>::disallow_copy","value":"pub fn disallow_copy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Copy` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Copy` trait?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464268,"byte_end":464318,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464462,"byte_end":464476,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"disallow_debug","qualname":"<Annotations>::disallow_debug","value":"pub fn disallow_debug(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Debug` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Debug` trait?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464399,"byte_end":464450,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464598,"byte_end":464614,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"disallow_default","qualname":"<Annotations>::disallow_default","value":"pub fn disallow_default(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should we avoid implementing the `Default` trait?\n","sig":null,"attributes":[{"value":"/ Should we avoid implementing the `Default` trait?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464533,"byte_end":464586,"line_start":161,"line_end":161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464718,"byte_end":464732,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"private_fields","qualname":"<Annotations>::private_fields","value":"pub fn private_fields(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Should the fields be private?\n","sig":null,"attributes":[{"value":"/ Should the fields be private?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464673,"byte_end":464706,"line_start":166,"line_end":166,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464877,"byte_end":464890,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"accessor_kind","qualname":"<Annotations>::accessor_kind","value":"pub fn accessor_kind(&Self) -> Option<FieldAccessorKind>","parent":null,"children":[],"decl_id":null,"docs":" What kind of accessors should we provide for this type's fields?\n","sig":null,"attributes":[{"value":"/ What kind of accessors should we provide for this type's fields?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":464797,"byte_end":464865,"line_start":171,"line_end":171,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":466605,"byte_end":466626,"line_start":217,"line_end":217,"column_start":12,"column_end":33},"name":"constify_enum_variant","qualname":"<Annotations>::constify_enum_variant","value":"pub fn constify_enum_variant(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we've parsed a \"constant\" attribute.\n","sig":null,"attributes":[{"value":"/ Returns whether we've parsed a \"constant\" attribute.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":466537,"byte_end":466593,"line_start":216,"line_end":216,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471093,"byte_end":471099,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ir::comp::CompKind::Struct","value":"CompKind::Struct","parent":{"krate":0,"index":4799},"children":[],"decl_id":null,"docs":" A struct.\n","sig":null,"attributes":[{"value":"/ A struct.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471075,"byte_end":471088,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4802},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471122,"byte_end":471127,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Union","qualname":"::ir::comp::CompKind::Union","value":"CompKind::Union","parent":{"krate":0,"index":4799},"children":[],"decl_id":null,"docs":" A union.\n","sig":null,"attributes":[{"value":"/ A union.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471105,"byte_end":471117,"line_start":27,"line_end":27,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4799},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471060,"byte_end":471068,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"CompKind","qualname":"::ir::comp::CompKind","value":"pub enum CompKind { Struct, Union, }","parent":null,"children":[{"krate":0,"index":4800},{"krate":0,"index":4802}],"decl_id":null,"docs":" The kind of compound type.\n","sig":null,"attributes":[{"value":"/ The kind of compound type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":470979,"byte_end":471009,"line_start":22,"line_end":22,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471328,"byte_end":471339,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"Constructor","qualname":"::ir::comp::MethodKind::Constructor","value":"MethodKind::Constructor","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A constructor. We represent it as method for convenience, to avoid code\n duplication.\n","sig":null,"attributes":[{"value":"/ A constructor. We represent it as method for convenience, to avoid code","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471227,"byte_end":471302,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ duplication.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471307,"byte_end":471323,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471367,"byte_end":471377,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"name":"Destructor","qualname":"::ir::comp::MethodKind::Destructor","value":"MethodKind::Destructor","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A destructor.\n","sig":null,"attributes":[{"value":"/ A destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471345,"byte_end":471362,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":4817},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471413,"byte_end":471430,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"VirtualDestructor","qualname":"::ir::comp::MethodKind::VirtualDestructor","value":"MethodKind::VirtualDestructor { pure_virtual }","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A virtual destructor.\n","sig":null,"attributes":[{"value":"/ A virtual destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471383,"byte_end":471408,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4819},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471536,"byte_end":471542,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Static","qualname":"::ir::comp::MethodKind::Static","value":"MethodKind::Static","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A static method.\n","sig":null,"attributes":[{"value":"/ A static method.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471511,"byte_end":471531,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4821},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471573,"byte_end":471579,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::MethodKind::Normal","value":"MethodKind::Normal","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A normal method.\n","sig":null,"attributes":[{"value":"/ A normal method.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471548,"byte_end":471568,"line_start":46,"line_end":46,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":4823},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471611,"byte_end":471618,"line_start":49,"line_end":49,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::MethodKind::Virtual","value":"MethodKind::Virtual { pure_virtual }","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" A virtual method.\n","sig":null,"attributes":[{"value":"/ A virtual method.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471585,"byte_end":471606,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":4812},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471210,"byte_end":471220,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MethodKind","qualname":"::ir::comp::MethodKind","value":"pub enum MethodKind {\n    Constructor,\n    Destructor,\n    VirtualDestructor {\n        pure_virtual: bool,\n    },\n    Static,\n    Normal,\n    Virtual {\n        pure_virtual: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4823}],"decl_id":null,"docs":" The kind of C++ method.\n","sig":null,"attributes":[{"value":"/ The kind of C++ method.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471132,"byte_end":471159,"line_start":31,"line_end":31,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471764,"byte_end":471777,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"is_destructor","qualname":"<MethodKind>::is_destructor","value":"pub fn is_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a destructor method?\n","sig":null,"attributes":[{"value":"/ Is this a destructor method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471720,"byte_end":471752,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472022,"byte_end":472037,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"is_pure_virtual","qualname":"<MethodKind>::is_pure_virtual","value":"pub fn is_pure_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a pure virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a pure virtual method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471976,"byte_end":472010,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4834},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472350,"byte_end":472356,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Method","qualname":"::ir::comp::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837}],"decl_id":null,"docs":" A struct representing a C++ method, either static, normal, or virtual.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ method, either static, normal, or virtual.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472247,"byte_end":472321,"line_start":76,"line_end":76,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472676,"byte_end":472679,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Method>::new","value":"pub fn new(MethodKind, FunctionId, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Method`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Method`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472635,"byte_end":472664,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472923,"byte_end":472927,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"kind","qualname":"<Method>::kind","value":"pub fn kind(&Self) -> MethodKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of method is this?\n","sig":null,"attributes":[{"value":"/ What kind of method is this?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472879,"byte_end":472911,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473018,"byte_end":473032,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"is_constructor","qualname":"<Method>::is_constructor","value":"pub fn is_constructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a constructor?\n","sig":null,"attributes":[{"value":"/ Is this a constructor?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472980,"byte_end":473006,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473147,"byte_end":473157,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Method>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a virtual method?\n","sig":null,"attributes":[{"value":"/ Is this a virtual method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473106,"byte_end":473135,"line_start":112,"line_end":112,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473385,"byte_end":473394,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"is_static","qualname":"<Method>::is_static","value":"pub fn is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a static method?\n","sig":null,"attributes":[{"value":"/ Is this a static method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473345,"byte_end":473373,"line_start":121,"line_end":121,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473535,"byte_end":473544,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"signature","qualname":"<Method>::signature","value":"pub fn signature(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Get the id for the `Function` signature for this method.\n","sig":null,"attributes":[{"value":"/ Get the id for the `Function` signature for this method.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473463,"byte_end":473523,"line_start":126,"line_end":126,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473651,"byte_end":473659,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Method>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a const qualified method?\n","sig":null,"attributes":[{"value":"/ Is this a const qualified method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":473602,"byte_end":473639,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4840},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474639,"byte_end":474651,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"BitfieldUnit","qualname":"::ir::comp::BitfieldUnit","value":"BitfieldUnit {  }","parent":null,"children":[{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843}],"decl_id":null,"docs":" A contiguous set of logical bitfields that live within the same physical\n allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section\n 2.4.II.1 in the Itanium C++\n ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).\n","sig":null,"attributes":[{"value":"/ A contiguous set of logical bitfields that live within the same physical","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474353,"byte_end":474429,"line_start":161,"line_end":161,"column_start":1,"column_end":77}},{"value":"/ allocation unit. See 9.2.4 [class.bit] in the C++ standard and [section","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474430,"byte_end":474505,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/ 2.4.II.1 in the Itanium C++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474506,"byte_end":474537,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/ ABI](http://itanium-cxx-abi.github.io/cxx-abi/abi.html#class-types).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474538,"byte_end":474610,"line_start":164,"line_end":164,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474929,"byte_end":474932,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"nth","qualname":"<BitfieldUnit>::nth","value":"pub fn nth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the 1-based index of this bitfield unit within its containing\n struct. Useful for generating a Rust struct's field name for this unit\n of bitfields.\n","sig":null,"attributes":[{"value":"/ Get the 1-based index of this bitfield unit within its containing","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474747,"byte_end":474816,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ struct. Useful for generating a Rust struct's field name for this unit","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474821,"byte_end":474895,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ of bitfields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474900,"byte_end":474917,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475046,"byte_end":475052,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"layout","qualname":"<BitfieldUnit>::layout","value":"pub fn layout(&Self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Get the layout within which these bitfields reside.\n","sig":null,"attributes":[{"value":"/ Get the layout within which these bitfields reside.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474979,"byte_end":475034,"line_start":180,"line_end":180,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475154,"byte_end":475163,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"bitfields","qualname":"<BitfieldUnit>::bitfields","value":"pub fn bitfields(&Self) -> &[Bitfield]","parent":null,"children":[],"decl_id":null,"docs":" Get the bitfields within this unit.\n","sig":null,"attributes":[{"value":"/ Get the bitfields within this unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475103,"byte_end":475142,"line_start":185,"line_end":185,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4847},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475328,"byte_end":475338,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"name":"DataMember","qualname":"::ir::comp::Field::DataMember","value":"Field::DataMember(FieldData)","parent":{"krate":0,"index":4846},"children":[],"decl_id":null,"docs":" A normal data member.\n","sig":null,"attributes":[{"value":"/ A normal data member.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475298,"byte_end":475323,"line_start":194,"line_end":194,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4850},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475426,"byte_end":475435,"line_start":198,"line_end":198,"column_start":5,"column_end":14},"name":"Bitfields","qualname":"::ir::comp::Field::Bitfields","value":"Field::Bitfields(BitfieldUnit)","parent":{"krate":0,"index":4846},"children":[],"decl_id":null,"docs":" A physical allocation unit containing many logical bitfields.\n","sig":null,"attributes":[{"value":"/ A physical allocation unit containing many logical bitfields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475356,"byte_end":475421,"line_start":197,"line_end":197,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":4846},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475286,"byte_end":475291,"line_start":193,"line_end":193,"column_start":10,"column_end":15},"name":"Field","qualname":"::ir::comp::Field","value":"pub enum Field { DataMember(FieldData), Bitfields(BitfieldUnit), }","parent":null,"children":[{"krate":0,"index":4847},{"krate":0,"index":4850}],"decl_id":null,"docs":" A struct representing a C++ field.\n","sig":null,"attributes":[{"value":"/ A struct representing a C++ field.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475221,"byte_end":475259,"line_start":191,"line_end":191,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475511,"byte_end":475517,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"layout","qualname":"<Field>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Get this field's layout.\n","sig":null,"attributes":[{"value":"/ Get this field's layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475471,"byte_end":475499,"line_start":202,"line_end":202,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4855},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":478395,"byte_end":478403,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"Bitfield","qualname":"::ir::comp::Bitfield","value":"Bitfield {  }","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859}],"decl_id":null,"docs":" A logical bitfield within some physical bitfield allocation unit.\n","sig":null,"attributes":[{"value":"/ A logical bitfield within some physical bitfield allocation unit.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":478297,"byte_end":478366,"line_start":310,"line_end":310,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479337,"byte_end":479353,"line_start":346,"line_end":346,"column_start":12,"column_end":28},"name":"offset_into_unit","qualname":"<Bitfield>::offset_into_unit","value":"pub fn offset_into_unit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index of the bit within this bitfield's allocation unit where\n this bitfield begins.\n","sig":null,"attributes":[{"value":"/ Get the index of the bit within this bitfield's allocation unit where","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479222,"byte_end":479295,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ this bitfield begins.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479300,"byte_end":479325,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479539,"byte_end":479543,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"mask","qualname":"<Bitfield>::mask","value":"pub fn mask(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the mask value that when &'ed with this bitfield's allocation unit\n produces this bitfield's value.\n","sig":null,"attributes":[{"value":"/ Get the mask value that when &'ed with this bitfield's allocation unit","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479413,"byte_end":479487,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ produces this bitfield's value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479492,"byte_end":479527,"line_start":351,"line_end":351,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479907,"byte_end":479912,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"width","qualname":"<Bitfield>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the bit width of this bitfield.\n","sig":null,"attributes":[{"value":"/ Get the bit width of this bitfield.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479856,"byte_end":479895,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480168,"byte_end":480179,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"getter_name","qualname":"<Bitfield>::getter_name","value":"pub fn getter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust getter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust getter for this bitfield.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":479984,"byte_end":480040,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480045,"byte_end":480048,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480053,"byte_end":480120,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480125,"byte_end":480156,"line_start":373,"line_end":373,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480686,"byte_end":480697,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"setter_name","qualname":"<Bitfield>::setter_name","value":"pub fn setter_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the generated Rust setter for this bitfield.","sig":null,"attributes":[{"value":"/ Name of the generated Rust setter for this bitfield.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480502,"byte_end":480558,"line_start":385,"line_end":385,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480563,"byte_end":480566,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Panics if called before assigning bitfield accessor names or if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480571,"byte_end":480638,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ this bitfield have no name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":480643,"byte_end":480674,"line_start":388,"line_end":388,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4878},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":496330,"byte_end":496339,"line_start":878,"line_end":878,"column_start":12,"column_end":21},"name":"FieldData","qualname":"::ir::comp::FieldData","value":"FieldData {  }","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885}],"decl_id":null,"docs":" Common data shared across different field types.\n","sig":null,"attributes":[{"value":"/ Common data shared across different field types.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":496242,"byte_end":496294,"line_start":876,"line_end":876,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4891},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497661,"byte_end":497667,"line_start":939,"line_end":939,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::comp::BaseKind::Normal","value":"BaseKind::Normal","parent":{"krate":0,"index":4890},"children":[],"decl_id":null,"docs":" Normal inheritance, like:","sig":null,"attributes":[{"value":"/ Normal inheritance, like:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497561,"byte_end":497590,"line_start":934,"line_end":934,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497595,"byte_end":497598,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497603,"byte_end":497613,"line_start":936,"line_end":936,"column_start":5,"column_end":15}},{"value":"/ class A : public B {};","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497618,"byte_end":497644,"line_start":937,"line_end":937,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497649,"byte_end":497656,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4893},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497781,"byte_end":497788,"line_start":945,"line_end":945,"column_start":5,"column_end":12},"name":"Virtual","qualname":"::ir::comp::BaseKind::Virtual","value":"BaseKind::Virtual","parent":{"krate":0,"index":4890},"children":[],"decl_id":null,"docs":" Virtual inheritance, like:","sig":null,"attributes":[{"value":"/ Virtual inheritance, like:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497673,"byte_end":497703,"line_start":940,"line_end":940,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497708,"byte_end":497711,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497716,"byte_end":497726,"line_start":942,"line_end":942,"column_start":5,"column_end":15}},{"value":"/ class A: public virtual B {};","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497731,"byte_end":497764,"line_start":943,"line_end":943,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497769,"byte_end":497776,"line_start":944,"line_end":944,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":4890},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497546,"byte_end":497554,"line_start":933,"line_end":933,"column_start":10,"column_end":18},"name":"BaseKind","qualname":"::ir::comp::BaseKind","value":"pub enum BaseKind { Normal, Virtual, }","parent":null,"children":[{"krate":0,"index":4891},{"krate":0,"index":4893}],"decl_id":null,"docs":" The kind of inheritance a base class is using.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance a base class is using.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497447,"byte_end":497497,"line_start":931,"line_end":931,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4905},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497846,"byte_end":497850,"line_start":950,"line_end":950,"column_start":12,"column_end":16},"name":"Base","qualname":"::ir::comp::Base","value":"Base { ty, kind, field_name }","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908}],"decl_id":null,"docs":" A base class.\n","sig":null,"attributes":[{"value":"/ A base class.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497793,"byte_end":497810,"line_start":948,"line_end":948,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4906},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497898,"byte_end":497900,"line_start":952,"line_end":952,"column_start":9,"column_end":11},"name":"ty","qualname":"::ir::comp::Base::ty","value":"ir::context::TypeId","parent":{"krate":0,"index":4905},"children":[],"decl_id":null,"docs":" The type of this base class.\n","sig":null,"attributes":[{"value":"/ The type of this base class.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497857,"byte_end":497889,"line_start":951,"line_end":951,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4907},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497963,"byte_end":497967,"line_start":954,"line_end":954,"column_start":9,"column_end":13},"name":"kind","qualname":"::ir::comp::Base::kind","value":"ir::comp::BaseKind","parent":{"krate":0,"index":4905},"children":[],"decl_id":null,"docs":" The kind of inheritance we're doing.\n","sig":null,"attributes":[{"value":"/ The kind of inheritance we're doing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497914,"byte_end":497954,"line_start":953,"line_end":953,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4908},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498050,"byte_end":498060,"line_start":956,"line_end":956,"column_start":9,"column_end":19},"name":"field_name","qualname":"::ir::comp::Base::field_name","value":"std::string::String","parent":{"krate":0,"index":4905},"children":[],"decl_id":null,"docs":" Name of the field in which this base should be stored.\n","sig":null,"attributes":[{"value":"/ Name of the field in which this base should be stored.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":497983,"byte_end":498041,"line_start":955,"line_end":955,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498153,"byte_end":498163,"line_start":961,"line_end":961,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Base>::is_virtual","value":"pub fn is_virtual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class is inheriting virtually.\n","sig":null,"attributes":[{"value":"/ Whether this base class is inheriting virtually.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498089,"byte_end":498141,"line_start":960,"line_end":960,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498310,"byte_end":498326,"line_start":966,"line_end":966,"column_start":12,"column_end":28},"name":"requires_storage","qualname":"<Base>::requires_storage","value":"pub fn requires_storage(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this base class should have it's own field for storage.\n","sig":null,"attributes":[{"value":"/ Whether this base class should have it's own field for storage.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498231,"byte_end":498298,"line_start":965,"line_end":965,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4913},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":499087,"byte_end":499095,"line_start":992,"line_end":992,"column_start":12,"column_end":20},"name":"CompInfo","qualname":"::ir::comp::CompInfo","value":"CompInfo {  }","parent":null,"children":[{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929}],"decl_id":null,"docs":" A compound type.","sig":null,"attributes":[{"value":"/ A compound type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498867,"byte_end":498887,"line_start":986,"line_end":986,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498888,"byte_end":498891,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ Either a struct or union, a compound type is built up from the combination","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498892,"byte_end":498970,"line_start":988,"line_end":988,"column_start":1,"column_end":79}},{"value":"/ of fields which also are associated with their own (potentially compound)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498971,"byte_end":499048,"line_start":989,"line_end":989,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":499049,"byte_end":499058,"line_start":990,"line_end":990,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":501604,"byte_end":501607,"line_start":1067,"line_end":1067,"column_start":12,"column_end":15},"name":"new","qualname":"<CompInfo>::new","value":"pub fn new(CompKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":501558,"byte_end":501592,"line_start":1066,"line_end":1066,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502642,"byte_end":502648,"line_start":1096,"line_end":1096,"column_start":12,"column_end":18},"name":"layout","qualname":"<CompInfo>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Compute the layout of this type.","sig":null,"attributes":[{"value":"/ Compute the layout of this type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502243,"byte_end":502279,"line_start":1088,"line_end":1088,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502284,"byte_end":502287,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ This is called as a fallback under some circumstances where LLVM doesn't","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502292,"byte_end":502368,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ give us the correct layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502373,"byte_end":502404,"line_start":1091,"line_end":1091,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502409,"byte_end":502412,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ If we're a union without known layout, we try to compute it from our","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502417,"byte_end":502489,"line_start":1093,"line_end":1093,"column_start":5,"column_end":77}},{"value":"/ members. This is not ideal, but clang fails to report the size for these","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502494,"byte_end":502570,"line_start":1094,"line_end":1094,"column_start":5,"column_end":81}},{"value":"/ kind of unions, see test/headers/template_union.hpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":502575,"byte_end":502630,"line_start":1095,"line_end":1095,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":503611,"byte_end":503617,"line_start":1129,"line_end":1129,"column_start":12,"column_end":18},"name":"fields","qualname":"<CompInfo>::fields","value":"pub fn fields(&Self) -> &[Field]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of fields.\n","sig":null,"attributes":[{"value":"/ Get this type's set of fields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":503565,"byte_end":503599,"line_start":1128,"line_end":1128,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":504636,"byte_end":504663,"line_start":1157,"line_end":1157,"column_start":12,"column_end":39},"name":"has_too_large_bitfield_unit","qualname":"<CompInfo>::has_too_large_bitfield_unit","value":"pub fn has_too_large_bitfield_unit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether we have a too large bitfield unit, in which case we may\n not be able to derive some of the things we should be able to normally\n derive.\n","sig":null,"attributes":[{"value":"/ Returns whether we have a too large bitfield unit, in which case we may","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":504454,"byte_end":504529,"line_start":1154,"line_end":1154,"column_start":5,"column_end":80}},{"value":"/ not be able to derive some of the things we should be able to normally","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":504534,"byte_end":504608,"line_start":1155,"line_end":1155,"column_start":5,"column_end":79}},{"value":"/ derive.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":504613,"byte_end":504624,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505091,"byte_end":505119,"line_start":1171,"line_end":1171,"column_start":12,"column_end":40},"name":"has_non_type_template_params","qualname":"<CompInfo>::has_non_type_template_params","value":"pub fn has_non_type_template_params(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this type have any template parameters that aren't types\n (e.g. int)?\n","sig":null,"attributes":[{"value":"/ Does this type have any template parameters that aren't types","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":504994,"byte_end":505059,"line_start":1169,"line_end":1169,"column_start":5,"column_end":70}},{"value":"/ (e.g. int)?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505064,"byte_end":505079,"line_start":1170,"line_end":1170,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505298,"byte_end":505320,"line_start":1177,"line_end":1177,"column_start":12,"column_end":34},"name":"has_own_virtual_method","qualname":"<CompInfo>::has_own_virtual_method","value":"pub fn has_own_virtual_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we see a virtual function during parsing?\n Get the has_own_virtual_method boolean.\n","sig":null,"attributes":[{"value":"/ Do we see a virtual function during parsing?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505190,"byte_end":505238,"line_start":1175,"line_end":1175,"column_start":5,"column_end":53}},{"value":"/ Get the has_own_virtual_method boolean.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505243,"byte_end":505286,"line_start":1176,"line_end":1176,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505448,"byte_end":505466,"line_start":1182,"line_end":1182,"column_start":12,"column_end":30},"name":"has_own_destructor","qualname":"<CompInfo>::has_own_destructor","value":"pub fn has_own_destructor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did we see a destructor when parsing this type?\n","sig":null,"attributes":[{"value":"/ Did we see a destructor when parsing this type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505385,"byte_end":505436,"line_start":1181,"line_end":1181,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505570,"byte_end":505577,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"methods","qualname":"<CompInfo>::methods","value":"pub fn methods(&Self) -> &[Method]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of methods.\n","sig":null,"attributes":[{"value":"/ Get this type's set of methods.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505523,"byte_end":505558,"line_start":1186,"line_end":1186,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505685,"byte_end":505697,"line_start":1192,"line_end":1192,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CompInfo>::constructors","value":"pub fn constructors(&Self) -> &[FunctionId]","parent":null,"children":[],"decl_id":null,"docs":" Get this type's set of constructors.\n","sig":null,"attributes":[{"value":"/ Get this type's set of constructors.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505633,"byte_end":505673,"line_start":1191,"line_end":1191,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505805,"byte_end":505815,"line_start":1197,"line_end":1197,"column_start":12,"column_end":22},"name":"destructor","qualname":"<CompInfo>::destructor","value":"pub fn destructor(&Self) -> Option<(MethodKind, FunctionId)>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's destructor.\n","sig":null,"attributes":[{"value":"/ Get this type's destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505762,"byte_end":505793,"line_start":1196,"line_end":1196,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505947,"byte_end":505951,"line_start":1202,"line_end":1202,"column_start":12,"column_end":16},"name":"kind","qualname":"<CompInfo>::kind","value":"pub fn kind(&Self) -> CompKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of compound type is this?\n","sig":null,"attributes":[{"value":"/ What kind of compound type is this?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":505896,"byte_end":505935,"line_start":1201,"line_end":1201,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506034,"byte_end":506042,"line_start":1207,"line_end":1207,"column_start":12,"column_end":20},"name":"is_union","qualname":"<CompInfo>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506002,"byte_end":506022,"line_start":1206,"line_end":1206,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506171,"byte_end":506183,"line_start":1212,"line_end":1212,"column_start":12,"column_end":24},"name":"base_members","qualname":"<CompInfo>::base_members","value":"pub fn base_members(&Self) -> &[Base]","parent":null,"children":[],"decl_id":null,"docs":" The set of types that this one inherits from.\n","sig":null,"attributes":[{"value":"/ The set of types that this one inherits from.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506110,"byte_end":506159,"line_start":1211,"line_end":1211,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506306,"byte_end":506313,"line_start":1217,"line_end":1217,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<CompInfo>::from_ty","value":"pub fn from_ty(ItemId, &clang::Type, Option<clang::Cursor>,\n               &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new compound type from a Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new compound type from a Clang type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":506242,"byte_end":506294,"line_start":1216,"line_end":1216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520473,"byte_end":520484,"line_start":1560,"line_end":1560,"column_start":12,"column_end":23},"name":"inner_types","qualname":"<CompInfo>::inner_types","value":"pub fn inner_types(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of types that were declared within this compound type\n (e.g. nested class definitions).\n","sig":null,"attributes":[{"value":"/ Get the set of types that were declared within this compound type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520351,"byte_end":520420,"line_start":1558,"line_end":1558,"column_start":5,"column_end":74}},{"value":"/ (e.g. nested class definitions).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520425,"byte_end":520461,"line_start":1559,"line_end":1559,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520627,"byte_end":520637,"line_start":1565,"line_end":1565,"column_start":12,"column_end":22},"name":"inner_vars","qualname":"<CompInfo>::inner_vars","value":"pub fn inner_vars(&Self) -> &[VarId]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of static variables declared within this compound type.\n","sig":null,"attributes":[{"value":"/ Get the set of static variables declared within this compound type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520544,"byte_end":520615,"line_start":1564,"line_end":1564,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520825,"byte_end":520843,"line_start":1571,"line_end":1571,"column_start":12,"column_end":30},"name":"found_unknown_attr","qualname":"<CompInfo>::found_unknown_attr","value":"pub fn found_unknown_attr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we found a field with an opaque type that could potentially mess up\n the layout of this compound type?\n","sig":null,"attributes":[{"value":"/ Have we found a field with an opaque type that could potentially mess up","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520695,"byte_end":520771,"line_start":1569,"line_end":1569,"column_start":5,"column_end":81}},{"value":"/ the layout of this compound type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520776,"byte_end":520813,"line_start":1570,"line_end":1570,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520949,"byte_end":520958,"line_start":1576,"line_end":1576,"column_start":12,"column_end":21},"name":"is_packed","qualname":"<CompInfo>::is_packed","value":"pub fn is_packed(&Self, &BindgenContext, &Option<Layout>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this compound type packed?\n","sig":null,"attributes":[{"value":"/ Is this compound type packed?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":520904,"byte_end":520937,"line_start":1575,"line_end":1575,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522175,"byte_end":522197,"line_start":1612,"line_end":1612,"column_start":12,"column_end":34},"name":"is_forward_declaration","qualname":"<CompInfo>::is_forward_declaration","value":"pub fn is_forward_declaration(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if compound type has been forward declared\n","sig":null,"attributes":[{"value":"/ Returns true if compound type has been forward declared","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522104,"byte_end":522163,"line_start":1611,"line_end":1611,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522338,"byte_end":522360,"line_start":1617,"line_end":1617,"column_start":12,"column_end":34},"name":"compute_bitfield_units","qualname":"<CompInfo>::compute_bitfield_units","value":"pub fn compute_bitfield_units(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Compute this compound structure's bitfield allocation units.\n","sig":null,"attributes":[{"value":"/ Compute this compound structure's bitfield allocation units.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522262,"byte_end":522326,"line_start":1616,"line_end":1616,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522673,"byte_end":522691,"line_start":1624,"line_end":1624,"column_start":12,"column_end":30},"name":"deanonymize_fields","qualname":"<CompInfo>::deanonymize_fields","value":"pub fn deanonymize_fields(&mut Self, &BindgenContext)","parent":null,"children":[],"decl_id":null,"docs":" Assign for each anonymous field a generated name.\n","sig":null,"attributes":[{"value":"/ Assign for each anonymous field a generated name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522608,"byte_end":522661,"line_start":1623,"line_end":1623,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":523020,"byte_end":523037,"line_start":1633,"line_end":1633,"column_start":12,"column_end":29},"name":"can_be_rust_union","qualname":"<CompInfo>::can_be_rust_union","value":"pub fn can_be_rust_union(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current union can be represented as a Rust `union`","sig":null,"attributes":[{"value":"/ Returns whether the current union can be represented as a Rust `union`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522798,"byte_end":522872,"line_start":1628,"line_end":1628,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522877,"byte_end":522880,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ Requirements:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522885,"byte_end":522902,"line_start":1630,"line_end":1630,"column_start":5,"column_end":22}},{"value":"/     1. Current RustTarget allows for `untagged_union`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522907,"byte_end":522964,"line_start":1631,"line_end":1631,"column_start":5,"column_end":62}},{"value":"/     2. Each field can derive `Copy`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":522969,"byte_end":523008,"line_start":1632,"line_end":1632,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4932},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":529922,"byte_end":529928,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"ItemId","qualname":"::ir::context::ItemId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for some kind of IR item.\n","sig":null,"attributes":[{"value":"/ An identifier for some kind of IR item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":529810,"byte_end":529853,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4964},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532152,"byte_end":532158,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"name":"TypeId","qualname":"::ir::context::TypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Type`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532316,"byte_end":532326,"line_start":120,"line_end":120,"column_start":19,"column_end":29},"name":"as_type_id","qualname":"<ItemId>::as_type_id","value":"pub fn as_type_id(&Self, &BindgenContext) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` if its associated item is a type,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4962},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532491,"byte_end":532505,"line_start":125,"line_end":125,"column_start":20,"column_end":34},"name":"expect_type_id","qualname":"<ItemId>::expect_type_id","value":"pub fn expect_type_id(&Self, &BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532661,"byte_end":532681,"line_start":129,"line_end":129,"column_start":21,"column_end":41},"name":"as_type_id_unchecked","qualname":"<ItemId>::as_type_id_unchecked","value":"pub fn as_type_id_unchecked(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `TypeId` without actually checking whether\n this id actually points to a `Type`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532816,"byte_end":532824,"line_start":135,"line_end":135,"column_start":16,"column_end":24},"name":"ModuleId","qualname":"::ir::context::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Module`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4993},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":532986,"byte_end":532998,"line_start":139,"line_end":139,"column_start":19,"column_end":31},"name":"as_module_id","qualname":"<ItemId>::as_module_id","value":"pub fn as_module_id(&Self, &BindgenContext) -> Option<ModuleId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` if its associated item is a\n module, otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4994},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533169,"byte_end":533185,"line_start":144,"line_end":144,"column_start":20,"column_end":36},"name":"expect_module_id","qualname":"<ItemId>::expect_module_id","value":"pub fn expect_module_id(&Self, &BindgenContext) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4995},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533345,"byte_end":533367,"line_start":148,"line_end":148,"column_start":21,"column_end":43},"name":"as_module_id_unchecked","qualname":"<ItemId>::as_module_id_unchecked","value":"pub fn as_module_id_unchecked(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `ModuleId` without actually checking\n whether this id actually points to a `Module`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533499,"byte_end":533504,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"VarId","qualname":"::ir::context::VarId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Var`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5025},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533660,"byte_end":533669,"line_start":158,"line_end":158,"column_start":19,"column_end":28},"name":"as_var_id","qualname":"<ItemId>::as_var_id","value":"pub fn as_var_id(&Self, &BindgenContext) -> Option<VarId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` if its associated item is a var,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533831,"byte_end":533844,"line_start":163,"line_end":163,"column_start":20,"column_end":33},"name":"expect_var_id","qualname":"<ItemId>::expect_var_id","value":"pub fn expect_var_id(&Self, &BindgenContext) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5027},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":533998,"byte_end":534017,"line_start":167,"line_end":167,"column_start":21,"column_end":40},"name":"as_var_id_unchecked","qualname":"<ItemId>::as_var_id_unchecked","value":"pub fn as_var_id_unchecked(&Self) -> VarId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `VarId` without actually checking whether\n this id actually points to a `Var`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5060},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534154,"byte_end":534164,"line_start":173,"line_end":173,"column_start":16,"column_end":26},"name":"FunctionId","qualname":"::ir::context::FunctionId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an `Item` whose `ItemKind` is known to be\n `ItemKind::Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534330,"byte_end":534344,"line_start":177,"line_end":177,"column_start":19,"column_end":33},"name":"as_function_id","qualname":"<ItemId>::as_function_id","value":"pub fn as_function_id(&Self, &BindgenContext) -> Option<FunctionId>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` if its associated item is a function,\n otherwise return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5058},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534521,"byte_end":534539,"line_start":182,"line_end":182,"column_start":20,"column_end":38},"name":"expect_function_id","qualname":"<ItemId>::expect_function_id","value":"pub fn expect_function_id(&Self, &BindgenContext) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5059},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534703,"byte_end":534727,"line_start":186,"line_end":186,"column_start":21,"column_end":45},"name":"as_function_id_unchecked","qualname":"<ItemId>::as_function_id_unchecked","value":"pub fn as_function_id_unchecked(&Self) -> FunctionId","parent":null,"children":[],"decl_id":null,"docs":" Convert this `ItemId` into a `FunctionId` without actually checking whether\n this id actually points to a `Function`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534893,"byte_end":534901,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<ItemId>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get a numeric representation of this id.\n","sig":null,"attributes":[{"value":"/ Get a numeric representation of this id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534837,"byte_end":534881,"line_start":196,"line_end":196,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5097},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":537682,"byte_end":537696,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"BindgenContext","qualname":"::ir::context::BindgenContext","value":"BindgenContext {  }","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129}],"decl_id":null,"docs":" A context used during parsing and generation of structs.\n","sig":null,"attributes":[{"value":"/ A context used during parsing and generation of structs.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":537593,"byte_end":537653,"line_start":306,"line_end":306,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":547675,"byte_end":547691,"line_start":581,"line_end":581,"column_start":12,"column_end":28},"name":"is_target_wasm32","qualname":"<BindgenContext>::is_target_wasm32","value":"pub fn is_target_wasm32(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the target architecture is wasm32\n","sig":null,"attributes":[{"value":"/ Returns `true` if the target architecture is wasm32","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":547608,"byte_end":547663,"line_start":580,"line_end":580,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548037,"byte_end":548042,"line_start":591,"line_end":591,"column_start":12,"column_end":17},"name":"timer","qualname":"<BindgenContext>::timer","value":"pub fn timer<'a>(&Self, &'a str) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer for the current bindgen phase. If time_phases is `true`,\n the timer will print to stderr when it is dropped, otherwise it will do\n nothing.\n","sig":null,"attributes":[{"value":"/ Creates a timer for the current bindgen phase. If time_phases is `true`,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":547852,"byte_end":547928,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ the timer will print to stderr when it is dropped, otherwise it will do","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":547933,"byte_end":548008,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ nothing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548013,"byte_end":548025,"line_start":590,"line_end":590,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548258,"byte_end":548277,"line_start":597,"line_end":597,"column_start":12,"column_end":31},"name":"target_pointer_size","qualname":"<BindgenContext>::target_pointer_size","value":"pub fn target_pointer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the pointer width to use for the target for the current\n translation.\n","sig":null,"attributes":[{"value":"/ Returns the pointer width to use for the target for the current","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548158,"byte_end":548225,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ translation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548230,"byte_end":548246,"line_start":596,"line_end":596,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548542,"byte_end":548564,"line_start":606,"line_end":606,"column_start":12,"column_end":34},"name":"currently_parsed_types","qualname":"<BindgenContext>::currently_parsed_types","value":"pub fn currently_parsed_types(&Self) -> &[PartialType]","parent":null,"children":[],"decl_id":null,"docs":" Get the stack of partially parsed types that we are in the middle of\n parsing.\n","sig":null,"attributes":[{"value":"/ Get the stack of partially parsed types that we are in the middle of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548441,"byte_end":548513,"line_start":604,"line_end":604,"column_start":5,"column_end":77}},{"value":"/ parsing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548518,"byte_end":548530,"line_start":605,"line_end":605,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548850,"byte_end":548863,"line_start":613,"line_end":613,"column_start":12,"column_end":25},"name":"begin_parsing","qualname":"<BindgenContext>::begin_parsing","value":"pub fn begin_parsing(&mut Self, PartialType)","parent":null,"children":[],"decl_id":null,"docs":" Begin parsing the given partial type, and push it onto the\n `currently_parsed_types` stack so that we won't infinite recurse if we\n run into a reference to it while parsing it.\n","sig":null,"attributes":[{"value":"/ Begin parsing the given partial type, and push it onto the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548644,"byte_end":548706,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/ `currently_parsed_types` stack so that we won't infinite recurse if we","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548711,"byte_end":548785,"line_start":611,"line_end":611,"column_start":5,"column_end":79}},{"value":"/ run into a reference to it while parsing it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548790,"byte_end":548838,"line_start":612,"line_end":612,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549093,"byte_end":549107,"line_start":619,"line_end":619,"column_start":12,"column_end":26},"name":"finish_parsing","qualname":"<BindgenContext>::finish_parsing","value":"pub fn finish_parsing(&mut Self) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Finish parsing the current partial type, pop it off the\n `currently_parsed_types` stack, and return it.\n","sig":null,"attributes":[{"value":"/ Finish parsing the current partial type, pop it off the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":548967,"byte_end":549026,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ `currently_parsed_types` stack, and return it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549031,"byte_end":549081,"line_start":618,"line_end":618,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549354,"byte_end":549369,"line_start":626,"line_end":626,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<BindgenContext>::parse_callbacks","value":"pub fn parse_callbacks(&Self) -> Option<&dyn ParseCallbacks>","parent":null,"children":[],"decl_id":null,"docs":" Get the user-provided callbacks by reference, if any.\n","sig":null,"attributes":[{"value":"/ Get the user-provided callbacks by reference, if any.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549285,"byte_end":549342,"line_start":625,"line_end":625,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549628,"byte_end":549636,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"name":"add_item","qualname":"<BindgenContext>::add_item","value":"pub fn add_item(&mut Self, Item, Option<Cursor>, Option<Cursor>)","parent":null,"children":[],"decl_id":null,"docs":" Define a new item.","sig":null,"attributes":[{"value":"/ Define a new item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549483,"byte_end":549505,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549510,"byte_end":549513,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This inserts it into the internal items set, and its type into the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549518,"byte_end":549588,"line_start":632,"line_end":632,"column_start":5,"column_end":75}},{"value":"/ internal types set.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":549593,"byte_end":549616,"line_start":633,"line_end":633,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":554167,"byte_end":554181,"line_start":757,"line_end":757,"column_start":12,"column_end":26},"name":"add_type_param","qualname":"<BindgenContext>::add_type_param","value":"pub fn add_type_param(&mut Self, Item, clang::Cursor)","parent":null,"children":[],"decl_id":null,"docs":" Add a new named template type parameter to this context's item set.\n","sig":null,"attributes":[{"value":"/ Add a new named template type parameter to this context's item set.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":554084,"byte_end":554155,"line_start":756,"line_end":756,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":555298,"byte_end":555312,"line_start":792,"line_end":792,"column_start":12,"column_end":26},"name":"get_type_param","qualname":"<BindgenContext>::get_type_param","value":"pub fn get_type_param(&Self, &clang::Cursor) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get the named type defined at the given cursor location, if we've\n already added one.\n","sig":null,"attributes":[{"value":"/ Get the named type defined at the given cursor location, if we've","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":555190,"byte_end":555259,"line_start":790,"line_end":790,"column_start":5,"column_end":74}},{"value":"/ already added one.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":555264,"byte_end":555286,"line_start":791,"line_end":791,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":555683,"byte_end":555694,"line_start":803,"line_end":803,"column_start":12,"column_end":23},"name":"rust_mangle","qualname":"<BindgenContext>::rust_mangle","value":"pub fn rust_mangle<'a>(&Self, &'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Mangles a name so it doesn't conflict with any keyword.\n","sig":null,"attributes":[{"value":"/ Mangles a name so it doesn't conflict with any keyword.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":555612,"byte_end":555671,"line_start":802,"line_end":802,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557092,"byte_end":557102,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"rust_ident","qualname":"<BindgenContext>::rust_ident","value":"pub fn rust_ident<S>(&Self, S) -> Ident where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557032,"byte_end":557080,"line_start":833,"line_end":833,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557302,"byte_end":557316,"line_start":842,"line_end":842,"column_start":12,"column_end":26},"name":"rust_ident_raw","qualname":"<BindgenContext>::rust_ident_raw","value":"pub fn rust_ident_raw<T>(&Self, T) -> Ident where T: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mangled name as a rust identifier.\n","sig":null,"attributes":[{"value":"/ Returns a mangled name as a rust identifier.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557242,"byte_end":557290,"line_start":841,"line_end":841,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557510,"byte_end":557515,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"items","qualname":"<BindgenContext>::items","value":"pub fn items(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all items that have been defined.\n","sig":null,"attributes":[{"value":"/ Iterate over all items that have been defined.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557448,"byte_end":557498,"line_start":849,"line_end":849,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557803,"byte_end":557821,"line_start":858,"line_end":858,"column_start":12,"column_end":30},"name":"collected_typerefs","qualname":"<BindgenContext>::collected_typerefs","value":"pub fn collected_typerefs(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we collected all unresolved type references yet?\n","sig":null,"attributes":[{"value":"/ Have we collected all unresolved type references yet?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":557734,"byte_end":557791,"line_start":857,"line_end":857,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":571470,"byte_end":571486,"line_start":1239,"line_end":1239,"column_start":12,"column_end":28},"name":"lookup_sizedness","qualname":"<BindgenContext>::lookup_sizedness","value":"pub fn lookup_sizedness(&Self, TypeId) -> SizednessResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the type with the given id is sized or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the type with the given id is sized or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":571395,"byte_end":571458,"line_start":1238,"line_end":1238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":572159,"byte_end":572176,"line_start":1261,"line_end":1261,"column_start":12,"column_end":29},"name":"lookup_has_vtable","qualname":"<BindgenContext>::lookup_has_vtable","value":"pub fn lookup_has_vtable(&Self, TypeId) -> HasVtableResult","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has vtable or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has vtable or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":572090,"byte_end":572147,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":572969,"byte_end":572990,"line_start":1285,"line_end":1285,"column_start":12,"column_end":33},"name":"lookup_has_destructor","qualname":"<BindgenContext>::lookup_has_destructor","value":"pub fn lookup_has_destructor(&Self, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has a destructor.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has a destructor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":572901,"byte_end":572957,"line_start":1284,"line_end":1284,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574952,"byte_end":574975,"line_start":1329,"line_end":1329,"column_start":12,"column_end":35},"name":"uses_template_parameter","qualname":"<BindgenContext>::uses_template_parameter","value":"pub fn uses_template_parameter(&Self, ItemId, TypeId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses the given `template_param`, `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses the given `template_param`, `false`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574131,"byte_end":574199,"line_start":1315,"line_end":1315,"column_start":5,"column_end":73}},{"value":"/ otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574204,"byte_end":574218,"line_start":1316,"line_end":1316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574223,"byte_end":574226,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ This method may only be called during the codegen phase, because the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574231,"byte_end":574303,"line_start":1318,"line_end":1318,"column_start":5,"column_end":77}},{"value":"/ template usage information is only computed as we enter the codegen","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574308,"byte_end":574379,"line_start":1319,"line_end":1319,"column_start":5,"column_end":76}},{"value":"/ phase.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574384,"byte_end":574394,"line_start":1320,"line_end":1320,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574399,"byte_end":574402,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ If the item is blacklisted, then we say that it always uses the template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574407,"byte_end":574483,"line_start":1322,"line_end":1322,"column_start":5,"column_end":81}},{"value":"/ parameter. This is a little subtle. The template parameter usage","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574488,"byte_end":574556,"line_start":1323,"line_end":1323,"column_start":5,"column_end":73}},{"value":"/ analysis only considers whitelisted items, and if any blacklisted item","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574561,"byte_end":574635,"line_start":1324,"line_end":1324,"column_start":5,"column_end":79}},{"value":"/ shows up in the generated bindings, it is the user's responsibility to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574640,"byte_end":574714,"line_start":1325,"line_end":1325,"column_start":5,"column_end":79}},{"value":"/ manually provide a definition for them. To give them the most","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574719,"byte_end":574784,"line_start":1326,"line_end":1326,"column_start":5,"column_end":70}},{"value":"/ flexibility when doing that, we assume that they use every template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574789,"byte_end":574860,"line_start":1327,"line_end":1327,"column_start":5,"column_end":76}},{"value":"/ parameter and always pass template arguments through in instantiations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":574865,"byte_end":574940,"line_start":1328,"line_end":1328,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":575950,"byte_end":575978,"line_start":1361,"line_end":1361,"column_start":12,"column_end":40},"name":"uses_any_template_parameters","qualname":"<BindgenContext>::uses_any_template_parameters","value":"pub fn uses_any_template_parameters(&Self, ItemId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if `item` uses any unbound, generic template parameters,\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if `item` uses any unbound, generic template parameters,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":575759,"byte_end":575833,"line_start":1357,"line_end":1357,"column_start":5,"column_end":79}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":575838,"byte_end":575860,"line_start":1358,"line_end":1358,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":575865,"byte_end":575868,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ Has the same restrictions that `uses_template_parameter` has.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":575873,"byte_end":575938,"line_start":1360,"line_end":1360,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577405,"byte_end":577416,"line_start":1399,"line_end":1399,"column_start":12,"column_end":23},"name":"root_module","qualname":"<BindgenContext>::root_module","value":"pub fn root_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the root module.\n","sig":null,"attributes":[{"value":"/ Get the root module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577369,"byte_end":577393,"line_start":1398,"line_end":1398,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577638,"byte_end":577650,"line_start":1407,"line_end":1407,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<BindgenContext>::resolve_type","value":"pub fn resolve_type(&Self, TypeId) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Resolve a type with the given id.","sig":null,"attributes":[{"value":"/ Resolve a type with the given id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577474,"byte_end":577511,"line_start":1403,"line_end":1403,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577516,"byte_end":577519,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `TypeId` or if the resolved","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577524,"byte_end":577596,"line_start":1405,"line_end":1405,"column_start":5,"column_end":77}},{"value":"/ item is not a `Type`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577601,"byte_end":577626,"line_start":1406,"line_end":1406,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577929,"byte_end":577941,"line_start":1415,"line_end":1415,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<BindgenContext>::resolve_func","value":"pub fn resolve_func(&Self, FunctionId) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Resolve a function with the given id.","sig":null,"attributes":[{"value":"/ Resolve a function with the given id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577753,"byte_end":577794,"line_start":1411,"line_end":1411,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577799,"byte_end":577802,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Panics if there is no item for the given `FunctionId` or if the resolved","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577807,"byte_end":577883,"line_start":1413,"line_end":1413,"column_start":5,"column_end":81}},{"value":"/ item is not a `Function`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":577888,"byte_end":577917,"line_start":1414,"line_end":1414,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578239,"byte_end":578256,"line_start":1423,"line_end":1423,"column_start":12,"column_end":29},"name":"safe_resolve_type","qualname":"<BindgenContext>::safe_resolve_type","value":"pub fn safe_resolve_type(&Self, TypeId) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` as a type, or `None` if there is no item with\n the given id.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` as a type, or `None` if there is no item with","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578056,"byte_end":578132,"line_start":1419,"line_end":1419,"column_start":5,"column_end":81}},{"value":"/ the given id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578137,"byte_end":578154,"line_start":1420,"line_end":1420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578159,"byte_end":578162,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ Panics if the id resolves to an item that is not a type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578167,"byte_end":578227,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578500,"byte_end":578521,"line_start":1430,"line_end":1430,"column_start":12,"column_end":33},"name":"resolve_item_fallible","qualname":"<BindgenContext>::resolve_item_fallible","value":"pub fn resolve_item_fallible<Id: Into<ItemId>>(&Self, Id) -> Option<&Item>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`, or `None` if no such item\n exists.\n","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`, or `None` if no such item","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578400,"byte_end":578472,"line_start":1428,"line_end":1428,"column_start":5,"column_end":77}},{"value":"/ exists.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578477,"byte_end":578488,"line_start":1429,"line_end":1429,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578781,"byte_end":578793,"line_start":1440,"line_end":1440,"column_start":12,"column_end":24},"name":"resolve_item","qualname":"<BindgenContext>::resolve_item","value":"pub fn resolve_item<Id: Into<ItemId>>(&Self, Id) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Resolve the given `ItemId` into an `Item`.","sig":null,"attributes":[{"value":"/ Resolve the given `ItemId` into an `Item`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578654,"byte_end":578700,"line_start":1437,"line_end":1437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578705,"byte_end":578708,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ Panics if the given id does not resolve to any item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":578713,"byte_end":578769,"line_start":1439,"line_end":1439,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579083,"byte_end":579097,"line_start":1449,"line_end":1449,"column_start":12,"column_end":26},"name":"current_module","qualname":"<BindgenContext>::current_module","value":"pub fn current_module(&Self) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Get the current module.\n","sig":null,"attributes":[{"value":"/ Get the current module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579044,"byte_end":579071,"line_start":1448,"line_end":1448,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579533,"byte_end":579552,"line_start":1461,"line_end":1461,"column_start":12,"column_end":31},"name":"add_semantic_parent","qualname":"<BindgenContext>::add_semantic_parent","value":"pub fn add_semantic_parent(&mut Self, clang::Cursor, ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Add a semantic parent for a given type definition.","sig":null,"attributes":[{"value":"/ Add a semantic parent for a given type definition.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579158,"byte_end":579212,"line_start":1453,"line_end":1453,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579217,"byte_end":579220,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ We do this from the type declaration, in order to be able to find the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579225,"byte_end":579298,"line_start":1455,"line_end":1455,"column_start":5,"column_end":78}},{"value":"/ correct type definition afterwards.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579303,"byte_end":579342,"line_start":1456,"line_end":1456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579347,"byte_end":579350,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ TODO(emilio): We could consider doing this only when","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579355,"byte_end":579411,"line_start":1458,"line_end":1458,"column_start":5,"column_end":61}},{"value":"/ declaration.lexical_parent() != definition.lexical_parent(), but it's","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579416,"byte_end":579489,"line_start":1459,"line_end":1459,"column_start":5,"column_end":78}},{"value":"/ not sure it's worth it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579494,"byte_end":579521,"line_start":1460,"line_end":1460,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579786,"byte_end":579807,"line_start":1470,"line_end":1470,"column_start":12,"column_end":33},"name":"known_semantic_parent","qualname":"<BindgenContext>::known_semantic_parent","value":"pub fn known_semantic_parent(&Self, clang::Cursor) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Returns a known semantic parent for a given definition.\n","sig":null,"attributes":[{"value":"/ Returns a known semantic parent for a given definition.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":579715,"byte_end":579774,"line_start":1469,"line_end":1469,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":592740,"byte_end":592757,"line_start":1781,"line_end":1781,"column_start":12,"column_end":29},"name":"get_resolved_type","qualname":"<BindgenContext>::get_resolved_type","value":"pub fn get_resolved_type(&Self, &clang::CanonicalTypeDeclaration)\n-> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" If we have already resolved the type for the given type declaration,\n return its `ItemId`. Otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If we have already resolved the type for the given type declaration,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":592601,"byte_end":592673,"line_start":1779,"line_end":1779,"column_start":5,"column_end":77}},{"value":"/ return its `ItemId`. Otherwise, return `None`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":592678,"byte_end":592728,"line_start":1780,"line_end":1780,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":593259,"byte_end":593281,"line_start":1797,"line_end":1797,"column_start":12,"column_end":34},"name":"builtin_or_resolved_ty","qualname":"<BindgenContext>::builtin_or_resolved_ty","value":"pub fn builtin_or_resolved_ty(&mut Self, ItemId, Option<ItemId>, &clang::Type,\n                              Option<clang::Cursor>) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Looks up for an already resolved type, either because it's builtin, or\n because we already have it in the map.\n","sig":null,"attributes":[{"value":"/ Looks up for an already resolved type, either because it's builtin, or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":593126,"byte_end":593200,"line_start":1795,"line_end":1795,"column_start":5,"column_end":79}},{"value":"/ because we already have it in the map.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":593205,"byte_end":593247,"line_start":1796,"line_end":1796,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596189,"byte_end":596205,"line_start":1867,"line_end":1867,"column_start":12,"column_end":28},"name":"build_ty_wrapper","qualname":"<BindgenContext>::build_ty_wrapper","value":"pub fn build_ty_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                        &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Make a new item that is a resolved type reference to the `wrapped_id`.","sig":null,"attributes":[{"value":"/ Make a new item that is a resolved type reference to the `wrapped_id`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":595815,"byte_end":595889,"line_start":1859,"line_end":1859,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":595894,"byte_end":595897,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ This is unfortunately a lot of bloat, but is needed to properly track","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":595902,"byte_end":595975,"line_start":1861,"line_end":1861,"column_start":5,"column_end":78}},{"value":"/ constness et al.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":595980,"byte_end":596000,"line_start":1862,"line_end":1862,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596005,"byte_end":596008,"line_start":1863,"line_end":1863,"column_start":5,"column_end":8}},{"value":"/ We should probably make the constness tracking separate, so it doesn't","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596013,"byte_end":596087,"line_start":1864,"line_end":1864,"column_start":5,"column_end":79}},{"value":"/ bloat that much, but hey, we already bloat the heck out of builtin","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596092,"byte_end":596162,"line_start":1865,"line_end":1865,"column_start":5,"column_end":75}},{"value":"/ types.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596167,"byte_end":596177,"line_start":1866,"line_end":1866,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596599,"byte_end":596618,"line_start":1880,"line_end":1880,"column_start":12,"column_end":31},"name":"build_const_wrapper","qualname":"<BindgenContext>::build_const_wrapper","value":"pub fn build_const_wrapper(&mut Self, ItemId, TypeId, Option<ItemId>,\n                           &clang::Type) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" A wrapper over a type that adds a const qualifier explicitly.","sig":null,"attributes":[{"value":"/ A wrapper over a type that adds a const qualifier explicitly.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596447,"byte_end":596512,"line_start":1877,"line_end":1877,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596517,"byte_end":596520,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ Needed to handle const methods in C++, wrapping the type .","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":596525,"byte_end":596587,"line_start":1879,"line_end":1879,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":597652,"byte_end":597664,"line_start":1916,"line_end":1916,"column_start":12,"column_end":24},"name":"next_item_id","qualname":"<BindgenContext>::next_item_id","value":"pub fn next_item_id(&mut Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Returns the next item id to be used for an item.\n","sig":null,"attributes":[{"value":"/ Returns the next item id to be used for an item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":597588,"byte_end":597640,"line_start":1915,"line_end":1915,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":600681,"byte_end":600697,"line_start":1984,"line_end":1984,"column_start":12,"column_end":28},"name":"translation_unit","qualname":"<BindgenContext>::translation_unit","value":"pub fn translation_unit(&Self) -> &clang::TranslationUnit","parent":null,"children":[],"decl_id":null,"docs":" Get the current Clang translation unit that is being processed.\n","sig":null,"attributes":[{"value":"/ Get the current Clang translation unit that is being processed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":600602,"byte_end":600669,"line_start":1983,"line_end":1983,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":600844,"byte_end":600856,"line_start":1989,"line_end":1989,"column_start":12,"column_end":24},"name":"parsed_macro","qualname":"<BindgenContext>::parsed_macro","value":"pub fn parsed_macro(&Self, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Have we parsed the macro named `macro_name` already?\n","sig":null,"attributes":[{"value":"/ Have we parsed the macro named `macro_name` already?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":600776,"byte_end":600832,"line_start":1988,"line_end":1988,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601004,"byte_end":601017,"line_start":1994,"line_end":1994,"column_start":12,"column_end":25},"name":"parsed_macros","qualname":"<BindgenContext>::parsed_macros","value":"pub fn parsed_macros(&Self) -> &StdHashMap<Vec<u8>, cexpr::expr::EvalResult>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently parsed macros.\n","sig":null,"attributes":[{"value":"/ Get the currently parsed macros.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":600956,"byte_end":600992,"line_start":1993,"line_end":1993,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601239,"byte_end":601256,"line_start":2002,"line_end":2002,"column_start":12,"column_end":29},"name":"note_parsed_macro","qualname":"<BindgenContext>::note_parsed_macro","value":"pub fn note_parsed_macro(&mut Self, Vec<u8>, cexpr::expr::EvalResult)","parent":null,"children":[],"decl_id":null,"docs":" Mark the macro named `macro_name` as parsed.\n","sig":null,"attributes":[{"value":"/ Mark the macro named `macro_name` as parsed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601179,"byte_end":601227,"line_start":2001,"line_end":2001,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601447,"byte_end":601463,"line_start":2011,"line_end":2011,"column_start":12,"column_end":28},"name":"in_codegen_phase","qualname":"<BindgenContext>::in_codegen_phase","value":"pub fn in_codegen_phase(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are we in the codegen phase?\n","sig":null,"attributes":[{"value":"/ Are we in the codegen phase?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601403,"byte_end":601435,"line_start":2010,"line_end":2010,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601763,"byte_end":601770,"line_start":2020,"line_end":2020,"column_start":12,"column_end":19},"name":"replace","qualname":"<BindgenContext>::replace","value":"pub fn replace(&mut Self, &[String], ItemId)","parent":null,"children":[],"decl_id":null,"docs":" Mark the type with the given `name` as replaced by the type with id\n `potential_ty`.","sig":null,"attributes":[{"value":"/ Mark the type with the given `name` as replaced by the type with id","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601516,"byte_end":601587,"line_start":2015,"line_end":2015,"column_start":5,"column_end":76}},{"value":"/ `potential_ty`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601592,"byte_end":601611,"line_start":2016,"line_end":2016,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601616,"byte_end":601619,"line_start":2017,"line_end":2017,"column_start":5,"column_end":8}},{"value":"/ Replacement types are declared using the `replaces=\"xxx\"` annotation,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601624,"byte_end":601697,"line_start":2018,"line_end":2018,"column_start":5,"column_end":78}},{"value":"/ and implies that the original type is hidden.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":601702,"byte_end":601751,"line_start":2019,"line_end":2019,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":602570,"byte_end":602586,"line_start":2043,"line_end":2043,"column_start":12,"column_end":28},"name":"is_replaced_type","qualname":"<BindgenContext>::is_replaced_type","value":"pub fn is_replaced_type<Id: Into<ItemId>>(&Self, &[String], Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the item with the given `name` and `id` been replaced by another\n type?\n","sig":null,"attributes":[{"value":"/ Has the item with the given `name` and `id` been replaced by another","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":602472,"byte_end":602544,"line_start":2041,"line_end":2041,"column_start":5,"column_end":77}},{"value":"/ type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":602549,"byte_end":602558,"line_start":2042,"line_end":2042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":602923,"byte_end":602937,"line_start":2056,"line_end":2056,"column_start":12,"column_end":26},"name":"opaque_by_name","qualname":"<BindgenContext>::opaque_by_name","value":"pub fn opaque_by_name(&Self, &[String]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the type with the given `name` marked as opaque?\n","sig":null,"attributes":[{"value":"/ Is the type with the given `name` marked as opaque?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":602856,"byte_end":602911,"line_start":2055,"line_end":2055,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":606749,"byte_end":606755,"line_start":2153,"line_end":2153,"column_start":12,"column_end":18},"name":"module","qualname":"<BindgenContext>::module","value":"pub fn module(&mut Self, clang::Cursor) -> ModuleId","parent":null,"children":[],"decl_id":null,"docs":" Given a CXCursor_Namespace cursor, return the item id of the\n corresponding module, or create one on the fly.\n","sig":null,"attributes":[{"value":"/ Given a CXCursor_Namespace cursor, return the item id of the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":606617,"byte_end":606681,"line_start":2151,"line_end":2151,"column_start":5,"column_end":69}},{"value":"/ corresponding module, or create one on the fly.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":606686,"byte_end":606737,"line_start":2152,"line_end":2152,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":607723,"byte_end":607734,"line_start":2183,"line_end":2183,"column_start":12,"column_end":23},"name":"with_module","qualname":"<BindgenContext>::with_module","value":"pub fn with_module<F>(&mut Self, ModuleId, F) where F: FnOnce(&mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start traversing the module with the given `module_id`, invoke the\n callback `cb`, and then return to traversing the original module.\n","sig":null,"attributes":[{"value":"/ Start traversing the module with the given `module_id`, invoke the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":607567,"byte_end":607637,"line_start":2181,"line_end":2181,"column_start":5,"column_end":75}},{"value":"/ callback `cb`, and then return to traversing the original module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":607642,"byte_end":607711,"line_start":2182,"line_end":2182,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608252,"byte_end":608269,"line_start":2201,"line_end":2201,"column_start":12,"column_end":29},"name":"whitelisted_items","qualname":"<BindgenContext>::whitelisted_items","value":"pub fn whitelisted_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all (explicitly or transitively) whitelisted items.","sig":null,"attributes":[{"value":"/ Iterate over all (explicitly or transitively) whitelisted items.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608065,"byte_end":608133,"line_start":2197,"line_end":2197,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608138,"byte_end":608141,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ If no items are explicitly whitelisted, then all items are considered","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608146,"byte_end":608219,"line_start":2199,"line_end":2199,"column_start":5,"column_end":78}},{"value":"/ whitelisted.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608224,"byte_end":608240,"line_start":2200,"line_end":2200,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608517,"byte_end":608530,"line_start":2209,"line_end":2209,"column_start":12,"column_end":25},"name":"codegen_items","qualname":"<BindgenContext>::codegen_items","value":"pub fn codegen_items(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set of items we should generate.\n","sig":null,"attributes":[{"value":"/ Get a reference to the set of items we should generate.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":608446,"byte_end":608505,"line_start":2208,"line_end":2208,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615490,"byte_end":615502,"line_start":2367,"line_end":2367,"column_start":12,"column_end":24},"name":"trait_prefix","qualname":"<BindgenContext>::trait_prefix","value":"pub fn trait_prefix(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Convenient method for getting the prefix to use for most traits in\n codegen depending on the `use_core` option.\n","sig":null,"attributes":[{"value":"/ Convenient method for getting the prefix to use for most traits in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615356,"byte_end":615426,"line_start":2365,"line_end":2365,"column_start":5,"column_end":75}},{"value":"/ codegen depending on the `use_core` option.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615431,"byte_end":615478,"line_start":2366,"line_end":2366,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615729,"byte_end":615754,"line_start":2376,"line_end":2376,"column_start":12,"column_end":37},"name":"generated_bindgen_complex","qualname":"<BindgenContext>::generated_bindgen_complex","value":"pub fn generated_bindgen_complex(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Call if a bindgen complex is generated\n","sig":null,"attributes":[{"value":"/ Call if a bindgen complex is generated","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615675,"byte_end":615717,"line_start":2375,"line_end":2375,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615892,"byte_end":615917,"line_start":2381,"line_end":2381,"column_start":12,"column_end":37},"name":"need_bindgen_complex_type","qualname":"<BindgenContext>::need_bindgen_complex_type","value":"pub fn need_bindgen_complex_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether we need to generate the bindgen complex type\n","sig":null,"attributes":[{"value":"/ Whether we need to generate the bindgen complex type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":615824,"byte_end":615880,"line_start":2380,"line_end":2380,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":616531,"byte_end":616554,"line_start":2400,"line_end":2400,"column_start":12,"column_end":35},"name":"lookup_can_derive_debug","qualname":"<BindgenContext>::lookup_can_derive_debug","value":"pub fn lookup_can_derive_debug<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive debug or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":616448,"byte_end":616490,"line_start":2398,"line_end":2398,"column_start":5,"column_end":47}},{"value":"/ derive debug or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":616495,"byte_end":616519,"line_start":2399,"line_end":2399,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":617499,"byte_end":617524,"line_start":2427,"line_end":2427,"column_start":12,"column_end":37},"name":"lookup_can_derive_default","qualname":"<BindgenContext>::lookup_can_derive_default","value":"pub fn lookup_can_derive_default<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive default or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":617414,"byte_end":617456,"line_start":2425,"line_end":2425,"column_start":5,"column_end":47}},{"value":"/ derive default or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":617461,"byte_end":617487,"line_start":2426,"line_end":2426,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":618833,"byte_end":618855,"line_start":2465,"line_end":2465,"column_start":12,"column_end":34},"name":"lookup_can_derive_hash","qualname":"<BindgenContext>::lookup_can_derive_hash","value":"pub fn lookup_can_derive_hash<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can\n derive hash or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":618751,"byte_end":618793,"line_start":2463,"line_end":2463,"column_start":5,"column_end":47}},{"value":"/ derive hash or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":618798,"byte_end":618821,"line_start":2464,"line_end":2464,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":619969,"byte_end":620010,"line_start":2494,"line_end":2494,"column_start":12,"column_end":53},"name":"lookup_can_derive_partialeq_or_partialord","qualname":"<BindgenContext>::lookup_can_derive_partialeq_or_partialord","value":"pub fn lookup_can_derive_partialeq_or_partialord<Id: Into<ItemId>>(&Self, Id)\n-> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Partial{Eq,Ord}`.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Partial{Eq,Ord}`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":619889,"byte_end":619957,"line_start":2493,"line_end":2493,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":620637,"byte_end":620659,"line_start":2515,"line_end":2515,"column_start":12,"column_end":34},"name":"lookup_can_derive_copy","qualname":"<BindgenContext>::lookup_can_derive_copy","value":"pub fn lookup_can_derive_copy<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` can derive `Copy` or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` can derive `Copy` or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":620561,"byte_end":620625,"line_start":2514,"line_end":2514,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":621532,"byte_end":621562,"line_start":2538,"line_end":2538,"column_start":12,"column_end":42},"name":"lookup_has_type_param_in_array","qualname":"<BindgenContext>::lookup_has_type_param_in_array","value":"pub fn lookup_has_type_param_in_array<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has type parameter in array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has type parameter in array or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":621446,"byte_end":621520,"line_start":2537,"line_end":2537,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":622384,"byte_end":622400,"line_start":2565,"line_end":2565,"column_start":12,"column_end":28},"name":"lookup_has_float","qualname":"<BindgenContext>::lookup_has_float","value":"pub fn lookup_has_float<Id: Into<ItemId>>(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Look up whether the item with `id` has array or not.\n","sig":null,"attributes":[{"value":"/ Look up whether the item with `id` has array or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":622316,"byte_end":622372,"line_start":2564,"line_end":2564,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":622815,"byte_end":622835,"line_start":2577,"line_end":2577,"column_start":12,"column_end":32},"name":"no_partialeq_by_name","qualname":"<BindgenContext>::no_partialeq_by_name","value":"pub fn no_partialeq_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-partialeq` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-partialeq` flag is enabled for this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":622743,"byte_end":622803,"line_start":2576,"line_end":2576,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623070,"byte_end":623085,"line_start":2583,"line_end":2583,"column_start":12,"column_end":27},"name":"no_copy_by_name","qualname":"<BindgenContext>::no_copy_by_name","value":"pub fn no_copy_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-copy` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-copy` flag is enabled for this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623003,"byte_end":623058,"line_start":2582,"line_end":2582,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623316,"byte_end":623332,"line_start":2589,"line_end":2589,"column_start":12,"column_end":28},"name":"no_debug_by_name","qualname":"<BindgenContext>::no_debug_by_name","value":"pub fn no_debug_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-debug` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-debug` flag is enabled for this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623248,"byte_end":623304,"line_start":2588,"line_end":2588,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623566,"byte_end":623584,"line_start":2595,"line_end":2595,"column_start":12,"column_end":30},"name":"no_default_by_name","qualname":"<BindgenContext>::no_default_by_name","value":"pub fn no_default_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-default` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-default` flag is enabled for this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623496,"byte_end":623554,"line_start":2594,"line_end":2594,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623817,"byte_end":623832,"line_start":2601,"line_end":2601,"column_start":12,"column_end":27},"name":"no_hash_by_name","qualname":"<BindgenContext>::no_hash_by_name","value":"pub fn no_hash_by_name(&Self, &Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if `--no-hash` flag is enabled for this item.\n","sig":null,"attributes":[{"value":"/ Check if `--no-hash` flag is enabled for this item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623750,"byte_end":623805,"line_start":2600,"line_end":2600,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5134},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624096,"byte_end":624108,"line_start":2609,"line_end":2609,"column_start":12,"column_end":24},"name":"ItemResolver","qualname":"::ir::context::ItemResolver","value":"ItemResolver {  }","parent":null,"children":[{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137}],"decl_id":null,"docs":" A builder struct for configuring item resolution options.\n","sig":null,"attributes":[{"value":"/ A builder struct for configuring item resolution options.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":623993,"byte_end":624054,"line_start":2607,"line_end":2607,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624268,"byte_end":624281,"line_start":2617,"line_end":2617,"column_start":12,"column_end":25},"name":"into_resolver","qualname":"<ItemId>::into_resolver","value":"pub fn into_resolver(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Create an `ItemResolver` from this item id.\n","sig":null,"attributes":[{"value":"/ Create an `ItemResolver` from this item id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624209,"byte_end":624256,"line_start":2616,"line_end":2616,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624562,"byte_end":624565,"line_start":2633,"line_end":2633,"column_start":12,"column_end":15},"name":"new","qualname":"<ItemResolver>::new","value":"pub fn new<Id: Into<ItemId>>(Id) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `ItemResolver` from the given id.\n","sig":null,"attributes":[{"value":"/ Construct a new `ItemResolver` from the given id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624497,"byte_end":624550,"line_start":2632,"line_end":2632,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624842,"byte_end":624859,"line_start":2643,"line_end":2643,"column_start":12,"column_end":29},"name":"through_type_refs","qualname":"<ItemResolver>::through_type_refs","value":"pub fn through_type_refs(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::TypeRef` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::TypeRef` items.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624781,"byte_end":624830,"line_start":2642,"line_end":2642,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":625010,"byte_end":625030,"line_start":2649,"line_end":2649,"column_start":12,"column_end":32},"name":"through_type_aliases","qualname":"<ItemResolver>::through_type_aliases","value":"pub fn through_type_aliases(Self) -> ItemResolver","parent":null,"children":[],"decl_id":null,"docs":" Keep resolving through `Type::Alias` items.\n","sig":null,"attributes":[{"value":"/ Keep resolving through `Type::Alias` items.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624951,"byte_end":624998,"line_start":2648,"line_end":2648,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":625199,"byte_end":625206,"line_start":2655,"line_end":2655,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ItemResolver>::resolve","value":"pub fn resolve(Self, &BindgenContext) -> &Item","parent":null,"children":[],"decl_id":null,"docs":" Finish configuring and perform the actual item resolution.\n","sig":null,"attributes":[{"value":"/ Finish configuring and perform the actual item resolution.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":625125,"byte_end":625187,"line_start":2654,"line_end":2654,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5143},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626187,"byte_end":626198,"line_start":2684,"line_end":2684,"column_start":12,"column_end":23},"name":"PartialType","qualname":"::ir::context::PartialType","value":"PartialType {  }","parent":null,"children":[{"krate":0,"index":5144},{"krate":0,"index":5145}],"decl_id":null,"docs":" A type that we are in the middle of parsing.\n","sig":null,"attributes":[{"value":"/ A type that we are in the middle of parsing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626082,"byte_end":626130,"line_start":2682,"line_end":2682,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626444,"byte_end":626447,"line_start":2693,"line_end":2693,"column_start":12,"column_end":15},"name":"new","qualname":"<PartialType>::new","value":"pub fn new(Cursor, ItemId) -> PartialType","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `PartialType`.\n","sig":null,"attributes":[{"value":"/ Construct a new `PartialType`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626398,"byte_end":626432,"line_start":2692,"line_end":2692,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626671,"byte_end":626675,"line_start":2699,"line_end":2699,"column_start":12,"column_end":16},"name":"decl","qualname":"<PartialType>::decl","value":"pub fn decl(&Self) -> &Cursor","parent":null,"children":[],"decl_id":null,"docs":" The cursor pointing to this partial type's declaration location.\n","sig":null,"attributes":[{"value":"/ The cursor pointing to this partial type's declaration location.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626591,"byte_end":626659,"line_start":2698,"line_end":2698,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626850,"byte_end":626852,"line_start":2705,"line_end":2705,"column_start":12,"column_end":14},"name":"id","qualname":"<PartialType>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" The item ID allocated for this type. This is *NOT* a key for an entry in\n the context's item set yet!\n","sig":null,"attributes":[{"value":"/ The item ID allocated for this type. This is *NOT* a key for an entry in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626726,"byte_end":626802,"line_start":2703,"line_end":2703,"column_start":5,"column_end":81}},{"value":"/ the context's item set yet!","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626807,"byte_end":626838,"line_start":2704,"line_end":2704,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5159},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631456,"byte_end":631459,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Yes","qualname":"::ir::derive::CanDerive::Yes","value":"CanDerive::Yes","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Yes, we can derive automatically.\n","sig":null,"attributes":[{"value":"/ Yes, we can derive automatically.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631414,"byte_end":631451,"line_start":97,"line_end":97,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5161},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631680,"byte_end":631688,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Manually","qualname":"::ir::derive::CanDerive::Manually","value":"CanDerive::Manually","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" The only thing that stops us from automatically deriving is that\n array with more than maximum number of elements is used.","sig":null,"attributes":[{"value":"/ The only thing that stops us from automatically deriving is that","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631466,"byte_end":631534,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ array with more than maximum number of elements is used.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631539,"byte_end":631599,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631604,"byte_end":631607,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This means we probably can \"manually\" implement such trait.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631612,"byte_end":631675,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5163},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631718,"byte_end":631720,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"No","qualname":"::ir::derive::CanDerive::No","value":"CanDerive::No","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" No, we cannot.\n","sig":null,"attributes":[{"value":"/ No, we cannot.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631695,"byte_end":631713,"line_start":106,"line_end":106,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":5158},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631398,"byte_end":631407,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"CanDerive","qualname":"::ir::derive::CanDerive","value":"pub enum CanDerive { Yes, Manually, No, }","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5163}],"decl_id":null,"docs":" Whether it is possible or not to automatically derive trait for an item.","sig":null,"attributes":[{"value":"/ Whether it is possible or not to automatically derive trait for an item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":630976,"byte_end":631052,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631053,"byte_end":631056,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631057,"byte_end":631070,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/         No","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631071,"byte_end":631085,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/          ^","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631086,"byte_end":631100,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631101,"byte_end":631115,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/      Manually","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631116,"byte_end":631133,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/          ^","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631134,"byte_end":631148,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/          |","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631149,"byte_end":631163,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/         Yes","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631164,"byte_end":631179,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631180,"byte_end":631187,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631188,"byte_end":631191,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Initially we assume that we can derive trait for all types and then","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631192,"byte_end":631263,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ update our understanding as we learn more about each type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631264,"byte_end":631326,"line_start":94,"line_end":94,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631902,"byte_end":631906,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"join","qualname":"<CanDerive>::join","value":"pub fn join(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take the least upper bound of `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Take the least upper bound of `self` and `rhs`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631839,"byte_end":631890,"line_start":117,"line_end":117,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5181},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635222,"byte_end":635236,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"ModuleConstify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::ModuleConstify","value":"EnumVariantCustomBehavior::ModuleConstify","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":" This variant will be a module containing constants.\n","sig":null,"attributes":[{"value":"/ This variant will be a module containing constants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635162,"byte_end":635217,"line_start":15,"line_end":15,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5183},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635323,"byte_end":635331,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Constify","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Constify","value":"EnumVariantCustomBehavior::Constify","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":" This variant will be constified, that is, forced to generate a constant.\n","sig":null,"attributes":[{"value":"/ This variant will be constified, that is, forced to generate a constant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635242,"byte_end":635318,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5185},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635407,"byte_end":635411,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Hide","qualname":"::ir::enum_ty::EnumVariantCustomBehavior::Hide","value":"EnumVariantCustomBehavior::Hide","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":" This variant will be hidden entirely from the resulting enum.\n","sig":null,"attributes":[{"value":"/ This variant will be hidden entirely from the resulting enum.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635337,"byte_end":635402,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":5180},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635130,"byte_end":635155,"line_start":14,"line_end":14,"column_start":10,"column_end":35},"name":"EnumVariantCustomBehavior","qualname":"::ir::enum_ty::EnumVariantCustomBehavior","value":"pub enum EnumVariantCustomBehavior { ModuleConstify, Constify, Hide, }","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5183},{"krate":0,"index":5185}],"decl_id":null,"docs":" An enum representing custom handling that can be given to a variant.\n","sig":null,"attributes":[{"value":"/ An enum representing custom handling that can be given to a variant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635003,"byte_end":635075,"line_start":12,"line_end":12,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5198},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635469,"byte_end":635473,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Enum","qualname":"::ir::enum_ty::Enum","value":"Enum {  }","parent":null,"children":[{"krate":0,"index":5199},{"krate":0,"index":5200}],"decl_id":null,"docs":" A C/C++ enumeration.\n","sig":null,"attributes":[{"value":"/ A C/C++ enumeration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635416,"byte_end":635440,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635944,"byte_end":635947,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Enum>::new","value":"pub fn new(Option<TypeId>, Vec<EnumVariant>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Enum` with the given representation and variants.\n","sig":null,"attributes":[{"value":"/ Construct a new `Enum` with the given representation and variants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635862,"byte_end":635932,"line_start":38,"line_end":38,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636105,"byte_end":636109,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"repr","qualname":"<Enum>::repr","value":"pub fn repr(&Self) -> Option<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's representation.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's representation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636051,"byte_end":636093,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636214,"byte_end":636222,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"variants","qualname":"<Enum>::variants","value":"pub fn variants(&Self) -> &[EnumVariant]","parent":null,"children":[],"decl_id":null,"docs":" Get this enumeration's variants.\n","sig":null,"attributes":[{"value":"/ Get this enumeration's variants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636166,"byte_end":636202,"line_start":48,"line_end":48,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636351,"byte_end":636358,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<Enum>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct an enumeration from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct an enumeration from the given Clang type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":636284,"byte_end":636339,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":640585,"byte_end":640608,"line_start":171,"line_end":171,"column_start":12,"column_end":35},"name":"computed_enum_variation","qualname":"<Enum>::computed_enum_variation","value":"pub fn computed_enum_variation(&Self, &BindgenContext, &Item) -> EnumVariation","parent":null,"children":[],"decl_id":null,"docs":" Returns the final representation of the enum.\n","sig":null,"attributes":[{"value":"/ Returns the final representation of the enum.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":640524,"byte_end":640573,"line_start":170,"line_end":170,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5203},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642128,"byte_end":642139,"line_start":223,"line_end":223,"column_start":12,"column_end":23},"name":"EnumVariant","qualname":"::ir::enum_ty::EnumVariant","value":"EnumVariant {  }","parent":null,"children":[{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207}],"decl_id":null,"docs":" A single enum variant, to be contained only in an enum.\n","sig":null,"attributes":[{"value":"/ A single enum variant, to be contained only in an enum.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642040,"byte_end":642099,"line_start":221,"line_end":221,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5211},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642630,"byte_end":642637,"line_start":241,"line_end":241,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::ir::enum_ty::EnumVariantValue::Boolean","value":"EnumVariantValue::Boolean(bool)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":" A boolean constant.\n","sig":null,"attributes":[{"value":"/ A boolean constant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642602,"byte_end":642625,"line_start":240,"line_end":240,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5214},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642677,"byte_end":642683,"line_start":244,"line_end":244,"column_start":5,"column_end":11},"name":"Signed","qualname":"::ir::enum_ty::EnumVariantValue::Signed","value":"EnumVariantValue::Signed(i64)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":" A signed constant.\n","sig":null,"attributes":[{"value":"/ A signed constant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642650,"byte_end":642672,"line_start":243,"line_end":243,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5217},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642725,"byte_end":642733,"line_start":247,"line_end":247,"column_start":5,"column_end":13},"name":"Unsigned","qualname":"::ir::enum_ty::EnumVariantValue::Unsigned","value":"EnumVariantValue::Unsigned(u64)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":" An unsigned constant.\n","sig":null,"attributes":[{"value":"/ An unsigned constant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642695,"byte_end":642720,"line_start":246,"line_end":246,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":5210},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642579,"byte_end":642595,"line_start":239,"line_end":239,"column_start":10,"column_end":26},"name":"EnumVariantValue","qualname":"::ir::enum_ty::EnumVariantValue","value":"pub enum EnumVariantValue { Boolean(bool), Signed(i64), Unsigned(u64), }","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5214},{"krate":0,"index":5217}],"decl_id":null,"docs":" A constant value assigned to an enumeration variant.\n","sig":null,"attributes":[{"value":"/ A constant value assigned to an enumeration variant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642445,"byte_end":642501,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642839,"byte_end":642842,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumVariant>::new","value":"pub fn new(String, Option<String>, EnumVariantValue,\n           Option<EnumVariantCustomBehavior>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new enumeration variant from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new enumeration variant from the given parts.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642766,"byte_end":642827,"line_start":251,"line_end":251,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643174,"byte_end":643178,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"name","qualname":"<EnumVariant>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's name.\n","sig":null,"attributes":[{"value":"/ Get this variant's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643134,"byte_end":643162,"line_start":266,"line_end":266,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643267,"byte_end":643270,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"val","qualname":"<EnumVariant>::val","value":"pub fn val(&Self) -> EnumVariantValue","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's value.\n","sig":null,"attributes":[{"value":"/ Get this variant's value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643226,"byte_end":643255,"line_start":271,"line_end":271,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643377,"byte_end":643384,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"comment","qualname":"<EnumVariant>::comment","value":"pub fn comment(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variant's documentation.\n","sig":null,"attributes":[{"value":"/ Get this variant's documentation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643328,"byte_end":643365,"line_start":276,"line_end":276,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643573,"byte_end":643593,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"force_constification","qualname":"<EnumVariant>::force_constification","value":"pub fn force_constification(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this variant should be enforced to be a constant by code\n generation.\n","sig":null,"attributes":[{"value":"/ Returns whether this variant should be enforced to be a constant by code","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643465,"byte_end":643541,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ generation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643546,"byte_end":643561,"line_start":282,"line_end":282,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643841,"byte_end":643847,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"hidden","qualname":"<EnumVariant>::hidden","value":"pub fn hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current variant should be hidden completely from the\n resulting rust enum.\n","sig":null,"attributes":[{"value":"/ Returns whether the current variant should be hidden completely from the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643724,"byte_end":643800,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ resulting rust enum.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":643805,"byte_end":643829,"line_start":289,"line_end":289,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644648,"byte_end":644656,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::function::FunctionKind::Function","value":"FunctionKind::Function","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" A plain, free function.\n","sig":null,"attributes":[{"value":"/ A plain, free function.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644616,"byte_end":644643,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5242},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644693,"byte_end":644699,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Method","qualname":"::ir::function::FunctionKind::Method","value":"FunctionKind::Method(MethodKind)","parent":{"krate":0,"index":5239},"children":[],"decl_id":null,"docs":" A method of some kind.\n","sig":null,"attributes":[{"value":"/ A method of some kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644662,"byte_end":644688,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5239},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644597,"byte_end":644609,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"FunctionKind","qualname":"::ir::function::FunctionKind","value":"pub enum FunctionKind { Function, Method(MethodKind), }","parent":null,"children":[{"krate":0,"index":5240},{"krate":0,"index":5242}],"decl_id":null,"docs":" What kind of a function are we looking at?\n","sig":null,"attributes":[{"value":"/ What kind of a function are we looking at?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644500,"byte_end":644546,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5255},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646127,"byte_end":646135,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"External","qualname":"::ir::function::Linkage::External","value":"Linkage::External","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Externally visible and can be linked against\n","sig":null,"attributes":[{"value":"/ Externally visible and can be linked against","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646074,"byte_end":646122,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5257},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646230,"byte_end":646238,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Internal","qualname":"::ir::function::Linkage::Internal","value":"Linkage::Internal","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Not exposed externally. 'static inline' functions will have this kind of linkage\n","sig":null,"attributes":[{"value":"/ Not exposed externally. 'static inline' functions will have this kind of linkage","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646141,"byte_end":646225,"line_start":68,"line_end":68,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":5254},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646060,"byte_end":646067,"line_start":65,"line_end":65,"column_start":10,"column_end":17},"name":"Linkage","qualname":"::ir::function::Linkage","value":"pub enum Linkage { External, Internal, }","parent":null,"children":[{"krate":0,"index":5255},{"krate":0,"index":5257}],"decl_id":null,"docs":" The style of linkage\n","sig":null,"attributes":[{"value":"/ The style of linkage","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":645996,"byte_end":646020,"line_start":63,"line_end":63,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5264},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646440,"byte_end":646448,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"Function","qualname":"::ir::function::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270}],"decl_id":null,"docs":" A function declaration, with a signature, arguments, and argument names.","sig":null,"attributes":[{"value":"/ A function declaration, with a signature, arguments, and argument names.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646243,"byte_end":646319,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646320,"byte_end":646323,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The argument names vector must be the same length as the ones in the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646324,"byte_end":646396,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/ signature.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646397,"byte_end":646411,"line_start":75,"line_end":75,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646935,"byte_end":646938,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Function>::new","value":"pub fn new(String, Option<String>, TypeId, Option<String>, FunctionKind,\n           Linkage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function.\n","sig":null,"attributes":[{"value":"/ Construct a new function.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646894,"byte_end":646923,"line_start":98,"line_end":98,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647338,"byte_end":647342,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647297,"byte_end":647326,"line_start":117,"line_end":117,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647431,"byte_end":647443,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Function>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this function's name.\n","sig":null,"attributes":[{"value":"/ Get this function's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647390,"byte_end":647419,"line_start":122,"line_end":122,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647580,"byte_end":647589,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"signature","qualname":"<Function>::signature","value":"pub fn signature(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function's signature type.\n","sig":null,"attributes":[{"value":"/ Get this function's signature type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647529,"byte_end":647568,"line_start":127,"line_end":127,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647684,"byte_end":647688,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"kind","qualname":"<Function>::kind","value":"pub fn kind(&Self) -> FunctionKind","parent":null,"children":[],"decl_id":null,"docs":" Get this function's kind.\n","sig":null,"attributes":[{"value":"/ Get this function's kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647643,"byte_end":647672,"line_start":132,"line_end":132,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647787,"byte_end":647794,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"linkage","qualname":"<Function>::linkage","value":"pub fn linkage(&Self) -> Linkage","parent":null,"children":[],"decl_id":null,"docs":" Get this function's linkage.\n","sig":null,"attributes":[{"value":"/ Get this function's linkage.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647743,"byte_end":647775,"line_start":137,"line_end":137,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648496,"byte_end":648497,"line_start":170,"line_end":170,"column_start":5,"column_end":6},"name":"C","qualname":"::ir::function::Abi::C","value":"Abi::C","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The default C ABI.\n","sig":null,"attributes":[{"value":"/ The default C ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648469,"byte_end":648491,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5276},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648530,"byte_end":648537,"line_start":172,"line_end":172,"column_start":5,"column_end":12},"name":"Stdcall","qualname":"::ir::function::Abi::Stdcall","value":"Abi::Stdcall","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The \"stdcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"stdcall\" ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648503,"byte_end":648525,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5278},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648571,"byte_end":648579,"line_start":174,"line_end":174,"column_start":5,"column_end":13},"name":"Fastcall","qualname":"::ir::function::Abi::Fastcall","value":"Abi::Fastcall","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The \"fastcall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"fastcall\" ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648543,"byte_end":648566,"line_start":173,"line_end":173,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5280},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648613,"byte_end":648621,"line_start":176,"line_end":176,"column_start":5,"column_end":13},"name":"ThisCall","qualname":"::ir::function::Abi::ThisCall","value":"Abi::ThisCall","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The \"thiscall\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"thiscall\" ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648585,"byte_end":648608,"line_start":175,"line_end":175,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5282},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648652,"byte_end":648657,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Aapcs","qualname":"::ir::function::Abi::Aapcs","value":"Abi::Aapcs","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The \"aapcs\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"aapcs\" ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648627,"byte_end":648647,"line_start":177,"line_end":177,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5284},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648688,"byte_end":648693,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Win64","qualname":"::ir::function::Abi::Win64","value":"Abi::Win64","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" The \"win64\" ABI.\n","sig":null,"attributes":[{"value":"/ The \"win64\" ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648663,"byte_end":648683,"line_start":179,"line_end":179,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648734,"byte_end":648741,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ir::function::Abi::Unknown","value":"Abi::Unknown(CXCallingConv)","parent":{"krate":0,"index":5273},"children":[],"decl_id":null,"docs":" An unknown or invalid ABI.\n","sig":null,"attributes":[{"value":"/ An unknown or invalid ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648699,"byte_end":648729,"line_start":181,"line_end":181,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5273},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648459,"byte_end":648462,"line_start":168,"line_end":168,"column_start":10,"column_end":13},"name":"Abi","qualname":"::ir::function::Abi","value":"pub enum Abi {\n    C,\n    Stdcall,\n    Fastcall,\n    ThisCall,\n    Aapcs,\n    Win64,\n    Unknown(CXCallingConv),\n}","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5278},{"krate":0,"index":5280},{"krate":0,"index":5282},{"krate":0,"index":5284},{"krate":0,"index":5286}],"decl_id":null,"docs":" An ABI extracted from a clang cursor.\n","sig":null,"attributes":[{"value":"/ An ABI extracted from a clang cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648378,"byte_end":648419,"line_start":166,"line_end":166,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5294},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":649603,"byte_end":649614,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"FunctionSig","qualname":"::ir::function::FunctionSig","value":"FunctionSig {  }","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299}],"decl_id":null,"docs":" A function signature.\n","sig":null,"attributes":[{"value":"/ A function signature.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":649549,"byte_end":649574,"line_start":212,"line_end":212,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654255,"byte_end":654258,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSig>::new","value":"pub fn new(TypeId, Vec<(Option<String>, TypeId)>, bool, bool, Abi) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654204,"byte_end":654243,"line_start":348,"line_end":348,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654671,"byte_end":654678,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<FunctionSig>::from_ty","value":"pub fn from_ty(&clang::Type, &clang::Cursor, &mut BindgenContext)\n-> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new function signature from the given Clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new function signature from the given Clang type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654594,"byte_end":654659,"line_start":365,"line_end":365,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":660901,"byte_end":660912,"line_start":527,"line_end":527,"column_start":12,"column_end":23},"name":"return_type","qualname":"<FunctionSig>::return_type","value":"pub fn return_type(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's return type.\n","sig":null,"attributes":[{"value":"/ Get this function signature's return type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":660843,"byte_end":660889,"line_start":526,"line_end":526,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661042,"byte_end":661056,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"name":"argument_types","qualname":"<FunctionSig>::argument_types","value":"pub fn argument_types(&Self) -> &[(Option<String>, TypeId)]","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's argument (name, type) pairs.\n","sig":null,"attributes":[{"value":"/ Get this function signature's argument (name, type) pairs.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":660968,"byte_end":661030,"line_start":531,"line_end":531,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661187,"byte_end":661190,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"abi","qualname":"<FunctionSig>::abi","value":"pub fn abi(&Self) -> Abi","parent":null,"children":[],"decl_id":null,"docs":" Get this function signature's ABI.\n","sig":null,"attributes":[{"value":"/ Get this function signature's ABI.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661137,"byte_end":661175,"line_start":536,"line_end":536,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661287,"byte_end":661298,"line_start":542,"line_end":542,"column_start":12,"column_end":23},"name":"is_variadic","qualname":"<FunctionSig>::is_variadic","value":"pub fn is_variadic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this function signature variadic?\n","sig":null,"attributes":[{"value":"/ Is this function signature variadic?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661235,"byte_end":661275,"line_start":541,"line_end":541,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661657,"byte_end":661665,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"must_use","qualname":"<FunctionSig>::must_use","value":"pub fn must_use(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Must this function's return value be used?\n","sig":null,"attributes":[{"value":"/ Must this function's return value be used?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661599,"byte_end":661645,"line_start":549,"line_end":549,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":662159,"byte_end":662187,"line_start":563,"line_end":563,"column_start":12,"column_end":40},"name":"function_pointers_can_derive","qualname":"<FunctionSig>::function_pointers_can_derive","value":"pub fn function_pointers_can_derive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are function pointers with this signature able to derive Rust traits?\n Rust only supports deriving traits for function pointers with a limited\n number of parameters and a couple ABIs.","sig":null,"attributes":[{"value":"/ Are function pointers with this signature able to derive Rust traits?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661716,"byte_end":661789,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ Rust only supports deriving traits for function pointers with a limited","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661794,"byte_end":661869,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ number of parameters and a couple ABIs.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661874,"byte_end":661917,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661922,"byte_end":661925,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ For more details, see:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661930,"byte_end":661956,"line_start":558,"line_end":558,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661961,"byte_end":661964,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ * https://github.com/rust-lang/rust-bindgen/issues/547,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":661969,"byte_end":662028,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/ * https://github.com/rust-lang/rust/issues/38848,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":662033,"byte_end":662086,"line_start":561,"line_end":561,"column_start":5,"column_end":58}},{"value":"/ * and https://github.com/rust-lang/rust/issues/40158","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":662091,"byte_end":662147,"line_start":562,"line_end":562,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5303},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665216,"byte_end":665220,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::int::IntKind::Bool","value":"IntKind::Bool","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `bool`.\n","sig":null,"attributes":[{"value":"/ A `bool`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665198,"byte_end":665211,"line_start":6,"line_end":6,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5305},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665252,"byte_end":665257,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"SChar","qualname":"::ir::int::IntKind::SChar","value":"IntKind::SChar","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `signed char`.\n","sig":null,"attributes":[{"value":"/ A `signed char`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665227,"byte_end":665247,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665292,"byte_end":665297,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"UChar","qualname":"::ir::int::IntKind::UChar","value":"IntKind::UChar","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `unsigned char`.\n","sig":null,"attributes":[{"value":"/ An `unsigned char`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665264,"byte_end":665287,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5309},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665326,"byte_end":665331,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"WChar","qualname":"::ir::int::IntKind::WChar","value":"IntKind::WChar","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `wchar_t`.\n","sig":null,"attributes":[{"value":"/ An `wchar_t`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665304,"byte_end":665321,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":5311},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665409,"byte_end":665413,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::int::IntKind::Char","value":"IntKind::Char { is_signed }","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A platform-dependent `char` type, with the signedness support.\n","sig":null,"attributes":[{"value":"/ A platform-dependent `char` type, with the signedness support.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665338,"byte_end":665404,"line_start":18,"line_end":18,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665536,"byte_end":665541,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Short","qualname":"::ir::int::IntKind::Short","value":"IntKind::Short","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `short`.\n","sig":null,"attributes":[{"value":"/ A `short`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665517,"byte_end":665531,"line_start":24,"line_end":24,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5315},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665577,"byte_end":665583,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"UShort","qualname":"::ir::int::IntKind::UShort","value":"IntKind::UShort","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `unsigned short`.\n","sig":null,"attributes":[{"value":"/ An `unsigned short`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665548,"byte_end":665572,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5317},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665608,"byte_end":665611,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::int::IntKind::Int","value":"IntKind::Int","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `int`.\n","sig":null,"attributes":[{"value":"/ An `int`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665590,"byte_end":665603,"line_start":30,"line_end":30,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5319},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665645,"byte_end":665649,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"UInt","qualname":"::ir::int::IntKind::UInt","value":"IntKind::UInt","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `unsigned int`.\n","sig":null,"attributes":[{"value":"/ An `unsigned int`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665618,"byte_end":665640,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5321},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665674,"byte_end":665678,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Long","qualname":"::ir::int::IntKind::Long","value":"IntKind::Long","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `long`.\n","sig":null,"attributes":[{"value":"/ A `long`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665656,"byte_end":665669,"line_start":36,"line_end":36,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5323},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665713,"byte_end":665718,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"ULong","qualname":"::ir::int::IntKind::ULong","value":"IntKind::ULong","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `unsigned long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665685,"byte_end":665708,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5325},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665748,"byte_end":665756,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"LongLong","qualname":"::ir::int::IntKind::LongLong","value":"IntKind::LongLong","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `long long`.\n","sig":null,"attributes":[{"value":"/ A `long long`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665725,"byte_end":665743,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665796,"byte_end":665805,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ULongLong","qualname":"::ir::int::IntKind::ULongLong","value":"IntKind::ULongLong","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `unsigned long long`.\n","sig":null,"attributes":[{"value":"/ An `unsigned long long`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665763,"byte_end":665791,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5329},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665844,"byte_end":665846,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"I8","qualname":"::ir::int::IntKind::I8","value":"IntKind::I8","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 8-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit signed integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665812,"byte_end":665839,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5331},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665887,"byte_end":665889,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"U8","qualname":"::ir::int::IntKind::U8","value":"IntKind::U8","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 8-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 8-bit unsigned integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665853,"byte_end":665882,"line_start":51,"line_end":51,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5333},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665929,"byte_end":665932,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"I16","qualname":"::ir::int::IntKind::I16","value":"IntKind::I16","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 16-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 16-bit signed integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665896,"byte_end":665924,"line_start":54,"line_end":54,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5335},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665983,"byte_end":665986,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"U16","qualname":"::ir::int::IntKind::U16","value":"IntKind::U16","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" Either a `char16_t` or a `wchar_t`.\n","sig":null,"attributes":[{"value":"/ Either a `char16_t` or a `wchar_t`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665939,"byte_end":665978,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5337},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666026,"byte_end":666029,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"I32","qualname":"::ir::int::IntKind::I32","value":"IntKind::I32","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 32-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit signed integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665993,"byte_end":666021,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666071,"byte_end":666074,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"U32","qualname":"::ir::int::IntKind::U32","value":"IntKind::U32","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit unsigned integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666036,"byte_end":666066,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5341},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666114,"byte_end":666117,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I64","qualname":"::ir::int::IntKind::I64","value":"IntKind::I64","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 64-bit signed integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit signed integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666081,"byte_end":666109,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5343},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666159,"byte_end":666162,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"U64","qualname":"::ir::int::IntKind::U64","value":"IntKind::U64","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A 64-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit unsigned integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666124,"byte_end":666154,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5345},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666191,"byte_end":666195,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"I128","qualname":"::ir::int::IntKind::I128","value":"IntKind::I128","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" An `int128_t`\n","sig":null,"attributes":[{"value":"/ An `int128_t`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666169,"byte_end":666186,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5347},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666225,"byte_end":666229,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"U128","qualname":"::ir::int::IntKind::U128","value":"IntKind::U128","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A `uint128_t`.\n","sig":null,"attributes":[{"value":"/ A `uint128_t`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666202,"byte_end":666220,"line_start":75,"line_end":75,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":5349},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666328,"byte_end":666334,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ir::int::IntKind::Custom","value":"IntKind::Custom { name, is_signed }","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":" A custom integer type, used to allow custom macro types depending on\n range.\n","sig":null,"attributes":[{"value":"/ A custom integer type, used to allow custom macro types depending on","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666236,"byte_end":666308,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ range.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666313,"byte_end":666323,"line_start":79,"line_end":79,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":5302},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665184,"byte_end":665191,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"IntKind","qualname":"::ir::int::IntKind","value":"pub enum IntKind {\n    Bool,\n    SChar,\n    UChar,\n    WChar,\n    Char {\n        is_signed: bool,\n    },\n    Short,\n    UShort,\n    Int,\n    UInt,\n    Long,\n    ULong,\n    LongLong,\n    ULongLong,\n    I8,\n    U8,\n    I16,\n    U16,\n    I32,\n    U32,\n    I64,\n    U64,\n    I128,\n    U128,\n    Custom {\n        name: &'static str,\n        is_signed: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5307},{"krate":0,"index":5309},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5327},{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5333},{"krate":0,"index":5335},{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5343},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5349}],"decl_id":null,"docs":" Which integral type are we dealing with?\n","sig":null,"attributes":[{"value":"/ Which integral type are we dealing with?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":665062,"byte_end":665106,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666587,"byte_end":666596,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"is_signed","qualname":"<IntKind>::is_signed","value":"pub fn is_signed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this integral type signed?\n","sig":null,"attributes":[{"value":"/ Is this integral type signed?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666542,"byte_end":666575,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667434,"byte_end":667444,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"known_size","qualname":"<IntKind>::known_size","value":"pub fn known_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" If this type has a known size, return it (in bytes). This is to\n alleviate libclang sometimes not giving us a layout (like in the case\n when an enum is defined inside a class with template parameters).\n","sig":null,"attributes":[{"value":"/ If this type has a known size, return it (in bytes). This is to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667203,"byte_end":667270,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ alleviate libclang sometimes not giving us a layout (like in the case","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667275,"byte_end":667348,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ when an enum is defined inside a class with template parameters).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667353,"byte_end":667422,"line_start":110,"line_end":110,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667823,"byte_end":667841,"line_start":124,"line_end":124,"column_start":12,"column_end":30},"name":"signedness_matches","qualname":"<IntKind>::signedness_matches","value":"pub fn signedness_matches(&Self, i64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this type's signedness matches the value.\n","sig":null,"attributes":[{"value":"/ Whether this type's signedness matches the value.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":667758,"byte_end":667811,"line_start":123,"line_end":123,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":2919},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":670471,"byte_end":670476,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::item::IsOpaque::Extra","value":"type Extra;","parent":{"krate":0,"index":2918},"children":[],"decl_id":null,"docs":" Extra context the IR thing needs to determine if it is opaque or not.\n","sig":null,"attributes":[{"value":"/ Extra context the IR thing needs to determine if it is opaque or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":670388,"byte_end":670461,"line_start":76,"line_end":76,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5371},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":679006,"byte_end":679010,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"Item","qualname":"::ir::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380}],"decl_id":null,"docs":" An item is the base of the bindgen representation, it can be either a\n module, a type, a function, or a variable (see `ItemKind` for more\n information).","sig":null,"attributes":[{"value":"/ An item is the base of the bindgen representation, it can be either a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678176,"byte_end":678249,"line_start":363,"line_end":363,"column_start":1,"column_end":74}},{"value":"/ module, a type, a function, or a variable (see `ItemKind` for more","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678250,"byte_end":678320,"line_start":364,"line_end":364,"column_start":1,"column_end":71}},{"value":"/ information).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678321,"byte_end":678338,"line_start":365,"line_end":365,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678339,"byte_end":678342,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Items refer to each other by `ItemId`. Every item has its parent's","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678343,"byte_end":678413,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/ id. Depending on the kind of item this is, it may also refer to other items,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678414,"byte_end":678494,"line_start":368,"line_end":368,"column_start":1,"column_end":81}},{"value":"/ such as a compound type item referring to other types. Collectively, these","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678495,"byte_end":678573,"line_start":369,"line_end":369,"column_start":1,"column_end":79}},{"value":"/ references form a graph.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678574,"byte_end":678602,"line_start":370,"line_end":370,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678603,"byte_end":678606,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The entry-point to this graph is the \"root module\": a meta-item used to hold","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678607,"byte_end":678687,"line_start":372,"line_end":372,"column_start":1,"column_end":81}},{"value":"/ all top-level items.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678688,"byte_end":678712,"line_start":373,"line_end":373,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678713,"byte_end":678716,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ An item may have a comment, and annotations (see the `annotations` module).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678717,"byte_end":678796,"line_start":375,"line_end":375,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678797,"byte_end":678800,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ Note that even though we parse all the types of annotations in comments, not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678801,"byte_end":678881,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ all of them apply to every item. Those rules are described in the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678882,"byte_end":678951,"line_start":378,"line_end":378,"column_start":1,"column_end":70}},{"value":"/ `annotations` module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678952,"byte_end":678977,"line_start":379,"line_end":379,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680564,"byte_end":680567,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"new","qualname":"<Item>::new","value":"pub fn new(ItemId, Option<String>, Option<Annotations>, ItemId, ItemKind)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Item`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Item`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680525,"byte_end":680552,"line_start":429,"line_end":429,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681225,"byte_end":681240,"line_start":452,"line_end":452,"column_start":12,"column_end":27},"name":"new_opaque_type","qualname":"<Item>::new_opaque_type","value":"pub fn new_opaque_type(ItemId, &clang::Type, &mut BindgenContext) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque item type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque item type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681176,"byte_end":681213,"line_start":451,"line_end":451,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681655,"byte_end":681657,"line_start":465,"line_end":465,"column_start":12,"column_end":14},"name":"id","qualname":"<Item>::id","value":"pub fn id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s identifier.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s identifier.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681610,"byte_end":681643,"line_start":464,"line_end":464,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681826,"byte_end":681835,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"parent_id","qualname":"<Item>::parent_id","value":"pub fn parent_id(&Self) -> ItemId","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s parent's identifier.","sig":null,"attributes":[{"value":"/ Get this `Item`'s parent's identifier.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681704,"byte_end":681746,"line_start":469,"line_end":469,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681751,"byte_end":681754,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ For the root module, the parent's ID is its own ID.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681759,"byte_end":681814,"line_start":471,"line_end":471,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682017,"byte_end":682043,"line_start":479,"line_end":479,"column_start":12,"column_end":38},"name":"set_parent_for_replacement","qualname":"<Item>::set_parent_for_replacement","value":"pub fn set_parent_for_replacement<Id: Into<ItemId>>(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Set this item's parent id.","sig":null,"attributes":[{"value":"/ Set this item's parent id.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681889,"byte_end":681919,"line_start":476,"line_end":476,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681924,"byte_end":681927,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This is only used so replacements get generated in the proper module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":681932,"byte_end":682005,"line_start":478,"line_end":478,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682276,"byte_end":682289,"line_start":486,"line_end":486,"column_start":12,"column_end":25},"name":"codegen_depth","qualname":"<Item>::codegen_depth","value":"pub fn codegen_depth(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth this item is indented to.","sig":null,"attributes":[{"value":"/ Returns the depth this item is indented to.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682130,"byte_end":682177,"line_start":483,"line_end":483,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682182,"byte_end":682185,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ FIXME(emilio): This may need fixes for the enums within modules stuff.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682190,"byte_end":682264,"line_start":485,"line_end":485,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682855,"byte_end":682862,"line_start":504,"line_end":504,"column_start":12,"column_end":19},"name":"comment","qualname":"<Item>::comment","value":"pub fn comment(&Self, &BindgenContext) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Get this `Item`'s comment, if it has any, already preprocessed and with\n the right indentation.\n","sig":null,"attributes":[{"value":"/ Get this `Item`'s comment, if it has any, already preprocessed and with","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682737,"byte_end":682812,"line_start":502,"line_end":502,"column_start":5,"column_end":80}},{"value":"/ the right indentation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":682817,"byte_end":682843,"line_start":503,"line_end":503,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683170,"byte_end":683174,"line_start":515,"line_end":515,"column_start":12,"column_end":16},"name":"kind","qualname":"<Item>::kind","value":"pub fn kind(&Self) -> &ItemKind","parent":null,"children":[],"decl_id":null,"docs":" What kind of item is this?\n","sig":null,"attributes":[{"value":"/ What kind of item is this?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683128,"byte_end":683158,"line_start":514,"line_end":514,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683287,"byte_end":683295,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Item>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut ItemKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683227,"byte_end":683275,"line_start":519,"line_end":519,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683673,"byte_end":683681,"line_start":529,"line_end":529,"column_start":12,"column_end":20},"name":"local_id","qualname":"<Item>::local_id","value":"pub fn local_id(&Self, &BindgenContext) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates this item from its siblings.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates this item from its siblings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683360,"byte_end":683430,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683435,"byte_end":683438,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This should stay relatively stable in the face of code motion outside or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683443,"byte_end":683519,"line_start":526,"line_end":526,"column_start":5,"column_end":81}},{"value":"/ below this item's lexical scope, meaning that this can be useful for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683524,"byte_end":683596,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/ generating relatively stable identifiers within a scope.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683601,"byte_end":683661,"line_start":528,"line_end":528,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684173,"byte_end":684192,"line_start":542,"line_end":542,"column_start":12,"column_end":31},"name":"next_child_local_id","qualname":"<Item>::next_child_local_id","value":"pub fn next_child_local_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an identifier that differentiates a child of this item of other\n related items.","sig":null,"attributes":[{"value":"/ Get an identifier that differentiates a child of this item of other","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683884,"byte_end":683955,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/ related items.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683960,"byte_end":683978,"line_start":537,"line_end":537,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683983,"byte_end":683986,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This is currently used for anonymous items, and template instantiation","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":683991,"byte_end":684065,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/ tests, in both cases in order to reduce noise when system headers are at","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684070,"byte_end":684146,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ place.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684151,"byte_end":684161,"line_start":541,"line_end":541,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684990,"byte_end":685001,"line_start":566,"line_end":566,"column_start":12,"column_end":23},"name":"is_toplevel","qualname":"<Item>::is_toplevel","value":"pub fn is_toplevel(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this item is a top-level item, from the point of view of\n bindgen.","sig":null,"attributes":[{"value":"/ Returns whether this item is a top-level item, from the point of view of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684346,"byte_end":684422,"line_start":548,"line_end":548,"column_start":5,"column_end":81}},{"value":"/ bindgen.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684427,"byte_end":684439,"line_start":549,"line_end":549,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684444,"byte_end":684447,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This point of view changes depending on whether namespaces are enabled","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684452,"byte_end":684526,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/ or not. That way, in the following example:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684531,"byte_end":684578,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684583,"byte_end":684586,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```c++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684591,"byte_end":684601,"line_start":554,"line_end":554,"column_start":5,"column_end":15}},{"value":"/ namespace foo {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684606,"byte_end":684625,"line_start":555,"line_end":555,"column_start":5,"column_end":24}},{"value":"/     static int var;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684630,"byte_end":684653,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684658,"byte_end":684663,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684668,"byte_end":684675,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684680,"byte_end":684683,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ `var` would be a toplevel item if namespaces are disabled, but won't if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684688,"byte_end":684763,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/ they aren't.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684768,"byte_end":684784,"line_start":561,"line_end":561,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684789,"byte_end":684792,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is used to determine when the codegen phase should call","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684797,"byte_end":684870,"line_start":563,"line_end":563,"column_start":5,"column_end":78}},{"value":"/ `codegen` on an item, since any item that is not top-level will be","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684875,"byte_end":684945,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/ generated by its parent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":684950,"byte_end":684978,"line_start":565,"line_end":565,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":685987,"byte_end":685998,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<Item>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`. Panic if this is some\n other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`. Panic if this is some","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":685872,"byte_end":685947,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ other kind of item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":685952,"byte_end":685975,"line_start":596,"line_end":596,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686181,"byte_end":686188,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"as_type","qualname":"<Item>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Type`, or `None` if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Type`, or `None` if this is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686062,"byte_end":686136,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686141,"byte_end":686169,"line_start":602,"line_end":602,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686375,"byte_end":686390,"line_start":609,"line_end":609,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Item>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's underlying `Function`. Panic if this is\n some other kind of item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's underlying `Function`. Panic if this is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686256,"byte_end":686330,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/ some other kind of item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686335,"byte_end":686363,"line_start":608,"line_end":608,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686500,"byte_end":686509,"line_start":614,"line_end":614,"column_start":12,"column_end":21},"name":"is_module","qualname":"<Item>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a module?\n","sig":null,"attributes":[{"value":"/ Is this item a module?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686462,"byte_end":686488,"line_start":613,"line_end":613,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686684,"byte_end":686695,"line_start":622,"line_end":622,"column_start":12,"column_end":23},"name":"annotations","qualname":"<Item>::annotations","value":"pub fn annotations(&Self) -> &Annotations","parent":null,"children":[],"decl_id":null,"docs":" Get this item's annotations.\n","sig":null,"attributes":[{"value":"/ Get this item's annotations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686640,"byte_end":686672,"line_start":621,"line_end":621,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686903,"byte_end":686917,"line_start":629,"line_end":629,"column_start":12,"column_end":26},"name":"is_blacklisted","qualname":"<Item>::is_blacklisted","value":"pub fn is_blacklisted(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this item should be blacklisted.","sig":null,"attributes":[{"value":"/ Whether this item should be blacklisted.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686758,"byte_end":686802,"line_start":626,"line_end":626,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686807,"byte_end":686810,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This may be due to either annotations or to other kind of configuration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":686815,"byte_end":686891,"line_start":628,"line_end":628,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":687862,"byte_end":687873,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Item>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":687810,"byte_end":687850,"line_start":654,"line_end":654,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":688002,"byte_end":688008,"line_start":660,"line_end":660,"column_start":12,"column_end":18},"name":"is_var","qualname":"<Item>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item a var type?\n","sig":null,"attributes":[{"value":"/ Is this item a var type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":687962,"byte_end":687990,"line_start":659,"line_end":659,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":688180,"byte_end":688184,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"name","qualname":"<Item>::name","value":"pub fn name<'a>(&'a Self, &'a BindgenContext) -> NameOptions","parent":null,"children":[],"decl_id":null,"docs":" Take out item NameOptions\n","sig":null,"attributes":[{"value":"/ Take out item NameOptions","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":688139,"byte_end":688168,"line_start":667,"line_end":667,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":689369,"byte_end":689392,"line_start":702,"line_end":702,"column_start":12,"column_end":35},"name":"full_disambiguated_name","qualname":"<Item>::full_disambiguated_name","value":"pub fn full_disambiguated_name(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" Create a fully disambiguated name for an item, including template\n parameters if it is a type\n","sig":null,"attributes":[{"value":"/ Create a fully disambiguated name for an item, including template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":689253,"byte_end":689322,"line_start":700,"line_end":700,"column_start":5,"column_end":74}},{"value":"/ parameters if it is a type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":689327,"byte_end":689357,"line_start":701,"line_end":701,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":694025,"byte_end":694044,"line_start":826,"line_end":826,"column_start":12,"column_end":31},"name":"real_canonical_name","qualname":"<Item>::real_canonical_name","value":"pub fn real_canonical_name(&Self, &BindgenContext, &NameOptions) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical name without taking into account the replaces\n annotation.","sig":null,"attributes":[{"value":"/ Get the canonical name without taking into account the replaces","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693295,"byte_end":693362,"line_start":811,"line_end":811,"column_start":5,"column_end":72}},{"value":"/ annotation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693367,"byte_end":693382,"line_start":812,"line_end":812,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693387,"byte_end":693390,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ This is the base logic used to implement hiding and replacing via","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693395,"byte_end":693464,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ annotations, and also to implement proper name mangling.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693469,"byte_end":693529,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693534,"byte_end":693537,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The idea is that each generated type in the same \"level\" (read: module","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693542,"byte_end":693616,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ or namespace) has a unique canonical name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693621,"byte_end":693667,"line_start":818,"line_end":818,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693672,"byte_end":693675,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This name should be derived from the immutable state contained in the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693680,"byte_end":693753,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ type and the parent chain, since it should be consistent.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693758,"byte_end":693819,"line_start":821,"line_end":821,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693824,"byte_end":693827,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ If `BindgenOptions::disable_nested_struct_naming` is true then returned","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693832,"byte_end":693907,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ name is the inner most non-anonymous name plus all the anonymous base names","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693912,"byte_end":693991,"line_start":824,"line_end":824,"column_start":5,"column_end":84}},{"value":"/ that follows.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":693996,"byte_end":694013,"line_start":825,"line_end":825,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":696996,"byte_end":697006,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"exposed_id","qualname":"<Item>::exposed_id","value":"pub fn exposed_id(&Self, &BindgenContext) -> String","parent":null,"children":[],"decl_id":null,"docs":" The exposed id that represents an unique id among the siblings of a\n given item.\n","sig":null,"attributes":[{"value":"/ The exposed id that represents an unique id among the siblings of a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":696893,"byte_end":696964,"line_start":920,"line_end":920,"column_start":5,"column_end":76}},{"value":"/ given item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":696969,"byte_end":696984,"line_start":921,"line_end":921,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":697857,"byte_end":697866,"line_start":943,"line_end":943,"column_start":12,"column_end":21},"name":"as_module","qualname":"<Item>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this item's `Module`, or `None` if this is not a\n `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a reference to this item's `Module`, or `None` if this is not a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":697751,"byte_end":697822,"line_start":941,"line_end":941,"column_start":5,"column_end":76}},{"value":"/ `Module` item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":697827,"byte_end":697845,"line_start":942,"line_end":942,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":698137,"byte_end":698150,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"as_module_mut","qualname":"<Item>::as_module_mut","value":"pub fn as_module_mut(&mut Self) -> Option<&mut Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this item's `Module`, or `None` if this is\n not a `Module` item.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this item's `Module`, or `None` if this is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":698023,"byte_end":698096,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ not a `Module` item.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":698101,"byte_end":698125,"line_start":951,"line_end":951,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":699630,"byte_end":699652,"line_start":991,"line_end":991,"column_start":12,"column_end":34},"name":"is_enabled_for_codegen","qualname":"<Item>::is_enabled_for_codegen","value":"pub fn is_enabled_for_codegen(&Self, &BindgenContext) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this item of a kind that is enabled for code generation?\n","sig":null,"attributes":[{"value":"/ Is this item of a kind that is enabled for code generation?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":699555,"byte_end":699618,"line_start":990,"line_end":990,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":700732,"byte_end":700753,"line_start":1017,"line_end":1017,"column_start":12,"column_end":33},"name":"path_for_whitelisting","qualname":"<Item>::path_for_whitelisting","value":"pub fn path_for_whitelisting(&Self, &BindgenContext) -> &Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path we should use for whitelisting / blacklisting, which\n doesn't include user-mangling.\n","sig":null,"attributes":[{"value":"/ Returns the path we should use for whitelisting / blacklisting, which","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":700608,"byte_end":700681,"line_start":1015,"line_end":1015,"column_start":5,"column_end":78}},{"value":"/ doesn't include user-mangling.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":700686,"byte_end":700720,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5407},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730767,"byte_end":730778,"line_start":1931,"line_end":1931,"column_start":12,"column_end":23},"name":"NameOptions","qualname":"::ir::item::NameOptions","value":"NameOptions {  }","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412}],"decl_id":null,"docs":" Builder struct for naming variations, which hold inside different\n flags for naming options.\n","sig":null,"attributes":[{"value":"/ Builder struct for naming variations, which hold inside different","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730639,"byte_end":730708,"line_start":1928,"line_end":1928,"column_start":1,"column_end":70}},{"value":"/ flags for naming options.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730709,"byte_end":730738,"line_start":1929,"line_end":1929,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730973,"byte_end":730976,"line_start":1940,"line_end":1940,"column_start":12,"column_end":15},"name":"new","qualname":"<NameOptions>::new","value":"pub fn new(&'a Item, &'a BindgenContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `NameOptions`\n","sig":null,"attributes":[{"value":"/ Construct a new `NameOptions`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730928,"byte_end":730961,"line_start":1939,"line_end":1939,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":731364,"byte_end":731381,"line_start":1951,"line_end":1951,"column_start":12,"column_end":29},"name":"within_namespaces","qualname":"<NameOptions>::within_namespaces","value":"pub fn within_namespaces(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the name without the item's containing C++ namespaces mangled\n into it. In other words, the item's name within the item's namespace.\n","sig":null,"attributes":[{"value":"/ Construct the name without the item's containing C++ namespaces mangled","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":731199,"byte_end":731274,"line_start":1949,"line_end":1949,"column_start":5,"column_end":80}},{"value":"/ into it. In other words, the item's name within the item's namespace.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":731279,"byte_end":731352,"line_start":1950,"line_end":1950,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":731647,"byte_end":731650,"line_start":1962,"line_end":1962,"column_start":12,"column_end":15},"name":"get","qualname":"<NameOptions>::get","value":"pub fn get(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Construct a name `String`\n","sig":null,"attributes":[{"value":"/ Construct a name `String`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":731606,"byte_end":731635,"line_start":1961,"line_end":1961,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5417},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732155,"byte_end":732161,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Module","qualname":"::ir::item_kind::ItemKind::Module","value":"ItemKind::Module(Module)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" A module, created implicitly once (the root module), or via C++\n namespaces.\n","sig":null,"attributes":[{"value":"/ A module, created implicitly once (the root module), or via C++","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732063,"byte_end":732130,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ namespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732135,"byte_end":732150,"line_start":15,"line_end":15,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5420},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732248,"byte_end":732252,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Type","qualname":"::ir::item_kind::ItemKind::Type","value":"ItemKind::Type(Type)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" A type declared in any of the multiple ways it can be declared.\n","sig":null,"attributes":[{"value":"/ A type declared in any of the multiple ways it can be declared.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732176,"byte_end":732243,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5423},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732307,"byte_end":732315,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::item_kind::ItemKind::Function","value":"ItemKind::Function(Function)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" A function or method declaration.\n","sig":null,"attributes":[{"value":"/ A function or method declaration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732265,"byte_end":732302,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5426},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732386,"byte_end":732389,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Var","qualname":"::ir::item_kind::ItemKind::Var","value":"ItemKind::Var(Var)","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":" A variable declaration, most likely a static.\n","sig":null,"attributes":[{"value":"/ A variable declaration, most likely a static.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732332,"byte_end":732381,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":5416},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732048,"byte_end":732056,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ir::item_kind::ItemKind","value":"pub enum ItemKind {\n    Module(Module),\n    Type(Type),\n    Function(Function),\n    Var(Var),\n}","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5420},{"krate":0,"index":5423},{"krate":0,"index":5426}],"decl_id":null,"docs":" A item we parse and translate.\n","sig":null,"attributes":[{"value":"/ A item we parse and translate.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":731987,"byte_end":732021,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732535,"byte_end":732544,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"as_module","qualname":"<ItemKind>::as_module","value":"pub fn as_module(&Self) -> Option<&Module>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or `None` if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or `None` if it","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732419,"byte_end":732495,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732500,"byte_end":732523,"line_start":30,"line_end":30,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732752,"byte_end":732761,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"kind_name","qualname":"<ItemKind>::kind_name","value":"pub fn kind_name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transform our `ItemKind` into a string.\n","sig":null,"attributes":[{"value":"/ Transform our `ItemKind` into a string.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732697,"byte_end":732740,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733041,"byte_end":733050,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"is_module","qualname":"<ItemKind>::is_module","value":"pub fn is_module(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a module?\n","sig":null,"attributes":[{"value":"/ Is this a module?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733008,"byte_end":733029,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733229,"byte_end":733242,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"expect_module","qualname":"<ItemKind>::expect_module","value":"pub fn expect_module(&Self) -> &Module","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Module`, or panic if it\n is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Module`, or panic if it","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733114,"byte_end":733189,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733194,"byte_end":733217,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733440,"byte_end":733451,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"as_function","qualname":"<ItemKind>::as_function","value":"pub fn as_function(&Self) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or `None` if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733322,"byte_end":733397,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ it is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733402,"byte_end":733428,"line_start":60,"line_end":60,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733639,"byte_end":733650,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"is_function","qualname":"<ItemKind>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function?\n","sig":null,"attributes":[{"value":"/ Is this a function?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733604,"byte_end":733627,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733833,"byte_end":733848,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<ItemKind>::expect_function","value":"pub fn expect_function(&Self) -> &Function","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Function`, or panic if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Function`, or panic if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733716,"byte_end":733790,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ it is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733795,"byte_end":733821,"line_start":74,"line_end":74,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734048,"byte_end":734055,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"as_type","qualname":"<ItemKind>::as_type","value":"pub fn as_type(&Self) -> Option<&Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or `None` if\n it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or `None` if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":733934,"byte_end":734005,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ it is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734010,"byte_end":734036,"line_start":80,"line_end":80,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734318,"byte_end":734329,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"as_type_mut","qualname":"<ItemKind>::as_type_mut","value":"pub fn as_type_mut(&mut Self) -> Option<&mut Type>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`\n if it is some other kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this `ItemKind`'s underying `Type`, or `None`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734196,"byte_end":734272,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ if it is some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734277,"byte_end":734306,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734513,"byte_end":734520,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_type","qualname":"<ItemKind>::is_type","value":"pub fn is_type(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a type?\n","sig":null,"attributes":[{"value":"/ Is this a type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734482,"byte_end":734501,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734695,"byte_end":734706,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"expect_type","qualname":"<ItemKind>::expect_type","value":"pub fn expect_type(&Self) -> &Type","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Type`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Type`, or panic if it is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734582,"byte_end":734658,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734663,"byte_end":734683,"line_start":103,"line_end":103,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734893,"byte_end":734899,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_var","qualname":"<ItemKind>::as_var","value":"pub fn as_var(&Self) -> Option<&Var>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or `None` if it is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734780,"byte_end":734856,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":734861,"byte_end":734881,"line_start":109,"line_end":109,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735071,"byte_end":735077,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_var","qualname":"<ItemKind>::is_var","value":"pub fn is_var(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a variable?\n","sig":null,"attributes":[{"value":"/ Is this a variable?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735036,"byte_end":735059,"line_start":117,"line_end":117,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735250,"byte_end":735260,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"expect_var","qualname":"<ItemKind>::expect_var","value":"pub fn expect_var(&Self) -> &Var","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this `ItemKind`'s underying `Var`, or panic if it is\n some other kind.\n","sig":null,"attributes":[{"value":"/ Get a reference to this `ItemKind`'s underying `Var`, or panic if it is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735138,"byte_end":735213,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ some other kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735218,"byte_end":735238,"line_start":123,"line_end":123,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5431},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736268,"byte_end":736274,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Layout","qualname":"::ir::layout::Layout","value":"Layout { size, align, packed }","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434}],"decl_id":null,"docs":" A type that represents the struct layout of a type.\n","sig":null,"attributes":[{"value":"/ A type that represents the struct layout of a type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736160,"byte_end":736215,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5432},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736329,"byte_end":736333,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"size","qualname":"::ir::layout::Layout::size","value":"usize","parent":{"krate":0,"index":5431},"children":[],"decl_id":null,"docs":" The size (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of this layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736281,"byte_end":736320,"line_start":12,"line_end":12,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5433},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736399,"byte_end":736404,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"align","qualname":"::ir::layout::Layout::align","value":"usize","parent":{"krate":0,"index":5431},"children":[],"decl_id":null,"docs":" The alignment (in bytes) of this layout.\n","sig":null,"attributes":[{"value":"/ The alignment (in bytes) of this layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736346,"byte_end":736390,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5434},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736478,"byte_end":736484,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"packed","qualname":"::ir::layout::Layout::packed","value":"bool","parent":{"krate":0,"index":5431},"children":[],"decl_id":null,"docs":" Whether this layout's members are packed or not.\n","sig":null,"attributes":[{"value":"/ Whether this layout's members are packed or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736417,"byte_end":736469,"line_start":16,"line_end":16,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736927,"byte_end":736946,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"known_type_for_size","qualname":"<Layout>::known_type_for_size","value":"pub fn known_type_for_size(&BindgenContext, usize) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the integer type name for a given known size.\n","sig":null,"attributes":[{"value":"/ Gets the integer type name for a given known size.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736861,"byte_end":736915,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737376,"byte_end":737379,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Layout` with the given `size` and `align`. It is not\n packed.\n","sig":null,"attributes":[{"value":"/ Construct a new `Layout` with the given `size` and `align`. It is not","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737275,"byte_end":737348,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ packed.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737353,"byte_end":737364,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737955,"byte_end":737963,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"for_size","qualname":"<Layout>::for_size","value":"pub fn for_size(&BindgenContext, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a non-packed layout for a given size, trying to use the maximum\n alignment possible.\n","sig":null,"attributes":[{"value":"/ Creates a non-packed layout for a given size, trying to use the maximum","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737840,"byte_end":737915,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ alignment possible.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":737920,"byte_end":737943,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738129,"byte_end":738136,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Layout>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a zero-sized layout?\n","sig":null,"attributes":[{"value":"/ Is this a zero-sized layout?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738085,"byte_end":738117,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738253,"byte_end":738257,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"zero","qualname":"<Layout>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a zero-sized layout.\n","sig":null,"attributes":[{"value":"/ Construct a zero-sized layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738207,"byte_end":738241,"line_start":84,"line_end":84,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738355,"byte_end":738361,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Layout>::opaque","value":"pub fn opaque(&Self) -> Opaque","parent":null,"children":[],"decl_id":null,"docs":" Get this layout as an opaque type.\n","sig":null,"attributes":[{"value":"/ Get this layout as an opaque type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738305,"byte_end":738343,"line_start":89,"line_end":89,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738536,"byte_end":738542,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::ir::layout::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":" When we are treating a type as opaque, it is just a blob with a `Layout`.\n","sig":null,"attributes":[{"value":"/ When we are treating a type as opaque, it is just a blob with a `Layout`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738412,"byte_end":738489,"line_start":95,"line_end":95,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":5446},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738543,"byte_end":738553,"line_start":97,"line_end":97,"column_start":19,"column_end":29},"name":"0","qualname":"::ir::layout::Opaque::0","value":"ir::layout::Layout","parent":{"krate":0,"index":5444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738645,"byte_end":738658,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Opaque>::from_clang_ty","value":"pub fn from_clang_ty(&clang::Type, &BindgenContext) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Construct a new opaque type from the given clang type.\n","sig":null,"attributes":[{"value":"/ Construct a new opaque type from the given clang type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738575,"byte_end":738633,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739036,"byte_end":739061,"line_start":110,"line_end":110,"column_start":12,"column_end":37},"name":"known_rust_type_for_array","qualname":"<Opaque>::known_rust_type_for_array","value":"pub fn known_rust_type_for_array(&Self, &BindgenContext)\n-> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the known rust type we should use to create a correctly-aligned\n field with this layout.\n","sig":null,"attributes":[{"value":"/ Return the known rust type we should use to create a correctly-aligned","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738918,"byte_end":738992,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ field with this layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738997,"byte_end":739024,"line_start":109,"line_end":109,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739356,"byte_end":739366,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"array_size","qualname":"<Opaque>::array_size","value":"pub fn array_size(&Self, &BindgenContext) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the array size that an opaque type for this layout should have if\n we know the correct type for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array size that an opaque type for this layout should have if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739206,"byte_end":739282,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ we know the correct type for it, or `None` otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739287,"byte_end":739344,"line_start":118,"line_end":118,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739785,"byte_end":739815,"line_start":130,"line_end":130,"column_start":12,"column_end":42},"name":"array_size_within_derive_limit","qualname":"<Opaque>::array_size_within_derive_limit","value":"pub fn array_size_within_derive_limit(&Self, &BindgenContext) -> CanDerive","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this opaque layout's array size will fit within the\n maximum number of array elements that Rust allows deriving traits\n with. Return `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Return `true` if this opaque layout's array size will fit within the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739587,"byte_end":739659,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ maximum number of array elements that Rust allows deriving traits","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739664,"byte_end":739733,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ with. Return `false` otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":739738,"byte_end":739773,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5456},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740530,"byte_end":740536,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ir::module::ModuleKind::Normal","value":"ModuleKind::Normal","parent":{"krate":0,"index":5455},"children":[],"decl_id":null,"docs":" This module is not inline.\n","sig":null,"attributes":[{"value":"/ This module is not inline.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740495,"byte_end":740525,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5458},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740606,"byte_end":740612,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ir::module::ModuleKind::Inline","value":"ModuleKind::Inline","parent":{"krate":0,"index":5455},"children":[],"decl_id":null,"docs":" This module is inline, as in `inline namespace foo {}`.\n","sig":null,"attributes":[{"value":"/ This module is inline, as in `inline namespace foo {}`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740542,"byte_end":740601,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":5455},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740478,"byte_end":740488,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ir::module::ModuleKind","value":"pub enum ModuleKind { Normal, Inline, }","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5458}],"decl_id":null,"docs":" Whether this module is inline or not.\n","sig":null,"attributes":[{"value":"/ Whether this module is inline or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740382,"byte_end":740423,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5471},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740690,"byte_end":740696,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Module","qualname":"::ir::module::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474}],"decl_id":null,"docs":" A module, as in, a C++ namespace.\n","sig":null,"attributes":[{"value":"/ A module, as in, a C++ namespace.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740617,"byte_end":740654,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740991,"byte_end":740994,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Module>::new","value":"pub fn new(Option<String>, ModuleKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Module`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Module`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740950,"byte_end":740979,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741208,"byte_end":741212,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this module's name.\n","sig":null,"attributes":[{"value":"/ Get this module's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741169,"byte_end":741196,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741356,"byte_end":741368,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"children_mut","qualname":"<Module>::children_mut","value":"pub fn children_mut(&mut Self) -> &mut ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this module's children.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this module's children.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741290,"byte_end":741344,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741479,"byte_end":741487,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"children","qualname":"<Module>::children","value":"pub fn children(&Self) -> &ItemSet","parent":null,"children":[],"decl_id":null,"docs":" Get this module's children.\n","sig":null,"attributes":[{"value":"/ Get this module's children.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741436,"byte_end":741467,"line_start":51,"line_end":51,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741592,"byte_end":741601,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Module>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this namespace is inline.\n","sig":null,"attributes":[{"value":"/ Whether this namespace is inline.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741543,"byte_end":741580,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5479},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743414,"byte_end":743427,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"ObjCInterface","qualname":"::ir::objc::ObjCInterface","value":"ObjCInterface { template_names, conforms_to, parent_class }","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487}],"decl_id":null,"docs":" Objective C interface as used in TypeKind","sig":null,"attributes":[{"value":"/ Objective C interface as used in TypeKind","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743278,"byte_end":743323,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743324,"byte_end":743327,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Also protocols and categories are parsed as this type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743328,"byte_end":743385,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5483},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743624,"byte_end":743638,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"template_names","qualname":"::ir::objc::ObjCInterface::template_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" The list of template names almost always, ObjectType or KeyType\n","sig":null,"attributes":[{"value":"/ The list of template names almost always, ObjectType or KeyType","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743548,"byte_end":743615,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":5484},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743725,"byte_end":743736,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"conforms_to","qualname":"::ir::objc::ObjCInterface::conforms_to","value":"std::vec::Vec<ir::context::ItemId>","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" The list of protocols that this interface conforms to.\n","sig":null,"attributes":[{"value":"/ The list of protocols that this interface conforms to.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743658,"byte_end":743716,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5485},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743806,"byte_end":743818,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"parent_class","qualname":"::ir::objc::ObjCInterface::parent_class","value":"std::option::Option<ir::context::ItemId>","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" The direct parent for this interface.\n","sig":null,"attributes":[{"value":"/ The direct parent for this interface.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743756,"byte_end":743797,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5490},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744016,"byte_end":744026,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"ObjCMethod","qualname":"::ir::objc::ObjCMethod","value":"ObjCMethod {  }","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494}],"decl_id":null,"docs":" The objective c methods\n","sig":null,"attributes":[{"value":"/ The objective c methods","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":743960,"byte_end":743987,"line_start":49,"line_end":49,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744742,"byte_end":744746,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCInterface>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The name\n like, NSObject\n","sig":null,"attributes":[{"value":"/ The name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744695,"byte_end":744707,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/ like, NSObject","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744712,"byte_end":744730,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744972,"byte_end":744981,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCInterface>::rust_name","value":"pub fn rust_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Formats the name for rust\n Can be like NSObject, but with categories might be like NSObject_NSCoderMethods\n and protocols are like PNSObject\n","sig":null,"attributes":[{"value":"/ Formats the name for rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744802,"byte_end":744831,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/ Can be like NSObject, but with categories might be like NSObject_NSCoderMethods","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744836,"byte_end":744919,"line_start":87,"line_end":87,"column_start":5,"column_end":88}},{"value":"/ and protocols are like PNSObject","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744924,"byte_end":744960,"line_start":88,"line_end":88,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745346,"byte_end":745357,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_template","qualname":"<ObjCInterface>::is_template","value":"pub fn is_template(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template interface?\n","sig":null,"attributes":[{"value":"/ Is this a template interface?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745301,"byte_end":745334,"line_start":101,"line_end":101,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745487,"byte_end":745494,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"methods","qualname":"<ObjCInterface>::methods","value":"pub fn methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the methods defined in this interface","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745426,"byte_end":745475,"line_start":106,"line_end":106,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745592,"byte_end":745603,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"is_protocol","qualname":"<ObjCInterface>::is_protocol","value":"pub fn is_protocol(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a protocol?\n","sig":null,"attributes":[{"value":"/ Is this a protocol?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745557,"byte_end":745580,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745692,"byte_end":745703,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"is_category","qualname":"<ObjCInterface>::is_category","value":"pub fn is_category(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a category?\n","sig":null,"attributes":[{"value":"/ Is this a category?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745657,"byte_end":745680,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745831,"byte_end":745844,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"class_methods","qualname":"<ObjCInterface>::class_methods","value":"pub fn class_methods(&Self) -> &Vec<ObjCMethod>","parent":null,"children":[],"decl_id":null,"docs":" List of the class methods defined in this interface\n","sig":null,"attributes":[{"value":"/ List of the class methods defined in this interface","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745764,"byte_end":745819,"line_start":121,"line_end":121,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745977,"byte_end":745984,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<ObjCInterface>::from_ty","value":"pub fn from_ty(&clang::Cursor, &mut BindgenContext) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses the Objective C interface from the cursor\n","sig":null,"attributes":[{"value":"/ Parses the Objective C interface from the cursor","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":745913,"byte_end":745965,"line_start":126,"line_end":126,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749878,"byte_end":749882,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"name","qualname":"<ObjCMethod>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The original method selector name\n like, dataWithBytes:length:\n","sig":null,"attributes":[{"value":"/ The original method selector name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749793,"byte_end":749830,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ like, dataWithBytes:length:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749835,"byte_end":749866,"line_start":228,"line_end":228,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750022,"byte_end":750031,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"rust_name","qualname":"<ObjCMethod>::rust_name","value":"pub fn rust_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Method name as converted to rust\n like, dataWithBytes_length_\n","sig":null,"attributes":[{"value":"/ Method name as converted to rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749938,"byte_end":749974,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ like, dataWithBytes_length_","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749979,"byte_end":750010,"line_start":234,"line_end":234,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750152,"byte_end":750161,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"signature","qualname":"<ObjCMethod>::signature","value":"pub fn signature(&Self) -> &FunctionSig","parent":null,"children":[],"decl_id":null,"docs":" Returns the methods signature as FunctionSig\n","sig":null,"attributes":[{"value":"/ Returns the methods signature as FunctionSig","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750092,"byte_end":750140,"line_start":239,"line_end":239,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750261,"byte_end":750276,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"is_class_method","qualname":"<ObjCMethod>::is_class_method","value":"pub fn is_class_method(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a class method?\n","sig":null,"attributes":[{"value":"/ Is this a class method?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750222,"byte_end":750249,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750373,"byte_end":750391,"line_start":250,"line_end":250,"column_start":12,"column_end":30},"name":"format_method_call","qualname":"<ObjCMethod>::format_method_call","value":"pub fn format_method_call(&Self, &[TokenStream]) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Formats the method call\n","sig":null,"attributes":[{"value":"/ Formats the method call","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":750334,"byte_end":750361,"line_start":249,"line_end":249,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":3401},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":758752,"byte_end":758757,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::template::AsTemplateParam::Extra","value":"type Extra;","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":" Any extra information the implementor might need to make this decision.\n","sig":null,"attributes":[{"value":"/ Any extra information the implementor might need to make this decision.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":758667,"byte_end":758742,"line_start":168,"line_end":168,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759278,"byte_end":759299,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"TemplateInstantiation","qualname":"::ir::template::TemplateInstantiation","value":"TemplateInstantiation {  }","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500}],"decl_id":null,"docs":" A concrete instantiation of a generic template.\n","sig":null,"attributes":[{"value":"/ A concrete instantiation of a generic template.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759191,"byte_end":759242,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759652,"byte_end":759655,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TemplateInstantiation>::new","value":"pub fn new<I>(TypeId, I) -> TemplateInstantiation where I: IntoIterator<Item =\nTypeId>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new template instantiation from the given parts.\n","sig":null,"attributes":[{"value":"/ Construct a new template instantiation from the given parts.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759576,"byte_end":759640,"line_start":199,"line_end":199,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759959,"byte_end":759978,"line_start":211,"line_end":211,"column_start":12,"column_end":31},"name":"template_definition","qualname":"<TemplateInstantiation>::template_definition","value":"pub fn template_definition(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get the template definition for this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the template definition for this instantiation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759892,"byte_end":759947,"line_start":210,"line_end":210,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":760112,"byte_end":760130,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"template_arguments","qualname":"<TemplateInstantiation>::template_arguments","value":"pub fn template_arguments(&Self) -> &[TypeId]","parent":null,"children":[],"decl_id":null,"docs":" Get the concrete template arguments used in this instantiation.\n","sig":null,"attributes":[{"value":"/ Get the concrete template arguments used in this instantiation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":760033,"byte_end":760100,"line_start":215,"line_end":215,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":760255,"byte_end":760262,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"from_ty","qualname":"<TemplateInstantiation>::from_ty","value":"pub fn from_ty(&clang::Type, &mut BindgenContext)\n-> Option<TemplateInstantiation>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `TemplateInstantiation` from a clang `Type`.\n","sig":null,"attributes":[{"value":"/ Parse a `TemplateInstantiation` from a clang `Type`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":760187,"byte_end":760243,"line_start":220,"line_end":220,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":3485},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":775348,"byte_end":775353,"line_start":366,"line_end":366,"column_start":10,"column_end":15},"name":"Extra","qualname":"::ir::traversal::Trace::Extra","value":"type Extra;","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" If a particular type needs extra information beyond what it has in\n `self` and `context` to find its referenced items, its implementation\n can define this associated type, forcing callers to pass the needed\n information through.\n","sig":null,"attributes":[{"value":"/ If a particular type needs extra information beyond what it has in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":775085,"byte_end":775155,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ `self` and `context` to find its referenced items, its implementation","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":775160,"byte_end":775233,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ can define this associated type, forcing callers to pass the needed","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":775238,"byte_end":775309,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ information through.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":775314,"byte_end":775338,"line_start":365,"line_end":365,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5584},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780062,"byte_end":780066,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Type","qualname":"::ir::ty::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588}],"decl_id":null,"docs":" The base representation of a type in bindgen.","sig":null,"attributes":[{"value":"/ The base representation of a type in bindgen.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":779767,"byte_end":779816,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":779817,"byte_end":779820,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A type has an optional name, which if present cannot be empty, a `layout`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":779821,"byte_end":779898,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ (size, alignment and packedness) if known, a `Kind`, which determines which","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":779899,"byte_end":779978,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ kind of type it is, and whether the type is const.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":779979,"byte_end":780033,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780821,"byte_end":780828,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"as_comp","qualname":"<Type>::as_comp","value":"pub fn as_comp(&Self) -> Option<&CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type, or `None` if this is some\n other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type, or `None` if this is some","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780707,"byte_end":780781,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ other kind of type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780786,"byte_end":780809,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781114,"byte_end":781125,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"as_comp_mut","qualname":"<Type>::as_comp_mut","value":"pub fn as_comp_mut(&mut Self) -> Option<&mut CompInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `CompInfo` for this type as a mutable reference, or\n `None` if this is some other kind of type.\n","sig":null,"attributes":[{"value":"/ Get the underlying `CompInfo` for this type as a mutable reference, or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780977,"byte_end":781051,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ `None` if this is some other kind of type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781056,"byte_end":781102,"line_start":56,"line_end":56,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781325,"byte_end":781328,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Type>::new","value":"pub fn new(Option<String>, Option<Layout>, TypeKind, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Type`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Type`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781286,"byte_end":781313,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781613,"byte_end":781617,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"kind","qualname":"<Type>::kind","value":"pub fn kind(&Self) -> &TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Which kind of type is this?\n","sig":null,"attributes":[{"value":"/ Which kind of type is this?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781570,"byte_end":781601,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781730,"byte_end":781738,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"kind_mut","qualname":"<Type>::kind_mut","value":"pub fn kind_mut(&mut Self) -> &mut TypeKind","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this type's kind.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this type's kind.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781670,"byte_end":781718,"line_start":84,"line_end":84,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781840,"byte_end":781844,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"name","qualname":"<Type>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's name.\n","sig":null,"attributes":[{"value":"/ Get this type's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781803,"byte_end":781828,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781981,"byte_end":781997,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"is_block_pointer","qualname":"<Type>::is_block_pointer","value":"pub fn is_block_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this is a block pointer type.\n","sig":null,"attributes":[{"value":"/ Whether this is a block pointer type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":781928,"byte_end":781969,"line_start":94,"line_end":94,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782174,"byte_end":782181,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_comp","qualname":"<Type>::is_comp","value":"pub fn is_comp(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a compound type?\n","sig":null,"attributes":[{"value":"/ Is this a compound type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782134,"byte_end":782162,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782342,"byte_end":782350,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"is_union","qualname":"<Type>::is_union","value":"pub fn is_union(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a union?\n","sig":null,"attributes":[{"value":"/ Is this a union?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782310,"byte_end":782330,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782555,"byte_end":782568,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_type_param","qualname":"<Type>::is_type_param","value":"pub fn is_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this type of kind `TypeKind::TypeParam`?\n","sig":null,"attributes":[{"value":"/ Is this type of kind `TypeKind::TypeParam`?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782496,"byte_end":782543,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782752,"byte_end":782777,"line_start":127,"line_end":127,"column_start":12,"column_end":37},"name":"is_template_instantiation","qualname":"<Type>::is_template_instantiation","value":"pub fn is_template_instantiation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template instantiation type?\n","sig":null,"attributes":[{"value":"/ Is this a template instantiation type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782698,"byte_end":782740,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782969,"byte_end":782986,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"is_template_alias","qualname":"<Type>::is_template_alias","value":"pub fn is_template_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a template alias type?\n","sig":null,"attributes":[{"value":"/ Is this a template alias type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":782923,"byte_end":782957,"line_start":134,"line_end":134,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783164,"byte_end":783175,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"is_function","qualname":"<Type>::is_function","value":"pub fn is_function(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a function type?\n","sig":null,"attributes":[{"value":"/ Is this a function type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783124,"byte_end":783152,"line_start":142,"line_end":142,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783345,"byte_end":783352,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"is_enum","qualname":"<Type>::is_enum","value":"pub fn is_enum(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an enum type?\n","sig":null,"attributes":[{"value":"/ Is this an enum type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783308,"byte_end":783333,"line_start":150,"line_end":150,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783536,"byte_end":783560,"line_start":159,"line_end":159,"column_start":12,"column_end":36},"name":"is_builtin_or_type_param","qualname":"<Type>::is_builtin_or_type_param","value":"pub fn is_builtin_or_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this either a builtin or named type?\n","sig":null,"attributes":[{"value":"/ Is this either a builtin or named type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783481,"byte_end":783524,"line_start":158,"line_end":158,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784021,"byte_end":784026,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"named","qualname":"<Type>::named","value":"pub fn named(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new named type, with name `name`.\n","sig":null,"attributes":[{"value":"/ Creates a new named type, with name `name`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":783962,"byte_end":784009,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784234,"byte_end":784242,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Type>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a floating point type?\n","sig":null,"attributes":[{"value":"/ Is this a floating point type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784188,"byte_end":784222,"line_start":180,"line_end":180,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784411,"byte_end":784418,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Type>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a boolean type?\n","sig":null,"attributes":[{"value":"/ Is this a boolean type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784372,"byte_end":784399,"line_start":188,"line_end":188,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784597,"byte_end":784607,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Type>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an integer type?\n","sig":null,"attributes":[{"value":"/ Is this an integer type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784557,"byte_end":784585,"line_start":196,"line_end":196,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784833,"byte_end":784843,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Type>::as_integer","value":"pub fn as_integer(&Self) -> Option<IntKind>","parent":null,"children":[],"decl_id":null,"docs":" Cast this type to an integer kind, or `None` if it is not an integer\n type.\n","sig":null,"attributes":[{"value":"/ Cast this type to an integer kind, or `None` if it is not an integer","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784735,"byte_end":784807,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784812,"byte_end":784821,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785046,"byte_end":785054,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Type>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a `const` qualified type?\n","sig":null,"attributes":[{"value":"/ Is this a `const` qualified type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":784997,"byte_end":785034,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785157,"byte_end":785168,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"is_type_ref","qualname":"<Type>::is_type_ref","value":"pub fn is_type_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a reference to another type?\n","sig":null,"attributes":[{"value":"/ Is this a reference to another type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785105,"byte_end":785145,"line_start":218,"line_end":218,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785406,"byte_end":785423,"line_start":228,"line_end":228,"column_start":12,"column_end":29},"name":"is_unresolved_ref","qualname":"<Type>::is_unresolved_ref","value":"pub fn is_unresolved_ref(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this an unresolved reference?\n","sig":null,"attributes":[{"value":"/ Is this an unresolved reference?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785358,"byte_end":785394,"line_start":227,"line_end":227,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785618,"byte_end":785637,"line_start":236,"line_end":236,"column_start":12,"column_end":31},"name":"is_incomplete_array","qualname":"<Type>::is_incomplete_array","value":"pub fn is_incomplete_array(&Self, &BindgenContext) -> Option<ItemId>","parent":null,"children":[],"decl_id":null,"docs":" Is this a incomplete array type?\n","sig":null,"attributes":[{"value":"/ Is this a incomplete array type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":785570,"byte_end":785606,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":786128,"byte_end":786134,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"layout","qualname":"<Type>::layout","value":"pub fn layout(&Self, &BindgenContext) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" What is the layout of this type?\n","sig":null,"attributes":[{"value":"/ What is the layout of this type?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":786080,"byte_end":786116,"line_start":252,"line_end":252,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787181,"byte_end":787202,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"is_invalid_type_param","qualname":"<Type>::is_invalid_type_param","value":"pub fn is_invalid_type_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this named type is an invalid C++ identifier. This is done to\n avoid generating invalid code with some cases we can't handle, see:","sig":null,"attributes":[{"value":"/ Whether this named type is an invalid C++ identifier. This is done to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":786967,"byte_end":787040,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ avoid generating invalid code with some cases we can't handle, see:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787045,"byte_end":787116,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787121,"byte_end":787124,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ tests/headers/381-decltype-alias.hpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787129,"byte_end":787169,"line_start":277,"line_end":277,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787852,"byte_end":787866,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"sanitized_name","qualname":"<Type>::sanitized_name","value":"pub fn sanitized_name<'a>(&'a Self, &BindgenContext) -> Option<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Get this type's santizied name.\n","sig":null,"attributes":[{"value":"/ Get this type's santizied name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":787805,"byte_end":787840,"line_start":298,"line_end":298,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":788739,"byte_end":788753,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"canonical_type","qualname":"<Type>::canonical_type","value":"pub fn canonical_type<'tr>(&'tr Self, &'tr BindgenContext) -> &'tr Type","parent":null,"children":[],"decl_id":null,"docs":" See safe_canonical_type.\n","sig":null,"attributes":[{"value":"/ See safe_canonical_type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":788699,"byte_end":788727,"line_start":325,"line_end":325,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":789262,"byte_end":789281,"line_start":339,"line_end":339,"column_start":12,"column_end":31},"name":"safe_canonical_type","qualname":"<Type>::safe_canonical_type","value":"pub fn safe_canonical_type<'tr>(&'tr Self, &'tr BindgenContext)\n-> Option<&'tr Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical type of this type, that is, the \"inner type\".","sig":null,"attributes":[{"value":"/ Returns the canonical type of this type, that is, the \"inner type\".","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":788947,"byte_end":789018,"line_start":334,"line_end":334,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":789023,"byte_end":789026,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ For example, for a `typedef`, the canonical type would be the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":789031,"byte_end":789096,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ `typedef`ed type, for a template instantiation, would be the template","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":789101,"byte_end":789174,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ its specializing, and so on. Return None if the type is unresolved.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":789179,"byte_end":789250,"line_start":338,"line_end":338,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":790643,"byte_end":790675,"line_start":378,"line_end":378,"column_start":12,"column_end":44},"name":"should_be_traced_unconditionally","qualname":"<Type>::should_be_traced_unconditionally","value":"pub fn should_be_traced_unconditionally(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" There are some types we don't want to stop at when finding an opaque\n item, so we can arrive to the proper item that needs to be generated.\n","sig":null,"attributes":[{"value":"/ There are some types we don't want to stop at when finding an opaque","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":790481,"byte_end":790553,"line_start":376,"line_end":376,"column_start":5,"column_end":77}},{"value":"/ item, so we can arrive to the proper item that needs to be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":790558,"byte_end":790631,"line_start":377,"line_end":377,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5592},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797254,"byte_end":797259,"line_start":609,"line_end":609,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::FloatKind::Float","value":"FloatKind::Float","parent":{"krate":0,"index":5591},"children":[],"decl_id":null,"docs":" A `float`.\n","sig":null,"attributes":[{"value":"/ A `float`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797235,"byte_end":797249,"line_start":608,"line_end":608,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5594},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797285,"byte_end":797291,"line_start":611,"line_end":611,"column_start":5,"column_end":11},"name":"Double","qualname":"::ir::ty::FloatKind::Double","value":"FloatKind::Double","parent":{"krate":0,"index":5591},"children":[],"decl_id":null,"docs":" A `double`.\n","sig":null,"attributes":[{"value":"/ A `double`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797265,"byte_end":797280,"line_start":610,"line_end":610,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5596},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797322,"byte_end":797332,"line_start":613,"line_end":613,"column_start":5,"column_end":15},"name":"LongDouble","qualname":"::ir::ty::FloatKind::LongDouble","value":"FloatKind::LongDouble","parent":{"krate":0,"index":5591},"children":[],"decl_id":null,"docs":" A `long double`.\n","sig":null,"attributes":[{"value":"/ A `long double`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797297,"byte_end":797317,"line_start":612,"line_end":612,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5598},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797362,"byte_end":797370,"line_start":615,"line_end":615,"column_start":5,"column_end":13},"name":"Float128","qualname":"::ir::ty::FloatKind::Float128","value":"FloatKind::Float128","parent":{"krate":0,"index":5591},"children":[],"decl_id":null,"docs":" A `__float128`.\n","sig":null,"attributes":[{"value":"/ A `__float128`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797338,"byte_end":797357,"line_start":614,"line_end":614,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5591},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797219,"byte_end":797228,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"FloatKind","qualname":"::ir::ty::FloatKind","value":"pub enum FloatKind { Float, Double, LongDouble, Float128, }","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5596},{"krate":0,"index":5598}],"decl_id":null,"docs":" The kind of float this type represents.\n","sig":null,"attributes":[{"value":"/ The kind of float this type represents.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797125,"byte_end":797168,"line_start":605,"line_end":605,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5609},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797491,"byte_end":797495,"line_start":622,"line_end":622,"column_start":5,"column_end":9},"name":"Void","qualname":"::ir::ty::TypeKind::Void","value":"TypeKind::Void","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The void type.\n","sig":null,"attributes":[{"value":"/ The void type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797468,"byte_end":797486,"line_start":621,"line_end":621,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5611},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797532,"byte_end":797539,"line_start":625,"line_end":625,"column_start":5,"column_end":12},"name":"NullPtr","qualname":"::ir::ty::TypeKind::NullPtr","value":"TypeKind::NullPtr","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The `nullptr_t` type.\n","sig":null,"attributes":[{"value":"/ The `nullptr_t` type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797502,"byte_end":797527,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5613},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797607,"byte_end":797611,"line_start":628,"line_end":628,"column_start":5,"column_end":9},"name":"Comp","qualname":"::ir::ty::TypeKind::Comp","value":"TypeKind::Comp(CompInfo)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A compound type, that is, a class, struct, or union.\n","sig":null,"attributes":[{"value":"/ A compound type, that is, a class, struct, or union.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797546,"byte_end":797602,"line_start":627,"line_end":627,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5616},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797802,"byte_end":797808,"line_start":633,"line_end":633,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::ir::ty::TypeKind::Opaque","value":"TypeKind::Opaque","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An opaque type that we just don't understand. All usage of this shoulf\n result in an opaque blob of bytes generated from the containing type's\n layout.\n","sig":null,"attributes":[{"value":"/ An opaque type that we just don't understand. All usage of this shoulf","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797628,"byte_end":797702,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ result in an opaque blob of bytes generated from the containing type's","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797707,"byte_end":797781,"line_start":631,"line_end":631,"column_start":5,"column_end":79}},{"value":"/ layout.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797786,"byte_end":797797,"line_start":632,"line_end":632,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797913,"byte_end":797916,"line_start":637,"line_end":637,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::ty::TypeKind::Int","value":"TypeKind::Int(IntKind)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An integer type, of a given kind. `bool` and `char` are also considered\n integers.\n","sig":null,"attributes":[{"value":"/ An integer type, of a given kind. `bool` and `char` are also considered","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797815,"byte_end":797890,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/ integers.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797895,"byte_end":797908,"line_start":636,"line_end":636,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5621},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797963,"byte_end":797968,"line_start":640,"line_end":640,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::ty::TypeKind::Float","value":"TypeKind::Float(FloatKind)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A floating point type.\n","sig":null,"attributes":[{"value":"/ A floating point type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797932,"byte_end":797958,"line_start":639,"line_end":639,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5624},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798025,"byte_end":798032,"line_start":643,"line_end":643,"column_start":5,"column_end":12},"name":"Complex","qualname":"::ir::ty::TypeKind::Complex","value":"TypeKind::Complex(FloatKind)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A complex floating point type.\n","sig":null,"attributes":[{"value":"/ A complex floating point type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797986,"byte_end":798020,"line_start":642,"line_end":642,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5627},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798114,"byte_end":798119,"line_start":646,"line_end":646,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ir::ty::TypeKind::Alias","value":"TypeKind::Alias(TypeId)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A type alias, with a name, that points to another type.\n","sig":null,"attributes":[{"value":"/ A type alias, with a name, that points to another type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798050,"byte_end":798109,"line_start":645,"line_end":645,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5630},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798243,"byte_end":798256,"line_start":650,"line_end":650,"column_start":5,"column_end":18},"name":"TemplateAlias","qualname":"::ir::ty::TypeKind::TemplateAlias","value":"TypeKind::TemplateAlias(TypeId, Vec<TypeId>)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A templated alias, pointing to an inner type, just as `Alias`, but with\n template parameters.\n","sig":null,"attributes":[{"value":"/ A templated alias, pointing to an inner type, just as `Alias`, but with","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798134,"byte_end":798209,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ template parameters.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798214,"byte_end":798238,"line_start":649,"line_end":649,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5634},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798347,"byte_end":798353,"line_start":653,"line_end":653,"column_start":5,"column_end":11},"name":"Vector","qualname":"::ir::ty::TypeKind::Vector","value":"TypeKind::Vector(TypeId, usize)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A packed vector type: element type, number of elements\n","sig":null,"attributes":[{"value":"/ A packed vector type: element type, number of elements","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798284,"byte_end":798342,"line_start":652,"line_end":652,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798416,"byte_end":798421,"line_start":656,"line_end":656,"column_start":5,"column_end":10},"name":"Array","qualname":"::ir::ty::TypeKind::Array","value":"TypeKind::Array(TypeId, usize)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An array of a type and a length.\n","sig":null,"attributes":[{"value":"/ An array of a type and a length.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798375,"byte_end":798411,"line_start":655,"line_end":655,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5642},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798492,"byte_end":798500,"line_start":659,"line_end":659,"column_start":5,"column_end":13},"name":"Function","qualname":"::ir::ty::TypeKind::Function","value":"TypeKind::Function(FunctionSig)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A function type, with a given signature.\n","sig":null,"attributes":[{"value":"/ A function type, with a given signature.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798443,"byte_end":798487,"line_start":658,"line_end":658,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5645},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798544,"byte_end":798548,"line_start":662,"line_end":662,"column_start":5,"column_end":9},"name":"Enum","qualname":"::ir::ty::TypeKind::Enum","value":"TypeKind::Enum(Enum)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An `enum` type.\n","sig":null,"attributes":[{"value":"/ An `enum` type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798520,"byte_end":798539,"line_start":661,"line_end":661,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5648},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798651,"byte_end":798658,"line_start":666,"line_end":666,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::ir::ty::TypeKind::Pointer","value":"TypeKind::Pointer(TypeId)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A pointer to a type. The bool field represents whether it's const or\n not.\n","sig":null,"attributes":[{"value":"/ A pointer to a type. The bool field represents whether it's const or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798561,"byte_end":798633,"line_start":664,"line_end":664,"column_start":5,"column_end":77}},{"value":"/ not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798638,"byte_end":798646,"line_start":665,"line_end":665,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5651},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798710,"byte_end":798722,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"BlockPointer","qualname":"::ir::ty::TypeKind::BlockPointer","value":"TypeKind::BlockPointer(TypeId)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A pointer to an Apple block.\n","sig":null,"attributes":[{"value":"/ A pointer to an Apple block.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798673,"byte_end":798705,"line_start":668,"line_end":668,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5654},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798787,"byte_end":798796,"line_start":672,"line_end":672,"column_start":5,"column_end":14},"name":"Reference","qualname":"::ir::ty::TypeKind::Reference","value":"TypeKind::Reference(TypeId)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A reference to a type, as in: int& foo().\n","sig":null,"attributes":[{"value":"/ A reference to a type, as in: int& foo().","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798737,"byte_end":798782,"line_start":671,"line_end":671,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5657},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798922,"byte_end":798943,"line_start":676,"line_end":676,"column_start":5,"column_end":26},"name":"TemplateInstantiation","qualname":"::ir::ty::TypeKind::TemplateInstantiation","value":"TypeKind::TemplateInstantiation(TemplateInstantiation)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An instantiation of an abstract template definition with a set of\n concrete template arguments.\n","sig":null,"attributes":[{"value":"/ An instantiation of an abstract template definition with a set of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798811,"byte_end":798880,"line_start":674,"line_end":674,"column_start":5,"column_end":74}},{"value":"/ concrete template arguments.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798885,"byte_end":798917,"line_start":675,"line_end":675,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5660},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799331,"byte_end":799348,"line_start":685,"line_end":685,"column_start":5,"column_end":22},"name":"UnresolvedTypeRef","qualname":"::ir::ty::TypeKind::UnresolvedTypeRef","value":"TypeKind::UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A reference to a yet-to-resolve type. This stores the clang cursor\n itself, and postpones its resolution.","sig":null,"attributes":[{"value":"/ A reference to a yet-to-resolve type. This stores the clang cursor","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":798973,"byte_end":799043,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ itself, and postpones its resolution.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799048,"byte_end":799089,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799094,"byte_end":799097,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ These are gone in a phase after parsing where these are mapped to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799102,"byte_end":799171,"line_start":681,"line_end":681,"column_start":5,"column_end":74}},{"value":"/ already known types, and are converted to ResolvedTypeRef.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799176,"byte_end":799238,"line_start":682,"line_end":682,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799243,"byte_end":799246,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ see tests/headers/typeref.hpp to see somewhere where this is a problem.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799251,"byte_end":799326,"line_start":684,"line_end":684,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5665},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799620,"byte_end":799635,"line_start":696,"line_end":696,"column_start":5,"column_end":20},"name":"ResolvedTypeRef","qualname":"::ir::ty::TypeKind::ResolvedTypeRef","value":"TypeKind::ResolvedTypeRef(TypeId)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" An indirection to another type.","sig":null,"attributes":[{"value":"/ An indirection to another type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799454,"byte_end":799489,"line_start":692,"line_end":692,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799494,"byte_end":799497,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ These are generated after we resolve a forward declaration, or when we","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799502,"byte_end":799576,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ replace one type with another.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799581,"byte_end":799615,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5668},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799703,"byte_end":799712,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"TypeParam","qualname":"::ir::ty::TypeKind::TypeParam","value":"TypeKind::TypeParam","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A named type, that is, a template parameter.\n","sig":null,"attributes":[{"value":"/ A named type, that is, a template parameter.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799650,"byte_end":799698,"line_start":698,"line_end":698,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799786,"byte_end":799799,"line_start":702,"line_end":702,"column_start":5,"column_end":18},"name":"ObjCInterface","qualname":"::ir::ty::TypeKind::ObjCInterface","value":"TypeKind::ObjCInterface(ObjCInterface)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" Objective C interface. Always referenced through a pointer\n","sig":null,"attributes":[{"value":"/ Objective C interface. Always referenced through a pointer","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799719,"byte_end":799781,"line_start":701,"line_end":701,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5673},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799873,"byte_end":799879,"line_start":705,"line_end":705,"column_start":5,"column_end":11},"name":"ObjCId","qualname":"::ir::ty::TypeKind::ObjCId","value":"TypeKind::ObjCId","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" Objective C 'id' type, points to any object\n","sig":null,"attributes":[{"value":"/ Objective C 'id' type, points to any object","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799821,"byte_end":799868,"line_start":704,"line_end":704,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5675},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799920,"byte_end":799927,"line_start":708,"line_end":708,"column_start":5,"column_end":12},"name":"ObjCSel","qualname":"::ir::ty::TypeKind::ObjCSel","value":"TypeKind::ObjCSel","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" Objective C selector type\n","sig":null,"attributes":[{"value":"/ Objective C selector type","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799886,"byte_end":799915,"line_start":707,"line_end":707,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5608},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797453,"byte_end":797461,"line_start":620,"line_end":620,"column_start":10,"column_end":18},"name":"TypeKind","qualname":"::ir::ty::TypeKind","value":"pub enum TypeKind {\n    Void,\n    NullPtr,\n    Comp(CompInfo),\n    Opaque,\n    Int(IntKind),\n    Float(FloatKind),\n    Complex(FloatKind),\n    Alias(TypeId),\n    TemplateAlias(TypeId, Vec<TypeId>),\n    Vector(TypeId, usize),\n    Array(TypeId, usize),\n    Function(FunctionSig),\n    Enum(Enum),\n    Pointer(TypeId),\n    BlockPointer(TypeId),\n    Reference(TypeId),\n    TemplateInstantiation(TemplateInstantiation),\n    UnresolvedTypeRef(clang::Type, clang::Cursor, Option<ItemId>),\n    ResolvedTypeRef(TypeId),\n    TypeParam,\n    ObjCInterface(ObjCInterface),\n    ObjCId,\n    ObjCSel,\n}","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5611},{"krate":0,"index":5613},{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5621},{"krate":0,"index":5624},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5634},{"krate":0,"index":5638},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5651},{"krate":0,"index":5654},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5675}],"decl_id":null,"docs":" The different kinds of types that we can parse.\n","sig":null,"attributes":[{"value":"/ The different kinds of types that we can parse.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":797375,"byte_end":797426,"line_start":618,"line_end":618,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":800250,"byte_end":800263,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"from_clang_ty","qualname":"<Type>::from_clang_ty","value":"pub fn from_clang_ty(ItemId, &clang::Type, Cursor, Option<ItemId>,\n                     &mut BindgenContext)\n-> Result<ParseResult<Self>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" This is another of the nasty methods. This one is the one that takes\n care of the core logic of converting a clang type to a `Type`.","sig":null,"attributes":[{"value":"/ This is another of the nasty methods. This one is the one that takes","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799948,"byte_end":800020,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ care of the core logic of converting a clang type to a `Type`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":800025,"byte_end":800091,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":800096,"byte_end":800099,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ It's sort of nasty and full of special-casing, but hopefully the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":800104,"byte_end":800172,"line_start":715,"line_end":715,"column_start":5,"column_end":73}},{"value":"/ comments in every special case justify why they're there.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":800177,"byte_end":800238,"line_start":716,"line_end":716,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826408,"byte_end":826412,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ir::var::VarType::Bool","value":"VarType::Bool(bool)","parent":{"krate":0,"index":5679},"children":[],"decl_id":null,"docs":" A boolean.\n","sig":null,"attributes":[{"value":"/ A boolean.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826389,"byte_end":826403,"line_start":23,"line_end":23,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826444,"byte_end":826447,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Int","qualname":"::ir::var::VarType::Int","value":"VarType::Int(i64)","parent":{"krate":0,"index":5679},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826424,"byte_end":826439,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826491,"byte_end":826496,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::ir::var::VarType::Float","value":"VarType::Float(f64)","parent":{"krate":0,"index":5679},"children":[],"decl_id":null,"docs":" A floating point number.\n","sig":null,"attributes":[{"value":"/ A floating point number.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826458,"byte_end":826486,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826528,"byte_end":826532,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Char","qualname":"::ir::var::VarType::Char","value":"VarType::Char(u8)","parent":{"krate":0,"index":5679},"children":[],"decl_id":null,"docs":" A character.\n","sig":null,"attributes":[{"value":"/ A character.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826507,"byte_end":826523,"line_start":29,"line_end":29,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826595,"byte_end":826601,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"String","qualname":"::ir::var::VarType::String","value":"VarType::String(Vec<u8>)","parent":{"krate":0,"index":5679},"children":[],"decl_id":null,"docs":" A string, not necessarily well-formed utf-8.\n","sig":null,"attributes":[{"value":"/ A string, not necessarily well-formed utf-8.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826542,"byte_end":826590,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5679},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826375,"byte_end":826382,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"name":"VarType","qualname":"::ir::var::VarType","value":"pub enum VarType {\n    Bool(bool),\n    Int(i64),\n    Float(f64),\n    Char(u8),\n    String(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5692}],"decl_id":null,"docs":" The type for a constant variable.\n","sig":null,"attributes":[{"value":"/ The type for a constant variable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826311,"byte_end":826348,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5697},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826705,"byte_end":826708,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Var","qualname":"::ir::var::Var","value":"Var {  }","parent":null,"children":[{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702}],"decl_id":null,"docs":" A `Var` is our intermediate representation of a variable.\n","sig":null,"attributes":[{"value":"/ A `Var` is our intermediate representation of a variable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":826615,"byte_end":826676,"line_start":35,"line_end":35,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827102,"byte_end":827105,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Var>::new","value":"pub fn new(String, Option<String>, TypeId, Option<VarType>, bool) -> Var","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Var`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Var`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827064,"byte_end":827090,"line_start":51,"line_end":51,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827476,"byte_end":827484,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_const","qualname":"<Var>::is_const","value":"pub fn is_const(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this variable `const` qualified?\n","sig":null,"attributes":[{"value":"/ Is this variable `const` qualified?","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827425,"byte_end":827464,"line_start":69,"line_end":69,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827595,"byte_end":827598,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"val","qualname":"<Var>::val","value":"pub fn val(&Self) -> Option<&VarType>","parent":null,"children":[],"decl_id":null,"docs":" The value of this constant variable, if any.\n","sig":null,"attributes":[{"value":"/ The value of this constant variable, if any.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827535,"byte_end":827583,"line_start":74,"line_end":74,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827706,"byte_end":827708,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"ty","qualname":"<Var>::ty","value":"pub fn ty(&Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's type.\n","sig":null,"attributes":[{"value":"/ Get this variable's type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827665,"byte_end":827694,"line_start":79,"line_end":79,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827796,"byte_end":827800,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"name","qualname":"<Var>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's name.\n","sig":null,"attributes":[{"value":"/ Get this variable's name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827755,"byte_end":827784,"line_start":84,"line_end":84,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827897,"byte_end":827909,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"mangled_name","qualname":"<Var>::mangled_name","value":"pub fn mangled_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get this variable's mangled name.\n","sig":null,"attributes":[{"value":"/ Get this variable's mangled name.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827848,"byte_end":827885,"line_start":89,"line_end":89,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5706},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840885,"byte_end":840892,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Recurse","qualname":"::parse::ParseError::Recurse","value":"ParseError::Recurse","parent":{"krate":0,"index":5705},"children":[],"decl_id":null,"docs":" Recurse down the current AST node's children.\n","sig":null,"attributes":[{"value":"/ Recurse down the current AST node's children.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840831,"byte_end":840880,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5708},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841052,"byte_end":841060,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parse::ParseError::Continue","value":"ParseError::Continue","parent":{"krate":0,"index":5705},"children":[],"decl_id":null,"docs":" Continue on to the next sibling AST node, or back up to the parent's\n siblings if we've exhausted all of this node's siblings (and so on).\n","sig":null,"attributes":[{"value":"/ Continue on to the next sibling AST node, or back up to the parent's","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840898,"byte_end":840970,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ siblings if we've exhausted all of this node's siblings (and so on).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840975,"byte_end":841047,"line_start":14,"line_end":14,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":5705},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840814,"byte_end":840824,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parse::ParseError","value":"pub enum ParseError { Recurse, Continue, }","parent":null,"children":[{"krate":0,"index":5706},{"krate":0,"index":5708}],"decl_id":null,"docs":" Not so much an error in the traditional sense, but a control flow message\n when walking over Clang's AST with a cursor.\n","sig":null,"attributes":[{"value":"/ Not so much an error in the traditional sense, but a control flow message","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840661,"byte_end":840738,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ when walking over Clang's AST with a cursor.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":840739,"byte_end":840787,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5714},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841249,"byte_end":841264,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"AlreadyResolved","qualname":"::parse::ParseResult::AlreadyResolved","value":"ParseResult::AlreadyResolved(ItemId)","parent":{"krate":0,"index":5712},"children":[],"decl_id":null,"docs":" We've already resolved this item before, here is the extant `ItemId` for\n it.\n","sig":null,"attributes":[{"value":"/ We've already resolved this item before, here is the extant `ItemId` for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841156,"byte_end":841232,"line_start":21,"line_end":21,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841237,"byte_end":841244,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5717},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841407,"byte_end":841410,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"New","qualname":"::parse::ParseResult::New","value":"ParseResult::New(T, Option<clang::Cursor>)","parent":{"krate":0,"index":5712},"children":[],"decl_id":null,"docs":" This is a newly parsed item. If the cursor is `Some`, it points to the\n AST node where the new `T` was declared.\n","sig":null,"attributes":[{"value":"/ This is a newly parsed item. If the cursor is `Some`, it points to the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841279,"byte_end":841353,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ AST node where the new `T` was declared.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841358,"byte_end":841402,"line_start":26,"line_end":26,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5712},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841135,"byte_end":841146,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parse::ParseResult","value":"pub enum ParseResult<T> {\n    AlreadyResolved(ItemId),\n    New(T, Option<clang::Cursor>),\n}","parent":null,"children":[{"krate":0,"index":5714},{"krate":0,"index":5717}],"decl_id":null,"docs":" The result of parsing a Clang AST node.\n","sig":null,"attributes":[{"value":"/ The result of parsing a Clang AST node.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841065,"byte_end":841108,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5733},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846535,"byte_end":846540,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Timer","qualname":"::time::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737}],"decl_id":null,"docs":" RAII timer to measure how long phases take.\n","sig":null,"attributes":[{"value":"/ RAII timer to measure how long phases take.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846459,"byte_end":846506,"line_start":4,"line_end":4,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846760,"byte_end":846763,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"pub fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Timer with the given name, and starts it. By default,\n will print to stderr when it is `drop`'d\n","sig":null,"attributes":[{"value":"/ Creates a Timer with the given name, and starts it. By default,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846632,"byte_end":846699,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ will print to stderr when it is `drop`'d","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846704,"byte_end":846748,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846999,"byte_end":847010,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_output","qualname":"<Timer>::with_output","value":"pub fn with_output(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the Timer will print a message\n when it is dropped.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the Timer will print a message","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846905,"byte_end":846959,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/ when it is dropped.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846964,"byte_end":846987,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":847166,"byte_end":847173,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Timer>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time elapsed since the timer's creation\n","sig":null,"attributes":[{"value":"/ Returns the time elapsed since the timer's creation","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":847099,"byte_end":847154,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3858},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callbacks","qualname":"::callbacks","value":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":5741},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":3875},{"krate":0,"index":3877}],"decl_id":null,"docs":" A public API for more fine-grained customization of bindgen behavior.\n","sig":null,"attributes":[{"value":"/ A public API for more fine-grained customization of bindgen behavior.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":847799,"byte_end":847872,"line_start":1,"line_end":1,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5742},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848248,"byte_end":848254,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::callbacks::MacroParsingBehavior::Ignore","value":"MacroParsingBehavior::Ignore","parent":{"krate":0,"index":5741},"children":[],"decl_id":null,"docs":" Ignore the macro, generating no code for it, or anything that depends on\n it.\n","sig":null,"attributes":[{"value":"/ Ignore the macro, generating no code for it, or anything that depends on","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848155,"byte_end":848231,"line_start":11,"line_end":11,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848236,"byte_end":848243,"line_start":12,"line_end":12,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5744},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848319,"byte_end":848326,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Default","qualname":"::callbacks::MacroParsingBehavior::Default","value":"MacroParsingBehavior::Default","parent":{"krate":0,"index":5741},"children":[],"decl_id":null,"docs":" The default behavior bindgen would have otherwise.\n","sig":null,"attributes":[{"value":"/ The default behavior bindgen would have otherwise.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848260,"byte_end":848314,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":5741},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848128,"byte_end":848148,"line_start":10,"line_end":10,"column_start":10,"column_end":30},"name":"MacroParsingBehavior","qualname":"::callbacks::MacroParsingBehavior","value":"pub enum MacroParsingBehavior { Ignore, Default, }","parent":null,"children":[{"krate":0,"index":5742},{"krate":0,"index":5744}],"decl_id":null,"docs":" An enum to allow ignoring parsing of macros.\n","sig":null,"attributes":[{"value":"/ An enum to allow ignoring parsing of macros.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848025,"byte_end":848073,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":3877},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848542,"byte_end":848556,"line_start":26,"line_end":26,"column_start":11,"column_end":25},"name":"ParseCallbacks","qualname":"::callbacks::ParseCallbacks","value":"ParseCallbacks: fmt::Debug + UnwindSafe","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885}],"decl_id":null,"docs":" A trait to allow configuring different kinds of types in different\n situations.\n","sig":null,"attributes":[{"value":"/ A trait to allow configuring different kinds of types in different","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848445,"byte_end":848515,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ situations.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848516,"byte_end":848531,"line_start":25,"line_end":25,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848660,"byte_end":848676,"line_start":28,"line_end":28,"column_start":8,"column_end":24},"name":"will_parse_macro","qualname":"::callbacks::ParseCallbacks::will_parse_macro","value":"pub fn will_parse_macro(&Self, &str) -> MacroParsingBehavior","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" This function will be run on every macro that is identified.\n","sig":null,"attributes":[{"value":"/ This function will be run on every macro that is identified.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848588,"byte_end":848652,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848928,"byte_end":848937,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"int_macro","qualname":"::callbacks::ParseCallbacks::int_macro","value":"pub fn int_macro(&Self, &str, i64) -> Option<IntKind>","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" The integer kind an integer macro should have, given a name and the\n value of that macro, or `None` if you want the default to be chosen.\n","sig":null,"attributes":[{"value":"/ The integer kind an integer macro should have, given a name and the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848772,"byte_end":848843,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ value of that macro, or `None` if you want the default to be chosen.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848848,"byte_end":848920,"line_start":33,"line_end":33,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849209,"byte_end":849218,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"str_macro","qualname":"::callbacks::ParseCallbacks::str_macro","value":"pub fn str_macro(&Self, &str, &[u8])","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" This will be run on every string macro. The callback cannot influence the further\n treatment of the macro, but may use the value to generate additional code or configuration.\n","sig":null,"attributes":[{"value":"/ This will be run on every string macro. The callback cannot influence the further","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849016,"byte_end":849101,"line_start":38,"line_end":38,"column_start":5,"column_end":90}},{"value":"/ treatment of the macro, but may use the value to generate additional code or configuration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849106,"byte_end":849201,"line_start":39,"line_end":39,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849700,"byte_end":849710,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"func_macro","qualname":"::callbacks::ParseCallbacks::func_macro","value":"pub fn func_macro(&Self, &str, &[&[u8]])","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" This will be run on every function-like macro. The callback cannot\n influence the further treatment of the macro, but may use the value to\n generate additional code or configuration.","sig":null,"attributes":[{"value":"/ This will be run on every function-like macro. The callback cannot","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849262,"byte_end":849332,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ influence the further treatment of the macro, but may use the value to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849337,"byte_end":849411,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ generate additional code or configuration.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849416,"byte_end":849462,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849467,"byte_end":849470,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The first parameter represents the name and argument list (including the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849475,"byte_end":849551,"line_start":46,"line_end":46,"column_start":5,"column_end":81}},{"value":"/ parentheses) of the function-like macro. The second parameter represents","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849556,"byte_end":849632,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ the expansion of the macro as a sequence of tokens.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849637,"byte_end":849692,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849899,"byte_end":849920,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"enum_variant_behavior","qualname":"::callbacks::ParseCallbacks::enum_variant_behavior","value":"pub fn enum_variant_behavior(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<EnumVariantCustomBehavior>","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" This function should return whether, given an enum variant\n name, and value, this enum variant will forcibly be a constant.\n","sig":null,"attributes":[{"value":"/ This function should return whether, given an enum variant","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849757,"byte_end":849819,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ name, and value, this enum variant will forcibly be a constant.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":849824,"byte_end":849891,"line_start":52,"line_end":52,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850201,"byte_end":850218,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"enum_variant_name","qualname":"::callbacks::ParseCallbacks::enum_variant_name","value":"pub fn enum_variant_name(&Self, Option<&str>, &str, EnumVariantValue)\n-> Option<String>","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" Allows to rename an enum variant, replacing `_original_variant_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an enum variant, replacing `_original_variant_name`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850120,"byte_end":850193,"line_start":62,"line_end":62,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850469,"byte_end":850478,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"item_name","qualname":"::callbacks::ParseCallbacks::item_name","value":"pub fn item_name(&Self, &str) -> Option<String>","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" Allows to rename an item, replacing `_original_item_name`.\n","sig":null,"attributes":[{"value":"/ Allows to rename an item, replacing `_original_item_name`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850399,"byte_end":850461,"line_start":72,"line_end":72,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850654,"byte_end":850666,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"include_file","qualname":"::callbacks::ParseCallbacks::include_file","value":"pub fn include_file(&Self, &str)","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":" This will be called on every file inclusion, with the full path of the included file.\n","sig":null,"attributes":[{"value":"/ This will be called on every file inclusion, with the full path of the included file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":850557,"byte_end":850646,"line_start":77,"line_end":77,"column_start":5,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":3975},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":2596,"byte_end":2622,"line_start":91,"line_end":91,"column_start":11,"column_end":37},"name":"DEFAULT_ANON_FIELDS_PREFIX","qualname":"::DEFAULT_ANON_FIELDS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Default prefix for the anon fields.\n","sig":null,"attributes":[{"value":"/ Default prefix for the anon fields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":2546,"byte_end":2585,"line_start":90,"line_end":90,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5757},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":2930,"byte_end":2943,"line_start":101,"line_end":101,"column_start":16,"column_end":29},"name":"CodegenConfig","qualname":"::CodegenConfig","value":"CodegenConfig {  }","parent":null,"children":[{"krate":0,"index":5758}],"decl_id":null,"docs":" A type used to indicate which kind of items we have to generate.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5795},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3008,"byte_end":3017,"line_start":103,"line_end":103,"column_start":15,"column_end":24},"name":"FUNCTIONS","qualname":"::CodegenConfig::FUNCTIONS","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5796},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3081,"byte_end":3086,"line_start":105,"line_end":105,"column_start":15,"column_end":20},"name":"TYPES","qualname":"::CodegenConfig::TYPES","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate types.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5797},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3154,"byte_end":3158,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"name":"VARS","qualname":"::CodegenConfig::VARS","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate constants.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5798},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3224,"byte_end":3231,"line_start":109,"line_end":109,"column_start":15,"column_end":22},"name":"METHODS","qualname":"::CodegenConfig::METHODS","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate methods.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5799},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3301,"byte_end":3313,"line_start":111,"line_end":111,"column_start":15,"column_end":27},"name":"CONSTRUCTORS","qualname":"::CodegenConfig::CONSTRUCTORS","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate constructors\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5800},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3383,"byte_end":3394,"line_start":113,"line_end":113,"column_start":15,"column_end":26},"name":"DESTRUCTORS","qualname":"::CodegenConfig::DESTRUCTORS","value":"Self","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" Whether to generate destructors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3501,"byte_end":3510,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"functions","qualname":"<CodegenConfig>::functions","value":"pub fn functions(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if functions should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if functions should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3439,"byte_end":3489,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3644,"byte_end":3649,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"types","qualname":"<CodegenConfig>::types","value":"pub fn types(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if types should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if types should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3586,"byte_end":3632,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3783,"byte_end":3787,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"vars","qualname":"<CodegenConfig>::vars","value":"pub fn vars(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constants should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constants should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3721,"byte_end":3771,"line_start":128,"line_end":128,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3917,"byte_end":3924,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"methods","qualname":"<CodegenConfig>::methods","value":"pub fn methods(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if methds should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if methds should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3858,"byte_end":3905,"line_start":133,"line_end":133,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4063,"byte_end":4075,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"constructors","qualname":"<CodegenConfig>::constructors","value":"pub fn constructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if constructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if constructors should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3998,"byte_end":4051,"line_start":138,"line_end":138,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4218,"byte_end":4229,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"destructors","qualname":"<CodegenConfig>::destructors","value":"pub fn destructors(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if destructors should be generated.\n","sig":null,"attributes":[{"value":"/ Returns true if destructors should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4154,"byte_end":4206,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5869},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6309,"byte_end":6316,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872}],"decl_id":null,"docs":" Configure and generate Rust bindings for a C/C++ header.","sig":null,"attributes":[{"value":"/ Configure and generate Rust bindings for a C/C++ header.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4403,"byte_end":4463,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4464,"byte_end":4467,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This is the main entry point to the library.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4468,"byte_end":4516,"line_start":157,"line_end":157,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4517,"byte_end":4520,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4521,"byte_end":4534,"line_start":159,"line_end":159,"column_start":1,"column_end":14}},{"value":"/ use bindgen::builder;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4535,"byte_end":4560,"line_start":160,"line_end":160,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4561,"byte_end":4564,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ // Configure and generate bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4565,"byte_end":4604,"line_start":162,"line_end":162,"column_start":1,"column_end":40}},{"value":"/ let bindings = builder().header(\"path/to/input/header\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4605,"byte_end":4664,"line_start":163,"line_end":163,"column_start":1,"column_end":60}},{"value":"/     .whitelist_type(\"SomeCoolClass\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4665,"byte_end":4705,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/     .whitelist_function(\"do_some_cool_thing\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4706,"byte_end":4755,"line_start":165,"line_end":165,"column_start":1,"column_end":50}},{"value":"/     .generate()?;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4756,"byte_end":4777,"line_start":166,"line_end":166,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ // Write the generated bindings to an output file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4782,"byte_end":4836,"line_start":168,"line_end":168,"column_start":1,"column_end":55}},{"value":"/ bindings.write_to_file(\"path/to/output.rs\")?;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4837,"byte_end":4886,"line_start":169,"line_end":169,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4887,"byte_end":4894,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4895,"byte_end":4898,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Enums","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4899,"byte_end":4910,"line_start":172,"line_end":172,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4911,"byte_end":4914,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Bindgen can map C/C++ enums into Rust in different ways. The way bindgen maps enums depends on","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4915,"byte_end":5013,"line_start":174,"line_end":174,"column_start":1,"column_end":99}},{"value":"/ the pattern passed to several methods:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5014,"byte_end":5056,"line_start":175,"line_end":175,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5057,"byte_end":5060,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ 1. [`constified_enum_module()`](#method.constified_enum_module)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5061,"byte_end":5128,"line_start":177,"line_end":177,"column_start":1,"column_end":68}},{"value":"/ 2. [`bitfield_enum()`](#method.bitfield_enum)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5129,"byte_end":5178,"line_start":178,"line_end":178,"column_start":1,"column_end":50}},{"value":"/ 3. [`newtype_enum()`](#method.newtype_enum)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5179,"byte_end":5226,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/ 4. [`rustified_enum()`](#method.rustified_enum)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5227,"byte_end":5278,"line_start":180,"line_end":180,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5279,"byte_end":5282,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ For each C enum, bindgen tries to match the pattern in the following order:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5283,"byte_end":5362,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5363,"byte_end":5366,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ 1. Constified enum module","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5367,"byte_end":5396,"line_start":184,"line_end":184,"column_start":1,"column_end":30}},{"value":"/ 2. Bitfield enum","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5397,"byte_end":5417,"line_start":185,"line_end":185,"column_start":1,"column_end":21}},{"value":"/ 3. Newtype enum","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5418,"byte_end":5437,"line_start":186,"line_end":186,"column_start":1,"column_end":20}},{"value":"/ 4. Rustified enum","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5438,"byte_end":5459,"line_start":187,"line_end":187,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5460,"byte_end":5463,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ If none of the above patterns match, then bindgen will generate a set of Rust constants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5464,"byte_end":5556,"line_start":189,"line_end":189,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5557,"byte_end":5560,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Clang arguments","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5561,"byte_end":5582,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5583,"byte_end":5586,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Extra arguments can be passed to with clang:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5587,"byte_end":5635,"line_start":193,"line_end":193,"column_start":1,"column_end":49}},{"value":"/ 1. [`clang_arg()`](#method.clang_arg): takes a single argument","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5636,"byte_end":5702,"line_start":194,"line_end":194,"column_start":1,"column_end":67}},{"value":"/ 2. [`clang_args()`](#method.clang_args): takes an iterator of arguments","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5703,"byte_end":5778,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/ 3. `BINDGEN_EXTRA_CLANG_ARGS` environment variable: whitespace separate","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5779,"byte_end":5854,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/    environment variable of arguments","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5855,"byte_end":5895,"line_start":197,"line_end":197,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5896,"byte_end":5899,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Clang arguments specific to your crate should be added via the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5900,"byte_end":5966,"line_start":199,"line_end":199,"column_start":1,"column_end":67}},{"value":"/ `clang_arg()`/`clang_args()` methods.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":5967,"byte_end":6008,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6009,"byte_end":6012,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ End-users of the crate may need to set the `BINDGEN_EXTRA_CLANG_ARGS` environment variable to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6013,"byte_end":6110,"line_start":202,"line_end":202,"column_start":1,"column_end":98}},{"value":"/ add additional arguments. For example, to build against a different sysroot a user could set","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6111,"byte_end":6207,"line_start":203,"line_end":203,"column_start":1,"column_end":97}},{"value":"/ `BINDGEN_EXTRA_CLANG_ARGS` to `--sysroot=/path/to/sysroot`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6208,"byte_end":6271,"line_start":204,"line_end":204,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":3987},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6565,"byte_end":6572,"line_start":214,"line_end":214,"column_start":8,"column_end":15},"name":"builder","qualname":"::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`Builder`](./struct.Builder.html).\n","sig":null,"attributes":[{"value":"/ Construct a new [`Builder`](./struct.Builder.html).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6502,"byte_end":6557,"line_start":213,"line_end":213,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6709,"byte_end":6727,"line_start":220,"line_end":220,"column_start":12,"column_end":30},"name":"command_line_flags","qualname":"<Builder>::command_line_flags","value":"pub fn command_line_flags(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Generates the command line flags use for creating `Builder`.\n","sig":null,"attributes":[{"value":"/ Generates the command line flags use for creating `Builder`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6633,"byte_end":6697,"line_start":219,"line_end":219,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3991},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18742,"byte_end":18748,"line_start":563,"line_end":563,"column_start":12,"column_end":18},"name":"header","qualname":"<Builder>::header","value":"pub fn header<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an input C/C++ header to generate bindings for.","sig":null,"attributes":[{"value":"/ Add an input C/C++ header to generate bindings for.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18102,"byte_end":18157,"line_start":541,"line_end":541,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18162,"byte_end":18165,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate bindings to a single header:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18170,"byte_end":18231,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18236,"byte_end":18239,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18244,"byte_end":18257,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18262,"byte_end":18308,"line_start":546,"line_end":546,"column_start":5,"column_end":51}},{"value":"/     .header(\"input.h\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18313,"byte_end":18339,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18344,"byte_end":18363,"line_start":548,"line_end":548,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18368,"byte_end":18386,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18391,"byte_end":18398,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18403,"byte_end":18406,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Or you can invoke it multiple times to generate bindings to multiple","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18411,"byte_end":18483,"line_start":552,"line_end":552,"column_start":5,"column_end":77}},{"value":"/ headers:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18488,"byte_end":18500,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18505,"byte_end":18508,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18513,"byte_end":18526,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/ let bindings = bindgen::Builder::default()","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18531,"byte_end":18577,"line_start":556,"line_end":556,"column_start":5,"column_end":51}},{"value":"/     .header(\"first.h\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18582,"byte_end":18608,"line_start":557,"line_end":557,"column_start":5,"column_end":31}},{"value":"/     .header(\"second.h\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18613,"byte_end":18640,"line_start":558,"line_end":558,"column_start":5,"column_end":32}},{"value":"/     .header(\"third.h\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18645,"byte_end":18671,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"/     .generate()","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18676,"byte_end":18695,"line_start":560,"line_end":560,"column_start":5,"column_end":24}},{"value":"/     .unwrap();","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18700,"byte_end":18718,"line_start":561,"line_end":561,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18723,"byte_end":18730,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19011,"byte_end":19026,"line_start":571,"line_end":571,"column_start":12,"column_end":27},"name":"header_contents","qualname":"<Builder>::header_contents","value":"pub fn header_contents(Self, &str, &str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add `contents` as an input C/C++ header named `name`.","sig":null,"attributes":[{"value":"/ Add `contents` as an input C/C++ header named `name`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18872,"byte_end":18929,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18934,"byte_end":18937,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ The file `name` will be added to the clang arguments.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":18942,"byte_end":18999,"line_start":570,"line_end":570,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3994},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19289,"byte_end":19300,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"rust_target","qualname":"<Builder>::rust_target","value":"pub fn rust_target(Self, RustTarget) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rust target","sig":null,"attributes":[{"value":"/ Specify the rust target","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19188,"byte_end":19215,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19220,"byte_end":19223,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The default is the latest stable Rust version","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19228,"byte_end":19277,"line_start":579,"line_end":579,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19490,"byte_end":19512,"line_start":586,"line_end":586,"column_start":12,"column_end":34},"name":"disable_untagged_union","qualname":"<Builder>::disable_untagged_union","value":"pub fn disable_untagged_union(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable support for native Rust unions, if supported.\n","sig":null,"attributes":[{"value":"/ Disable support for native Rust unions, if supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19421,"byte_end":19478,"line_start":585,"line_end":585,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19714,"byte_end":19736,"line_start":593,"line_end":593,"column_start":12,"column_end":34},"name":"disable_header_comment","qualname":"<Builder>::disable_header_comment","value":"pub fn disable_header_comment(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disable insertion of bindgen's version identifier into generated\n bindings.\n","sig":null,"attributes":[{"value":"/ Disable insertion of bindgen's version identifier into generated","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19616,"byte_end":19684,"line_start":591,"line_end":591,"column_start":5,"column_end":73}},{"value":"/ bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19689,"byte_end":19702,"line_start":592,"line_end":592,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19878,"byte_end":19894,"line_start":599,"line_end":599,"column_start":12,"column_end":28},"name":"emit_ir_graphviz","qualname":"<Builder>::emit_ir_graphviz","value":"pub fn emit_ir_graphviz<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the output graphviz file.\n","sig":null,"attributes":[{"value":"/ Set the output graphviz file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":19833,"byte_end":19866,"line_start":598,"line_end":598,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20904,"byte_end":20921,"line_start":620,"line_end":620,"column_start":12,"column_end":29},"name":"generate_comments","qualname":"<Builder>::generate_comments","value":"pub fn generate_comments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether the generated bindings should contain documentation comments\n (docstrings) or not.","sig":null,"attributes":[{"value":"/ Whether the generated bindings should contain documentation comments","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20052,"byte_end":20124,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/ (docstrings) or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20129,"byte_end":20153,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20158,"byte_end":20161,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This ideally will always be true, but it may need to be false until we","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20166,"byte_end":20240,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ implement some processing on comments to work around issues as described","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20245,"byte_end":20321,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/ in [rust-bindgen issue","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20326,"byte_end":20352,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/ #426](https://github.com/rust-lang/rust-bindgen/issues/426).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20357,"byte_end":20421,"line_start":611,"line_end":611,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20426,"byte_end":20429,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Note that clang by default excludes comments from system headers, pass","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20434,"byte_end":20508,"line_start":613,"line_end":613,"column_start":5,"column_end":79}},{"value":"/ `-fretain-comments-from-system-headers` as","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20513,"byte_end":20559,"line_start":614,"line_end":614,"column_start":5,"column_end":51}},{"value":"/ [`clang_arg`][Builder::clang_arg] to include them. It can also be told","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20564,"byte_end":20638,"line_start":615,"line_end":615,"column_start":5,"column_end":79}},{"value":"/ to process all comments (not just documentation ones) using the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20643,"byte_end":20710,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"/ `-fparse-all-comments` flag. See [slides on clang comment parsing](","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20715,"byte_end":20786,"line_start":617,"line_end":617,"column_start":5,"column_end":76}},{"value":"/ https://llvm.org/devmtg/2012-11/Gribenko_CommentParsing.pdf) for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20791,"byte_end":20859,"line_start":618,"line_end":618,"column_start":5,"column_end":73}},{"value":"/ background and examples.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":20864,"byte_end":20892,"line_start":619,"line_end":619,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22405,"byte_end":22426,"line_start":652,"line_end":652,"column_start":12,"column_end":33},"name":"whitelist_recursively","qualname":"<Builder>::whitelist_recursively","value":"pub fn whitelist_recursively(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to whitelist recursively or not. Defaults to true.","sig":null,"attributes":[{"value":"/ Whether to whitelist recursively or not. Defaults to true.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21025,"byte_end":21087,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21092,"byte_end":21095,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Given that we have explicitly whitelisted the \"initiate_dance_party\"","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21100,"byte_end":21172,"line_start":627,"line_end":627,"column_start":5,"column_end":77}},{"value":"/ function in this C header:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21177,"byte_end":21207,"line_start":628,"line_end":628,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21212,"byte_end":21215,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21220,"byte_end":21228,"line_start":630,"line_end":630,"column_start":5,"column_end":13}},{"value":"/ typedef struct MoonBoots {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21233,"byte_end":21263,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     int bouncy_level;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21268,"byte_end":21293,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/ } MoonBoots;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21298,"byte_end":21314,"line_start":633,"line_end":633,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21319,"byte_end":21322,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ void initiate_dance_party(MoonBoots* boots);","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21327,"byte_end":21375,"line_start":635,"line_end":635,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21380,"byte_end":21387,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21392,"byte_end":21395,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ We would normally generate bindings to both the `initiate_dance_party`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21400,"byte_end":21474,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/ function and the `MoonBoots` struct that it transitively references. By","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21479,"byte_end":21554,"line_start":639,"line_end":639,"column_start":5,"column_end":80}},{"value":"/ configuring with `whitelist_recursively(false)`, `bindgen` will not emit","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21559,"byte_end":21635,"line_start":640,"line_end":640,"column_start":5,"column_end":81}},{"value":"/ bindings for anything except the explicitly whitelisted items, and there","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21640,"byte_end":21716,"line_start":641,"line_end":641,"column_start":5,"column_end":81}},{"value":"/ would be no emitted struct definition for `MoonBoots`. However, the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21721,"byte_end":21792,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ `initiate_dance_party` function would still reference `MoonBoots`!","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21797,"byte_end":21867,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21872,"byte_end":21875,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ **Disabling this feature will almost certainly cause `bindgen` to emit","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21880,"byte_end":21954,"line_start":645,"line_end":645,"column_start":5,"column_end":79}},{"value":"/ bindings that will not compile!** If you disable this feature, then it","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":21959,"byte_end":22033,"line_start":646,"line_end":646,"column_start":5,"column_end":79}},{"value":"/ is *your* responsibility to provide definitions for every type that is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22038,"byte_end":22112,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ referenced from an explicitly whitelisted item. One way to provide the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22117,"byte_end":22191,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"/ definitions is by using the [`Builder::raw_line`](#method.raw_line)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22196,"byte_end":22267,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/ method, another would be to define them in Rust and then `include!(...)`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22272,"byte_end":22348,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ the bindings immediately afterwards.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22353,"byte_end":22393,"line_start":651,"line_end":651,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22685,"byte_end":22702,"line_start":659,"line_end":659,"column_start":12,"column_end":29},"name":"objc_extern_crate","qualname":"<Builder>::objc_extern_crate","value":"pub fn objc_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate objc;` instead of `use objc;`\n in the prologue of the files generated from objective-c files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate objc;` instead of `use objc;`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22534,"byte_end":22603,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/ in the prologue of the files generated from objective-c files","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22608,"byte_end":22673,"line_start":658,"line_end":658,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22880,"byte_end":22894,"line_start":665,"line_end":665,"column_start":12,"column_end":26},"name":"generate_block","qualname":"<Builder>::generate_block","value":"pub fn generate_block(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate proper block signatures instead of void pointers.\n","sig":null,"attributes":[{"value":"/ Generate proper block signatures instead of void pointers.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22806,"byte_end":22868,"line_start":664,"line_end":664,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23148,"byte_end":23166,"line_start":672,"line_end":672,"column_start":12,"column_end":30},"name":"block_extern_crate","qualname":"<Builder>::block_extern_crate","value":"pub fn block_extern_crate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate `#[macro_use] extern crate block;` instead of `use block;`\n in the prologue of the files generated from apple block files\n","sig":null,"attributes":[{"value":"/ Generate `#[macro_use] extern crate block;` instead of `use block;`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":22995,"byte_end":23066,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ in the prologue of the files generated from apple block files","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23071,"byte_end":23136,"line_start":671,"line_end":671,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23648,"byte_end":23668,"line_start":684,"line_end":684,"column_start":12,"column_end":32},"name":"trust_clang_mangling","qualname":"<Builder>::trust_clang_mangling","value":"pub fn trust_clang_mangling(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to use the clang-provided name mangling. This is true by default\n and probably needed for C++ features.","sig":null,"attributes":[{"value":"/ Whether to use the clang-provided name mangling. This is true by default","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23271,"byte_end":23347,"line_start":677,"line_end":677,"column_start":5,"column_end":81}},{"value":"/ and probably needed for C++ features.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23352,"byte_end":23393,"line_start":678,"line_end":678,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23398,"byte_end":23401,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ However, some old libclang versions seem to return incorrect results in","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23406,"byte_end":23481,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ some cases for non-mangled functions, see [1], so we allow disabling it.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23486,"byte_end":23562,"line_start":681,"line_end":681,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23567,"byte_end":23570,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/rust-lang/rust-bindgen/issues/528","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23575,"byte_end":23636,"line_start":683,"line_end":683,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23932,"byte_end":23941,"line_start":692,"line_end":692,"column_start":12,"column_end":21},"name":"hide_type","qualname":"<Builder>::hide_type","value":"pub fn hide_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23770,"byte_end":23846,"line_start":689,"line_end":689,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23851,"byte_end":23865,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"Use blacklist_type instead\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":23870,"byte_end":23920,"line_start":691,"line_end":691,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24310,"byte_end":24324,"line_start":702,"line_end":702,"column_start":12,"column_end":26},"name":"blacklist_type","qualname":"<Builder>::blacklist_type","value":"pub fn blacklist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given type from the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Hide the given type from the generated bindings. Regular expressions are","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24028,"byte_end":24104,"line_start":696,"line_end":696,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24109,"byte_end":24123,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24128,"byte_end":24131,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ To blacklist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24136,"byte_end":24198,"line_start":699,"line_end":699,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24203,"byte_end":24245,"line_start":700,"line_end":700,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24250,"byte_end":24298,"line_start":701,"line_end":701,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24737,"byte_end":24755,"line_start":713,"line_end":713,"column_start":12,"column_end":30},"name":"blacklist_function","qualname":"<Builder>::blacklist_function","value":"pub fn blacklist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given function from the generated bindings. Regular expressions\n are supported.","sig":null,"attributes":[{"value":"/ Hide the given function from the generated bindings. Regular expressions","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24447,"byte_end":24523,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24528,"byte_end":24546,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24551,"byte_end":24554,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ To blacklist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24559,"byte_end":24625,"line_start":710,"line_end":710,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24630,"byte_end":24672,"line_start":711,"line_end":711,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24677,"byte_end":24725,"line_start":712,"line_end":712,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25230,"byte_end":25244,"line_start":725,"line_end":725,"column_start":12,"column_end":26},"name":"blacklist_item","qualname":"<Builder>::blacklist_item","value":"pub fn blacklist_item<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Hide the given item from the generated bindings, regardless of\n whether it's a type, function, module, etc. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Hide the given item from the generated bindings, regardless of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24882,"byte_end":24948,"line_start":718,"line_end":718,"column_start":5,"column_end":71}},{"value":"/ whether it's a type, function, module, etc. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":24953,"byte_end":25008,"line_start":719,"line_end":719,"column_start":5,"column_end":60}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25013,"byte_end":25043,"line_start":720,"line_end":720,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25048,"byte_end":25051,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ To blacklist items prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25056,"byte_end":25118,"line_start":722,"line_end":722,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25123,"byte_end":25165,"line_start":723,"line_end":723,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25170,"byte_end":25218,"line_start":724,"line_end":724,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25668,"byte_end":25679,"line_start":736,"line_end":736,"column_start":12,"column_end":23},"name":"opaque_type","qualname":"<Builder>::opaque_type","value":"pub fn opaque_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat the given type as opaque in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Treat the given type as opaque in the generated bindings. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25367,"byte_end":25436,"line_start":730,"line_end":730,"column_start":5,"column_end":74}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25441,"byte_end":25471,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25476,"byte_end":25479,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ To change types prefixed with \"mylib\" into opaque, use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25484,"byte_end":25556,"line_start":733,"line_end":733,"column_start":5,"column_end":77}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25561,"byte_end":25603,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25608,"byte_end":25656,"line_start":735,"line_end":735,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26036,"byte_end":26052,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"whitelisted_type","qualname":"<Builder>::whitelisted_type","value":"pub fn whitelisted_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.\n","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25797,"byte_end":25872,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25877,"byte_end":25950,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25955,"byte_end":25969,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"use whitelist_type instead\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":25974,"byte_end":26024,"line_start":744,"line_end":744,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26498,"byte_end":26512,"line_start":756,"line_end":756,"column_start":12,"column_end":26},"name":"whitelist_type","qualname":"<Builder>::whitelist_type","value":"pub fn whitelist_type<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given type so that it (and all types that it transitively\n refers to) appears in the generated bindings. Regular expressions are\n supported.","sig":null,"attributes":[{"value":"/ Whitelist the given type so that it (and all types that it transitively","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26139,"byte_end":26214,"line_start":749,"line_end":749,"column_start":5,"column_end":80}},{"value":"/ refers to) appears in the generated bindings. Regular expressions are","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26219,"byte_end":26292,"line_start":750,"line_end":750,"column_start":5,"column_end":78}},{"value":"/ supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26297,"byte_end":26311,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26316,"byte_end":26319,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ To whitelist types prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26324,"byte_end":26386,"line_start":753,"line_end":753,"column_start":5,"column_end":67}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26391,"byte_end":26433,"line_start":754,"line_end":754,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26438,"byte_end":26486,"line_start":755,"line_end":755,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27002,"byte_end":27020,"line_start":768,"line_end":768,"column_start":12,"column_end":30},"name":"whitelist_function","qualname":"<Builder>::whitelist_function","value":"pub fn whitelist_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given function so that it (and all types that it","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26635,"byte_end":26701,"line_start":761,"line_end":761,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26706,"byte_end":26776,"line_start":762,"line_end":762,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26781,"byte_end":26811,"line_start":763,"line_end":763,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26816,"byte_end":26819,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ To whitelist functions prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26824,"byte_end":26890,"line_start":765,"line_end":765,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26895,"byte_end":26937,"line_start":766,"line_end":766,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":26942,"byte_end":26990,"line_start":767,"line_end":767,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27311,"byte_end":27331,"line_start":777,"line_end":777,"column_start":12,"column_end":32},"name":"whitelisted_function","qualname":"<Builder>::whitelisted_function","value":"pub fn whitelisted_function<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given function.","sig":null,"attributes":[{"value":"/ Whitelist the given function.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27147,"byte_end":27180,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27185,"byte_end":27188,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_function instead.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27193,"byte_end":27240,"line_start":775,"line_end":775,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use whitelist_function instead\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27245,"byte_end":27299,"line_start":776,"line_end":776,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27789,"byte_end":27802,"line_start":788,"line_end":788,"column_start":12,"column_end":25},"name":"whitelist_var","qualname":"<Builder>::whitelist_var","value":"pub fn whitelist_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable so that it (and all types that it\n transitively refers to) appears in the generated bindings. Regular\n expressions are supported.","sig":null,"attributes":[{"value":"/ Whitelist the given variable so that it (and all types that it","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27422,"byte_end":27488,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/ transitively refers to) appears in the generated bindings. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27493,"byte_end":27563,"line_start":782,"line_end":782,"column_start":5,"column_end":75}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27568,"byte_end":27598,"line_start":783,"line_end":783,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27603,"byte_end":27606,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ To whitelist variables prefixed with \"mylib\" use `\"mylib_.*\"`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27611,"byte_end":27677,"line_start":785,"line_end":785,"column_start":5,"column_end":71}},{"value":"/ For more complicated expressions check","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27682,"byte_end":27724,"line_start":786,"line_end":786,"column_start":5,"column_end":47}},{"value":"/ [regex](https://docs.rs/regex/*/regex/) docs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27729,"byte_end":27777,"line_start":787,"line_end":787,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28078,"byte_end":28093,"line_start":797,"line_end":797,"column_start":12,"column_end":27},"name":"whitelisted_var","qualname":"<Builder>::whitelisted_var","value":"pub fn whitelisted_var<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Whitelist the given variable.","sig":null,"attributes":[{"value":"/ Whitelist the given variable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27924,"byte_end":27957,"line_start":793,"line_end":793,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27962,"byte_end":27965,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Deprecated: use whitelist_var instead.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":27970,"byte_end":28012,"line_start":795,"line_end":795,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"use whitelist_var instead\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28017,"byte_end":28066,"line_start":796,"line_end":796,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28246,"byte_end":28264,"line_start":802,"line_end":802,"column_start":12,"column_end":30},"name":"default_enum_style","qualname":"<Builder>::default_enum_style","value":"pub fn default_enum_style(Self, codegen::EnumVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for enums\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for enums","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28179,"byte_end":28234,"line_start":801,"line_end":801,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28782,"byte_end":28795,"line_start":818,"line_end":818,"column_start":12,"column_end":25},"name":"bitfield_enum","qualname":"<Builder>::bitfield_enum","value":"pub fn bitfield_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as being\n bitfield-like. Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as being","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28411,"byte_end":28481,"line_start":810,"line_end":810,"column_start":5,"column_end":75}},{"value":"/ bitfield-like. Regular expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28486,"byte_end":28539,"line_start":811,"line_end":811,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28544,"byte_end":28547,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a rust `enum`. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28552,"byte_end":28624,"line_start":813,"line_end":813,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28629,"byte_end":28659,"line_start":814,"line_end":814,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28664,"byte_end":28667,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ This is similar to the newtype enum style, but with the bitwise","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28672,"byte_end":28739,"line_start":816,"line_end":816,"column_start":5,"column_end":72}},{"value":"/ operators implemented.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28744,"byte_end":28770,"line_start":817,"line_end":817,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29165,"byte_end":29177,"line_start":828,"line_end":828,"column_start":12,"column_end":24},"name":"newtype_enum","qualname":"<Builder>::newtype_enum","value":"pub fn newtype_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a newtype.\n Regular expressions are supported.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a newtype.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28915,"byte_end":28990,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ Regular expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":28995,"byte_end":29033,"line_start":824,"line_end":824,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29038,"byte_end":29041,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate a type that isn't a Rust `enum`. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29046,"byte_end":29118,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29123,"byte_end":29153,"line_start":827,"line_end":827,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4032},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29719,"byte_end":29733,"line_start":842,"line_end":842,"column_start":12,"column_end":26},"name":"rustified_enum","qualname":"<Builder>::rustified_enum","value":"pub fn rustified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29296,"byte_end":29367,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"/ enum.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29372,"byte_end":29381,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29386,"byte_end":29389,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29394,"byte_end":29461,"line_start":836,"line_end":836,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29466,"byte_end":29496,"line_start":837,"line_end":837,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29501,"byte_end":29504,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29509,"byte_end":29568,"line_start":839,"line_end":839,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29573,"byte_end":29647,"line_start":840,"line_end":840,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29652,"byte_end":29707,"line_start":841,"line_end":841,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30316,"byte_end":30345,"line_start":856,"line_end":856,"column_start":12,"column_end":41},"name":"rustified_non_exhaustive_enum","qualname":"<Builder>::rustified_non_exhaustive_enum","value":"pub fn rustified_non_exhaustive_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a Rust\n enum with the `#[non_exhaustive]` attribute.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a Rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29854,"byte_end":29925,"line_start":847,"line_end":847,"column_start":5,"column_end":76}},{"value":"/ enum with the `#[non_exhaustive]` attribute.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29930,"byte_end":29978,"line_start":848,"line_end":848,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29983,"byte_end":29986,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate enums instead of constants. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":29991,"byte_end":30058,"line_start":850,"line_end":850,"column_start":5,"column_end":72}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30063,"byte_end":30093,"line_start":851,"line_end":851,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30098,"byte_end":30101,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ **Use this with caution**, creating this in unsafe code","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30106,"byte_end":30165,"line_start":853,"line_end":853,"column_start":5,"column_end":64}},{"value":"/ (including FFI) with an invalid value will invoke undefined behaviour.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30170,"byte_end":30244,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ You may want to use the newtype enum style instead.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30249,"byte_end":30304,"line_start":855,"line_end":855,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30645,"byte_end":30660,"line_start":866,"line_end":866,"column_start":12,"column_end":27},"name":"constified_enum","qualname":"<Builder>::constified_enum","value":"pub fn constified_enum<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that are not to be put into a module.\n","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30504,"byte_end":30577,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ constants that are not to be put into a module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30582,"byte_end":30633,"line_start":865,"line_end":865,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31062,"byte_end":31084,"line_start":876,"line_end":876,"column_start":12,"column_end":34},"name":"constified_enum_module","qualname":"<Builder>::constified_enum_module","value":"pub fn constified_enum_module<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given enum (or set of enums, if using a pattern) as a set of\n constants that should be put into a module.","sig":null,"attributes":[{"value":"/ Mark the given enum (or set of enums, if using a pattern) as a set of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30782,"byte_end":30855,"line_start":871,"line_end":871,"column_start":5,"column_end":78}},{"value":"/ constants that should be put into a module.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30860,"byte_end":30907,"line_start":872,"line_end":872,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30912,"byte_end":30915,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ This makes bindgen generate modules containing constants instead of","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30920,"byte_end":30991,"line_start":874,"line_end":874,"column_start":5,"column_end":76}},{"value":"/ just constants. Regular expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":30996,"byte_end":31050,"line_start":875,"line_end":875,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31269,"byte_end":31296,"line_start":882,"line_end":882,"column_start":12,"column_end":39},"name":"default_macro_constant_type","qualname":"<Builder>::default_macro_constant_type","value":"pub fn default_macro_constant_type(Self, codegen::MacroTypeVariation)\n-> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default type for macro constants\n","sig":null,"attributes":[{"value":"/ Set the default type for macro constants","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31213,"byte_end":31257,"line_start":881,"line_end":881,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4041},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31527,"byte_end":31546,"line_start":891,"line_end":891,"column_start":12,"column_end":31},"name":"default_alias_style","qualname":"<Builder>::default_alias_style","value":"pub fn default_alias_style(Self, codegen::AliasVariation) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the default style of code to generate for typedefs\n","sig":null,"attributes":[{"value":"/ Set the default style of code to generate for typedefs","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31457,"byte_end":31515,"line_start":890,"line_end":890,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32013,"byte_end":32023,"line_start":905,"line_end":905,"column_start":12,"column_end":22},"name":"type_alias","qualname":"<Builder>::type_alias","value":"pub fn type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n use regular Rust type aliasing.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31695,"byte_end":31770,"line_start":899,"line_end":899,"column_start":5,"column_end":80}},{"value":"/ use regular Rust type aliasing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31775,"byte_end":31810,"line_start":900,"line_end":900,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31815,"byte_end":31818,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ This is the default behavior and should be used if `default_alias_style`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31823,"byte_end":31899,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ was set to NewType or NewTypeDeref and you want to override it for a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31904,"byte_end":31976,"line_start":903,"line_end":903,"column_start":5,"column_end":77}},{"value":"/ set of typedefs.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":31981,"byte_end":32001,"line_start":904,"line_end":904,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32397,"byte_end":32411,"line_start":915,"line_end":915,"column_start":12,"column_end":26},"name":"new_type_alias","qualname":"<Builder>::new_type_alias","value":"pub fn new_type_alias<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct.","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32139,"byte_end":32214,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32219,"byte_end":32292,"line_start":911,"line_end":911,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32297,"byte_end":32329,"line_start":912,"line_end":912,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32334,"byte_end":32337,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ Used to enforce stricter type checking.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32342,"byte_end":32385,"line_start":914,"line_end":914,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32837,"byte_end":32857,"line_start":924,"line_end":924,"column_start":12,"column_end":32},"name":"new_type_alias_deref","qualname":"<Builder>::new_type_alias_deref","value":"pub fn new_type_alias_deref<T: AsRef<str>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Mark the given typedef alias (or set of aliases, if using a pattern) to\n be generated as a new type by having the aliased type be wrapped in a\n #[repr(transparent)] struct and also have an automatically generated\n impl's of `Deref` and `DerefMut` to their aliased type.\n","sig":null,"attributes":[{"value":"/ Mark the given typedef alias (or set of aliases, if using a pattern) to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32531,"byte_end":32606,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ be generated as a new type by having the aliased type be wrapped in a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32611,"byte_end":32684,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ #[repr(transparent)] struct and also have an automatically generated","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32689,"byte_end":32761,"line_start":922,"line_end":922,"column_start":5,"column_end":77}},{"value":"/ impl's of `Deref` and `DerefMut` to their aliased type.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32766,"byte_end":32825,"line_start":923,"line_end":923,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33112,"byte_end":33120,"line_start":931,"line_end":931,"column_start":12,"column_end":20},"name":"raw_line","qualname":"<Builder>::raw_line","value":"pub fn raw_line<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a string to prepend to the generated bindings. The string is passed\n through without any modification.\n","sig":null,"attributes":[{"value":"/ Add a string to prepend to the generated bindings. The string is passed","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":32983,"byte_end":33058,"line_start":929,"line_end":929,"column_start":5,"column_end":80}},{"value":"/ through without any modification.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33063,"byte_end":33100,"line_start":930,"line_end":930,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33305,"byte_end":33320,"line_start":937,"line_end":937,"column_start":12,"column_end":27},"name":"module_raw_line","qualname":"<Builder>::module_raw_line","value":"pub fn module_raw_line<T, U>(Self, T, U) -> Self where T: Into<String>,\nU: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given line to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given line to the beginning of module `mod`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33239,"byte_end":33293,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33676,"byte_end":33692,"line_start":951,"line_end":951,"column_start":12,"column_end":28},"name":"module_raw_lines","qualname":"<Builder>::module_raw_lines","value":"pub fn module_raw_lines<T, I>(Self, T, I) -> Self where T: Into<String>,\nI: IntoIterator, I::Item: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Add a given set of lines to the beginning of module `mod`.\n","sig":null,"attributes":[{"value":"/ Add a given set of lines to the beginning of module `mod`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":33602,"byte_end":33664,"line_start":950,"line_end":950,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34101,"byte_end":34110,"line_start":966,"line_end":966,"column_start":12,"column_end":21},"name":"clang_arg","qualname":"<Builder>::clang_arg","value":"pub fn clang_arg<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add an argument to be passed straight through to clang.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34030,"byte_end":34089,"line_start":965,"line_end":965,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34302,"byte_end":34312,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"clang_args","qualname":"<Builder>::clang_args","value":"pub fn clang_args<I>(Self, I) -> Builder where I: IntoIterator,\nI::Item: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add arguments to be passed straight through to clang.\n","sig":null,"attributes":[{"value":"/ Add arguments to be passed straight through to clang.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34233,"byte_end":34290,"line_start":971,"line_end":971,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34642,"byte_end":34655,"line_start":985,"line_end":985,"column_start":12,"column_end":25},"name":"emit_builtins","qualname":"<Builder>::emit_builtins","value":"pub fn emit_builtins(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit bindings for builtin definitions (for example `__builtin_va_list`)\n in the generated Rust.\n","sig":null,"attributes":[{"value":"/ Emit bindings for builtin definitions (for example `__builtin_va_list`)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34524,"byte_end":34599,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ in the generated Rust.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34604,"byte_end":34630,"line_start":984,"line_end":984,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4061},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34807,"byte_end":34824,"line_start":991,"line_end":991,"column_start":12,"column_end":29},"name":"no_convert_floats","qualname":"<Builder>::no_convert_floats","value":"pub fn no_convert_floats(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid converting floats to `f32`/`f64` by default.\n","sig":null,"attributes":[{"value":"/ Avoid converting floats to `f32`/`f64` by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34741,"byte_end":34795,"line_start":990,"line_end":990,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34975,"byte_end":34987,"line_start":997,"line_end":997,"column_start":12,"column_end":24},"name":"layout_tests","qualname":"<Builder>::layout_tests","value":"pub fn layout_tests(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether layout tests should be generated.\n","sig":null,"attributes":[{"value":"/ Set whether layout tests should be generated.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":34914,"byte_end":34963,"line_start":996,"line_end":996,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4063},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35184,"byte_end":35194,"line_start":1003,"line_end":1003,"column_start":12,"column_end":22},"name":"impl_debug","qualname":"<Builder>::impl_debug","value":"pub fn impl_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be implemented, if it can not be derived automatically.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35086,"byte_end":35172,"line_start":1002,"line_end":1002,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35393,"byte_end":35407,"line_start":1009,"line_end":1009,"column_start":12,"column_end":26},"name":"impl_partialeq","qualname":"<Builder>::impl_partialeq","value":"pub fn impl_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be implemented, if it can not be derived automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be implemented, if it can not be derived automatically.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35291,"byte_end":35381,"line_start":1008,"line_end":1008,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4065},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35572,"byte_end":35583,"line_start":1015,"line_end":1015,"column_start":12,"column_end":23},"name":"derive_copy","qualname":"<Builder>::derive_copy","value":"pub fn derive_copy(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Copy` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Copy` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35508,"byte_end":35560,"line_start":1014,"line_end":1014,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35746,"byte_end":35758,"line_start":1021,"line_end":1021,"column_start":12,"column_end":24},"name":"derive_debug","qualname":"<Builder>::derive_debug","value":"pub fn derive_debug(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Debug` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Debug` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35681,"byte_end":35734,"line_start":1020,"line_end":1020,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35924,"byte_end":35938,"line_start":1027,"line_end":1027,"column_start":12,"column_end":26},"name":"derive_default","qualname":"<Builder>::derive_default","value":"pub fn derive_default(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Default` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Default` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":35857,"byte_end":35912,"line_start":1026,"line_end":1026,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36103,"byte_end":36114,"line_start":1033,"line_end":1033,"column_start":12,"column_end":23},"name":"derive_hash","qualname":"<Builder>::derive_hash","value":"pub fn derive_hash(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Hash` should be derived by default.\n","sig":null,"attributes":[{"value":"/ Set whether `Hash` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36039,"byte_end":36091,"line_start":1032,"line_end":1032,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36410,"byte_end":36427,"line_start":1041,"line_end":1041,"column_start":12,"column_end":29},"name":"derive_partialord","qualname":"<Builder>::derive_partialord","value":"pub fn derive_partialord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialOrd` should be derived by default.\n If we don't compute partialord, we also cannot compute\n ord. Set the derive_ord to `false` when doit is `false`.\n","sig":null,"attributes":[{"value":"/ Set whether `PartialOrd` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36212,"byte_end":36270,"line_start":1038,"line_end":1038,"column_start":5,"column_end":63}},{"value":"/ If we don't compute partialord, we also cannot compute","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36275,"byte_end":36333,"line_start":1039,"line_end":1039,"column_start":5,"column_end":63}},{"value":"/ ord. Set the derive_ord to `false` when doit is `false`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36338,"byte_end":36398,"line_start":1040,"line_end":1040,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36787,"byte_end":36797,"line_start":1052,"line_end":1052,"column_start":12,"column_end":22},"name":"derive_ord","qualname":"<Builder>::derive_ord","value":"pub fn derive_ord(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Ord` should be derived by default.\n We can't compute `Ord` without computing `PartialOrd`,\n so we set the same option to derive_partialord.\n","sig":null,"attributes":[{"value":"/ Set whether `Ord` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36605,"byte_end":36656,"line_start":1049,"line_end":1049,"column_start":5,"column_end":56}},{"value":"/ We can't compute `Ord` without computing `PartialOrd`,","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36661,"byte_end":36719,"line_start":1050,"line_end":1050,"column_start":5,"column_end":63}},{"value":"/ so we set the same option to derive_partialord.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36724,"byte_end":36775,"line_start":1051,"line_end":1051,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37152,"byte_end":37168,"line_start":1062,"line_end":1062,"column_start":12,"column_end":28},"name":"derive_partialeq","qualname":"<Builder>::derive_partialeq","value":"pub fn derive_partialeq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `PartialEq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `PartialEq` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":36941,"byte_end":36998,"line_start":1058,"line_end":1058,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37003,"byte_end":37006,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ If we don't derive `PartialEq`, we also cannot derive `Eq`, so deriving","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37011,"byte_end":37086,"line_start":1060,"line_end":1060,"column_start":5,"column_end":80}},{"value":"/ `Eq` is also disabled when `doit` is `false`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37091,"byte_end":37140,"line_start":1061,"line_end":1061,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37548,"byte_end":37557,"line_start":1074,"line_end":1074,"column_start":12,"column_end":21},"name":"derive_eq","qualname":"<Builder>::derive_eq","value":"pub fn derive_eq(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `Eq` should be derived by default.","sig":null,"attributes":[{"value":"/ Set whether `Eq` should be derived by default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37344,"byte_end":37394,"line_start":1070,"line_end":1070,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37399,"byte_end":37402,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ We can't derive `Eq` without also deriving `PartialEq`, so we also","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37407,"byte_end":37477,"line_start":1072,"line_end":1072,"column_start":5,"column_end":75}},{"value":"/ enable deriving `PartialEq` when `doit` is `true`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37482,"byte_end":37536,"line_start":1073,"line_end":1073,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37830,"byte_end":37841,"line_start":1084,"line_end":1084,"column_start":12,"column_end":23},"name":"time_phases","qualname":"<Builder>::time_phases","value":"pub fn time_phases(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not to time bindgen phases, and print information to\n stderr.\n","sig":null,"attributes":[{"value":"/ Set whether or not to time bindgen phases, and print information to","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37731,"byte_end":37802,"line_start":1082,"line_end":1082,"column_start":5,"column_end":76}},{"value":"/ stderr.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37807,"byte_end":37818,"line_start":1083,"line_end":1083,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37970,"byte_end":37984,"line_start":1090,"line_end":1090,"column_start":12,"column_end":26},"name":"emit_clang_ast","qualname":"<Builder>::emit_clang_ast","value":"pub fn emit_clang_ast(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit Clang AST.\n","sig":null,"attributes":[{"value":"/ Emit Clang AST.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":37939,"byte_end":37958,"line_start":1089,"line_end":1089,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38094,"byte_end":38101,"line_start":1096,"line_end":1096,"column_start":12,"column_end":19},"name":"emit_ir","qualname":"<Builder>::emit_ir","value":"pub fn emit_ir(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Emit IR.\n","sig":null,"attributes":[{"value":"/ Emit IR.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38070,"byte_end":38082,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38224,"byte_end":38245,"line_start":1102,"line_end":1102,"column_start":12,"column_end":33},"name":"enable_cxx_namespaces","qualname":"<Builder>::enable_cxx_namespaces","value":"pub fn enable_cxx_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Enable C++ namespaces.\n","sig":null,"attributes":[{"value":"/ Enable C++ namespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38186,"byte_end":38212,"line_start":1101,"line_end":1101,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38662,"byte_end":38697,"line_start":1114,"line_end":1114,"column_start":12,"column_end":47},"name":"enable_function_attribute_detection","qualname":"<Builder>::enable_function_attribute_detection","value":"pub fn enable_function_attribute_detection(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable detecting must_use attributes on C functions.","sig":null,"attributes":[{"value":"/ Enable detecting must_use attributes on C functions.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38344,"byte_end":38400,"line_start":1107,"line_end":1107,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38405,"byte_end":38408,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This is quite slow in some cases (see #1465), so it's disabled by","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38413,"byte_end":38482,"line_start":1109,"line_end":1109,"column_start":5,"column_end":74}},{"value":"/ default.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38487,"byte_end":38499,"line_start":1110,"line_end":1110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38504,"byte_end":38507,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ Note that for this to do something meaningful for now at least, the rust","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38512,"byte_end":38588,"line_start":1112,"line_end":1112,"column_start":5,"column_end":81}},{"value":"/ target version has to have support for `#[must_use]`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38593,"byte_end":38650,"line_start":1113,"line_end":1113,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39312,"byte_end":39336,"line_start":1132,"line_end":1132,"column_start":12,"column_end":36},"name":"disable_name_namespacing","qualname":"<Builder>::disable_name_namespacing","value":"pub fn disable_name_namespacing(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable name auto-namespacing.","sig":null,"attributes":[{"value":"/ Disable name auto-namespacing.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38807,"byte_end":38841,"line_start":1119,"line_end":1119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38846,"byte_end":38849,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ By default, bindgen mangles names like `foo::bar::Baz` to look like","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38854,"byte_end":38925,"line_start":1121,"line_end":1121,"column_start":5,"column_end":76}},{"value":"/ `foo_bar_Baz` instead of just `Baz`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38930,"byte_end":38970,"line_start":1122,"line_end":1122,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38975,"byte_end":38978,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ This method disables that behavior.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":38983,"byte_end":39022,"line_start":1124,"line_end":1124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39027,"byte_end":39030,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Note that this intentionally does not change the names used for","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39035,"byte_end":39102,"line_start":1126,"line_end":1126,"column_start":5,"column_end":72}},{"value":"/ whitelisting and blacklisting, which should still be mangled with the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39107,"byte_end":39180,"line_start":1127,"line_end":1127,"column_start":5,"column_end":78}},{"value":"/ namespaces.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39185,"byte_end":39200,"line_start":1128,"line_end":1128,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39205,"byte_end":39208,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ Note, also, that this option may cause bindgen to generate duplicate","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39213,"byte_end":39285,"line_start":1130,"line_end":1130,"column_start":5,"column_end":77}},{"value":"/ names.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39290,"byte_end":39300,"line_start":1131,"line_end":1131,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40079,"byte_end":40107,"line_start":1155,"line_end":1155,"column_start":12,"column_end":40},"name":"disable_nested_struct_naming","qualname":"<Builder>::disable_nested_struct_naming","value":"pub fn disable_nested_struct_naming(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Disable nested struct naming.","sig":null,"attributes":[{"value":"/ Disable nested struct naming.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39438,"byte_end":39471,"line_start":1137,"line_end":1137,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39476,"byte_end":39479,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ The following structs have different names for C and C++. In case of C","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39484,"byte_end":39558,"line_start":1139,"line_end":1139,"column_start":5,"column_end":79}},{"value":"/ they are visible as `foo` and `bar`. In case of C++ they are visible as","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39563,"byte_end":39638,"line_start":1140,"line_end":1140,"column_start":5,"column_end":80}},{"value":"/ `foo` and `foo::bar`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39643,"byte_end":39668,"line_start":1141,"line_end":1141,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39673,"byte_end":39676,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ ```c","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39681,"byte_end":39689,"line_start":1143,"line_end":1143,"column_start":5,"column_end":13}},{"value":"/ struct foo {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39694,"byte_end":39710,"line_start":1144,"line_end":1144,"column_start":5,"column_end":21}},{"value":"/     struct bar {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39715,"byte_end":39735,"line_start":1145,"line_end":1145,"column_start":5,"column_end":25}},{"value":"/     } b;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39740,"byte_end":39752,"line_start":1146,"line_end":1146,"column_start":5,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39757,"byte_end":39763,"line_start":1147,"line_end":1147,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39768,"byte_end":39775,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39780,"byte_end":39783,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ Bindgen wants to avoid duplicate names by default so it follows C++ naming","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39788,"byte_end":39866,"line_start":1150,"line_end":1150,"column_start":5,"column_end":83}},{"value":"/ and it generates `foo`/`foo_bar` instead of just `foo`/`bar`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39871,"byte_end":39936,"line_start":1151,"line_end":1151,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39941,"byte_end":39944,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This method disables this behavior and it is indented to be used only","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":39949,"byte_end":40022,"line_start":1153,"line_end":1153,"column_start":5,"column_end":78}},{"value":"/ for headers that were written for C.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40027,"byte_end":40067,"line_start":1154,"line_end":1154,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41384,"byte_end":41414,"line_start":1188,"line_end":1188,"column_start":12,"column_end":42},"name":"conservative_inline_namespaces","qualname":"<Builder>::conservative_inline_namespaces","value":"pub fn conservative_inline_namespaces(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Treat inline namespaces conservatively.","sig":null,"attributes":[{"value":"/ Treat inline namespaces conservatively.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40213,"byte_end":40256,"line_start":1160,"line_end":1160,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40261,"byte_end":40264,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ This is tricky, because in C++ is technically legal to override an item","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40269,"byte_end":40344,"line_start":1162,"line_end":1162,"column_start":5,"column_end":80}},{"value":"/ defined in an inline namespace:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40349,"byte_end":40384,"line_start":1163,"line_end":1163,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40389,"byte_end":40392,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ ```cpp","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40397,"byte_end":40407,"line_start":1165,"line_end":1165,"column_start":5,"column_end":15}},{"value":"/ inline namespace foo {","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40412,"byte_end":40438,"line_start":1166,"line_end":1166,"column_start":5,"column_end":31}},{"value":"/     using Bar = int;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40443,"byte_end":40467,"line_start":1167,"line_end":1167,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40472,"byte_end":40477,"line_start":1168,"line_end":1168,"column_start":5,"column_end":10}},{"value":"/ using Bar = long;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40482,"byte_end":40503,"line_start":1169,"line_end":1169,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40508,"byte_end":40515,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40520,"byte_end":40523,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Even though referencing `Bar` is a compiler error.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40528,"byte_end":40582,"line_start":1172,"line_end":1172,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40587,"byte_end":40590,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ We want to support this (arguably esoteric) use case, but we don't want","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40595,"byte_end":40670,"line_start":1174,"line_end":1174,"column_start":5,"column_end":80}},{"value":"/ to make the rest of bindgen users pay an usability penalty for that.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40675,"byte_end":40747,"line_start":1175,"line_end":1175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40752,"byte_end":40755,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ To support this, we need to keep all the inline namespaces around, but","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40760,"byte_end":40834,"line_start":1177,"line_end":1177,"column_start":5,"column_end":79}},{"value":"/ then bindgen usage is a bit more difficult, because you cannot","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40839,"byte_end":40905,"line_start":1178,"line_end":1178,"column_start":5,"column_end":71}},{"value":"/ reference, e.g., `std::string` (you'd need to use the proper inline","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40910,"byte_end":40981,"line_start":1179,"line_end":1179,"column_start":5,"column_end":76}},{"value":"/ namespace).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":40986,"byte_end":41001,"line_start":1180,"line_end":1180,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41006,"byte_end":41009,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ We could complicate a lot of the logic to detect name collisions, and if","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41014,"byte_end":41090,"line_start":1182,"line_end":1182,"column_start":5,"column_end":81}},{"value":"/ not detected generate a `pub use inline_ns::*` or something like that.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41095,"byte_end":41169,"line_start":1183,"line_end":1183,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41174,"byte_end":41177,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ That's probably something we can do if we see this option is needed in a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41182,"byte_end":41258,"line_start":1185,"line_end":1185,"column_start":5,"column_end":81}},{"value":"/ lot of cases, to improve it's usability, but my guess is that this is","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41263,"byte_end":41336,"line_start":1186,"line_end":1186,"column_start":5,"column_end":78}},{"value":"/ not going to be too useful.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41341,"byte_end":41372,"line_start":1187,"line_end":1187,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41804,"byte_end":41829,"line_start":1198,"line_end":1198,"column_start":12,"column_end":37},"name":"generate_inline_functions","qualname":"<Builder>::generate_inline_functions","value":"pub fn generate_inline_functions(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether inline functions should be generated or not.","sig":null,"attributes":[{"value":"/ Whether inline functions should be generated or not.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41522,"byte_end":41578,"line_start":1193,"line_end":1193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41583,"byte_end":41586,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ Note that they will usually not work. However you can use","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41591,"byte_end":41652,"line_start":1195,"line_end":1195,"column_start":5,"column_end":66}},{"value":"/ `-fkeep-inline-functions` or `-fno-inline-functions` if you are","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41657,"byte_end":41724,"line_start":1196,"line_end":1196,"column_start":5,"column_end":72}},{"value":"/ responsible of compiling the library to make them callable.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41729,"byte_end":41792,"line_start":1197,"line_end":1197,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41974,"byte_end":41990,"line_start":1204,"line_end":1204,"column_start":12,"column_end":28},"name":"ignore_functions","qualname":"<Builder>::ignore_functions","value":"pub fn ignore_functions(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore functions.\n","sig":null,"attributes":[{"value":"/ Ignore functions.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":41941,"byte_end":41962,"line_start":1203,"line_end":1203,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42139,"byte_end":42153,"line_start":1210,"line_end":1210,"column_start":12,"column_end":26},"name":"ignore_methods","qualname":"<Builder>::ignore_methods","value":"pub fn ignore_methods(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Ignore methods.\n","sig":null,"attributes":[{"value":"/ Ignore methods.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42108,"byte_end":42127,"line_start":1209,"line_end":1209,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42429,"byte_end":42442,"line_start":1217,"line_end":1217,"column_start":12,"column_end":25},"name":"unstable_rust","qualname":"<Builder>::unstable_rust","value":"pub fn unstable_rust(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Avoid generating any unstable Rust, such as Rust unions, in the generated bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42269,"byte_end":42356,"line_start":1215,"line_end":1215,"column_start":5,"column_end":92}},{"value":"deprecated(note = \"please use `rust_target` instead\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42361,"byte_end":42417,"line_start":1216,"line_end":1216,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4085},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42716,"byte_end":42724,"line_start":1227,"line_end":1227,"column_start":12,"column_end":20},"name":"use_core","qualname":"<Builder>::use_core","value":"pub fn use_core(Self) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use core instead of libstd in the generated bindings.\n","sig":null,"attributes":[{"value":"/ Use core instead of libstd in the generated bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42647,"byte_end":42704,"line_start":1226,"line_end":1226,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42893,"byte_end":42906,"line_start":1233,"line_end":1233,"column_start":12,"column_end":25},"name":"ctypes_prefix","qualname":"<Builder>::ctypes_prefix","value":"pub fn ctypes_prefix<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the raw types instead of `::std::os::raw`.\n","sig":null,"attributes":[{"value":"/ Use the given prefix for the raw types instead of `::std::os::raw`.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":42810,"byte_end":42881,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43097,"byte_end":43115,"line_start":1239,"line_end":1239,"column_start":12,"column_end":30},"name":"anon_fields_prefix","qualname":"<Builder>::anon_fields_prefix","value":"pub fn anon_fields_prefix<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Use the given prefix for the anon fields.\n","sig":null,"attributes":[{"value":"/ Use the given prefix for the anon fields.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43040,"byte_end":43085,"line_start":1238,"line_end":1238,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43402,"byte_end":43417,"line_start":1246,"line_end":1246,"column_start":12,"column_end":27},"name":"parse_callbacks","qualname":"<Builder>::parse_callbacks","value":"pub fn parse_callbacks(Self, Box<dyn callbacks::ParseCallbacks>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows configuring types in different situations, see the\n [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.\n","sig":null,"attributes":[{"value":"/ Allows configuring types in different situations, see the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43248,"byte_end":43309,"line_start":1244,"line_end":1244,"column_start":5,"column_end":66}},{"value":"/ [`ParseCallbacks`](./callbacks/trait.ParseCallbacks.html) documentation.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43314,"byte_end":43390,"line_start":1245,"line_end":1245,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43677,"byte_end":43696,"line_start":1256,"line_end":1256,"column_start":12,"column_end":31},"name":"with_codegen_config","qualname":"<Builder>::with_codegen_config","value":"pub fn with_codegen_config(Self, CodegenConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Choose what to generate using a\n [`CodegenConfig`](./struct.CodegenConfig.html).\n","sig":null,"attributes":[{"value":"/ Choose what to generate using a","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43574,"byte_end":43609,"line_start":1254,"line_end":1254,"column_start":5,"column_end":40}},{"value":"/ [`CodegenConfig`](./struct.CodegenConfig.html).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43614,"byte_end":43665,"line_start":1255,"line_end":1255,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4092},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43874,"byte_end":43894,"line_start":1262,"line_end":1262,"column_start":12,"column_end":32},"name":"detect_include_paths","qualname":"<Builder>::detect_include_paths","value":"pub fn detect_include_paths(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to detect include paths using clang_sys.\n","sig":null,"attributes":[{"value":"/ Whether to detect include paths using clang_sys.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":43810,"byte_end":43862,"line_start":1261,"line_end":1261,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44071,"byte_end":44088,"line_start":1268,"line_end":1268,"column_start":12,"column_end":29},"name":"prepend_enum_name","qualname":"<Builder>::prepend_enum_name","value":"pub fn prepend_enum_name(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prepend the enum name to constant or newtype variants.\n","sig":null,"attributes":[{"value":"/ Prepend the enum name to constant or newtype variants.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44001,"byte_end":44059,"line_start":1267,"line_end":1267,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44275,"byte_end":44290,"line_start":1274,"line_end":1274,"column_start":12,"column_end":27},"name":"size_t_is_usize","qualname":"<Builder>::size_t_is_usize","value":"pub fn size_t_is_usize(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `size_t` should be translated to `usize` automatically.\n","sig":null,"attributes":[{"value":"/ Set whether `size_t` should be translated to `usize` automatically.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44192,"byte_end":44263,"line_start":1273,"line_end":1273,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44461,"byte_end":44477,"line_start":1280,"line_end":1280,"column_start":12,"column_end":28},"name":"rustfmt_bindings","qualname":"<Builder>::rustfmt_bindings","value":"pub fn rustfmt_bindings(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether rustfmt should format the generated bindings.\n","sig":null,"attributes":[{"value":"/ Set whether rustfmt should format the generated bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44388,"byte_end":44449,"line_start":1279,"line_end":1279,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44657,"byte_end":44671,"line_start":1286,"line_end":1286,"column_start":12,"column_end":26},"name":"record_matches","qualname":"<Builder>::record_matches","value":"pub fn record_matches(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether we should record matched items in our regex sets.\n","sig":null,"attributes":[{"value":"/ Set whether we should record matched items in our regex sets.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44580,"byte_end":44645,"line_start":1285,"line_end":1285,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44900,"byte_end":44926,"line_start":1293,"line_end":1293,"column_start":12,"column_end":38},"name":"rustfmt_configuration_file","qualname":"<Builder>::rustfmt_configuration_file","value":"pub fn rustfmt_configuration_file(Self, Option<PathBuf>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt\n options are used.\n","sig":null,"attributes":[{"value":"/ Set the absolute path to the rustfmt configuration file, if None, the standard rustfmt","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44772,"byte_end":44862,"line_start":1291,"line_end":1291,"column_start":5,"column_end":95}},{"value":"/ options are used.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":44867,"byte_end":44888,"line_start":1292,"line_end":1292,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":45179,"byte_end":45191,"line_start":1300,"line_end":1300,"column_start":12,"column_end":24},"name":"with_rustfmt","qualname":"<Builder>::with_rustfmt","value":"pub fn with_rustfmt<P: Into<PathBuf>>(Self, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an explicit path to rustfmt, to be used when rustfmt is enabled.\n","sig":null,"attributes":[{"value":"/ Sets an explicit path to rustfmt, to be used when rustfmt is enabled.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":45094,"byte_end":45167,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":45397,"byte_end":45405,"line_start":1306,"line_end":1306,"column_start":12,"column_end":20},"name":"generate","qualname":"<Builder>::generate","value":"pub fn generate(Self) -> Result<Bindings, ()>","parent":null,"children":[],"decl_id":null,"docs":" Generate the Rust bindings using the options built up thus far.\n","sig":null,"attributes":[{"value":"/ Generate the Rust bindings using the options built up thus far.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":45318,"byte_end":45385,"line_start":1305,"line_end":1305,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46863,"byte_end":46886,"line_start":1343,"line_end":1343,"column_start":12,"column_end":35},"name":"dump_preprocessed_input","qualname":"<Builder>::dump_preprocessed_input","value":"pub fn dump_preprocessed_input(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Preprocess and dump the input header files to disk.","sig":null,"attributes":[{"value":"/ Preprocess and dump the input header files to disk.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46606,"byte_end":46661,"line_start":1338,"line_end":1338,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46666,"byte_end":46669,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ This is useful when debugging bindgen, using C-Reduce, or when filing","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46674,"byte_end":46747,"line_start":1340,"line_end":1340,"column_start":5,"column_end":78}},{"value":"/ issues. The resulting file will be named something like `__bindgen.i` or","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46752,"byte_end":46828,"line_start":1341,"line_end":1341,"column_start":5,"column_end":81}},{"value":"/ `__bindgen.ii`","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":46833,"byte_end":46851,"line_start":1342,"line_end":1342,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49623,"byte_end":49635,"line_start":1431,"line_end":1431,"column_start":12,"column_end":24},"name":"no_partialeq","qualname":"<Builder>::no_partialeq","value":"pub fn no_partialeq<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `PartialEq` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `PartialEq` for a given type. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49522,"byte_end":49576,"line_start":1429,"line_end":1429,"column_start":5,"column_end":59}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49581,"byte_end":49611,"line_start":1430,"line_end":1430,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49864,"byte_end":49871,"line_start":1438,"line_end":1438,"column_start":12,"column_end":19},"name":"no_copy","qualname":"<Builder>::no_copy","value":"pub fn no_copy<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Copy` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Copy` for a given type. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49768,"byte_end":49817,"line_start":1436,"line_end":1436,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49822,"byte_end":49852,"line_start":1437,"line_end":1437,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50093,"byte_end":50101,"line_start":1445,"line_end":1445,"column_start":12,"column_end":20},"name":"no_debug","qualname":"<Builder>::no_debug","value":"pub fn no_debug<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Debug` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Debug` for a given type. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":49996,"byte_end":50046,"line_start":1443,"line_end":1443,"column_start":5,"column_end":55}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50051,"byte_end":50081,"line_start":1444,"line_end":1444,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50331,"byte_end":50341,"line_start":1452,"line_end":1452,"column_start":12,"column_end":22},"name":"no_default","qualname":"<Builder>::no_default","value":"pub fn no_default<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't derive/impl `Default` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive/impl `Default` for a given type. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50227,"byte_end":50284,"line_start":1450,"line_end":1450,"column_start":5,"column_end":62}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50289,"byte_end":50319,"line_start":1451,"line_end":1451,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50565,"byte_end":50572,"line_start":1459,"line_end":1459,"column_start":12,"column_end":19},"name":"no_hash","qualname":"<Builder>::no_hash","value":"pub fn no_hash<T: Into<String>>(Self, T) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Don't derive `Hash` for a given type. Regular\n expressions are supported.\n","sig":null,"attributes":[{"value":"/ Don't derive `Hash` for a given type. Regular","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50469,"byte_end":50518,"line_start":1457,"line_end":1457,"column_start":5,"column_end":54}},{"value":"/ expressions are supported.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50523,"byte_end":50553,"line_start":1458,"line_end":1458,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4116},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50804,"byte_end":50831,"line_start":1465,"line_end":1465,"column_start":12,"column_end":39},"name":"array_pointers_in_arguments","qualname":"<Builder>::array_pointers_in_arguments","value":"pub fn array_pointers_in_arguments(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)\n","sig":null,"attributes":[{"value":"/ Set whether `arr[size]` should be treated as `*mut T` or `*mut [T; size]` (same for mut)","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50700,"byte_end":50792,"line_start":1464,"line_end":1464,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50992,"byte_end":51015,"line_start":1471,"line_end":1471,"column_start":12,"column_end":35},"name":"wasm_import_module_name","qualname":"<Builder>::wasm_import_module_name","value":"pub fn wasm_import_module_name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the wasm import module name\n","sig":null,"attributes":[{"value":"/ Set the wasm import module name","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":50945,"byte_end":50980,"line_start":1470,"line_end":1470,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":51289,"byte_end":51309,"line_start":1480,"line_end":1480,"column_start":12,"column_end":32},"name":"dynamic_library_name","qualname":"<Builder>::dynamic_library_name","value":"pub fn dynamic_library_name<T: Into<String>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the dynamic library name if we are generating bindings for a shared library.\n","sig":null,"attributes":[{"value":"/ Specify the dynamic library name if we are generating bindings for a shared library.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":51189,"byte_end":51277,"line_start":1479,"line_end":1479,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":5969},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":67273,"byte_end":67281,"line_start":1938,"line_end":1938,"column_start":12,"column_end":20},"name":"Bindings","qualname":"::Bindings","value":"Bindings {  }","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971}],"decl_id":null,"docs":" Generated Rust bindings.\n","sig":null,"attributes":[{"value":"/ Generated Rust bindings.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":67216,"byte_end":67244,"line_start":1936,"line_end":1936,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":74407,"byte_end":74416,"line_start":2157,"line_end":2157,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Bindings>::to_string","value":"pub fn to_string(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert these bindings into source text (with raw lines prepended).\n","sig":null,"attributes":[{"value":"/ Convert these bindings into source text (with raw lines prepended).","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":74324,"byte_end":74395,"line_start":2156,"line_end":2156,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":74760,"byte_end":74773,"line_start":2166,"line_end":2166,"column_start":12,"column_end":25},"name":"write_to_file","qualname":"<Bindings>::write_to_file","value":"pub fn write_to_file<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to a file.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to a file.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":74698,"byte_end":74748,"line_start":2165,"line_end":2165,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":75118,"byte_end":75123,"line_start":2177,"line_end":2177,"column_start":12,"column_end":17},"name":"write","qualname":"<Bindings>::write","value":"pub fn write<'a>(&Self, Box<dyn Write + 'a>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write these bindings as source text to the given `Write`able.\n","sig":null,"attributes":[{"value":"/ Write these bindings as source text to the given `Write`able.","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":75041,"byte_end":75106,"line_start":2176,"line_end":2176,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":5975},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81484,"byte_end":81496,"line_start":2375,"line_end":2375,"column_start":12,"column_end":24},"name":"ClangVersion","qualname":"::ClangVersion","value":"ClangVersion { parsed, full }","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5977}],"decl_id":null,"docs":" Extracted Clang version data\n","sig":null,"attributes":[{"value":"/ Extracted Clang version data","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81423,"byte_end":81455,"line_start":2373,"line_end":2373,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81565,"byte_end":81571,"line_start":2377,"line_end":2377,"column_start":9,"column_end":15},"name":"parsed","qualname":"::ClangVersion::parsed","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":5975},"children":[],"decl_id":null,"docs":" Major and minor semver, if parsing was successful\n","sig":null,"attributes":[{"value":"/ Major and minor semver, if parsing was successful","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81503,"byte_end":81556,"line_start":2376,"line_end":2376,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5977},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81629,"byte_end":81633,"line_start":2379,"line_end":2379,"column_start":9,"column_end":13},"name":"full","qualname":"::ClangVersion::full","value":"std::string::String","parent":{"krate":0,"index":5975},"children":[],"decl_id":null,"docs":" full version string\n","sig":null,"attributes":[{"value":"/ full version string","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81597,"byte_end":81620,"line_start":2378,"line_end":2378,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":4163},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81719,"byte_end":81732,"line_start":2383,"line_end":2383,"column_start":8,"column_end":21},"name":"clang_version","qualname":"::clang_version","value":"pub fn clang_version() -> ClangVersion","parent":null,"children":[],"decl_id":null,"docs":" Get the major and the minor semver numbers of Clang's version\n","sig":null,"attributes":[{"value":"/ Get the major and the minor semver numbers of Clang's version","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":81646,"byte_end":81711,"line_start":2382,"line_end":2382,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5980},"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83132,"byte_end":83146,"line_start":2428,"line_end":2428,"column_start":12,"column_end":26},"name":"CargoCallbacks","qualname":"::CargoCallbacks","value":"","parent":null,"children":[],"decl_id":null,"docs":" A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed\n line","sig":null,"attributes":[{"value":"/ A ParseCallbacks implementation that will act on file includes by echoing a rerun-if-changed","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82628,"byte_end":82724,"line_start":2415,"line_end":2415,"column_start":1,"column_end":97}},{"value":"/ line","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82725,"byte_end":82733,"line_start":2416,"line_end":2416,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82734,"byte_end":82737,"line_start":2417,"line_end":2417,"column_start":1,"column_end":4}},{"value":"/ When running in side a `build.rs` script, this can be used to make cargo invalidate the","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82738,"byte_end":82829,"line_start":2418,"line_end":2418,"column_start":1,"column_end":92}},{"value":"/ generated bindings whenever any of the files included from the header change:","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82830,"byte_end":82911,"line_start":2419,"line_end":2419,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82912,"byte_end":82919,"line_start":2420,"line_end":2420,"column_start":1,"column_end":8}},{"value":"/ use bindgen::builder;","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82920,"byte_end":82945,"line_start":2421,"line_end":2421,"column_start":1,"column_end":26}},{"value":"/ let bindings = builder()","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82946,"byte_end":82974,"line_start":2422,"line_end":2422,"column_start":1,"column_end":29}},{"value":"/     .header(\"path/to/input/header\")","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":82975,"byte_end":83014,"line_start":2423,"line_end":2423,"column_start":1,"column_end":40}},{"value":"/     .parse_callbacks(Box::new(bindgen::CargoCallbacks))","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83015,"byte_end":83074,"line_start":2424,"line_end":2424,"column_start":1,"column_end":60}},{"value":"/     .generate();","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83075,"byte_end":83095,"line_start":2425,"line_end":2425,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83096,"byte_end":83103,"line_start":2426,"line_end":2426,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87366,"byte_end":87372,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87667,"byte_end":87673,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":109591,"byte_end":109600,"line_start":730,"line_end":730,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110439,"byte_end":110448,"line_start":761,"line_end":761,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111235,"byte_end":111245,"line_start":789,"line_end":789,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112360,"byte_end":112370,"line_start":823,"line_end":823,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112622,"byte_end":112640,"line_start":835,"line_end":835,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113815,"byte_end":113821,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113948,"byte_end":113954,"line_start":885,"line_end":885,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113973,"byte_end":113979,"line_start":887,"line_end":887,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114211,"byte_end":114215,"line_start":899,"line_end":899,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114338,"byte_end":114342,"line_start":905,"line_end":905,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114367,"byte_end":114371,"line_start":907,"line_end":907,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115348,"byte_end":115359,"line_start":939,"line_end":939,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115793,"byte_end":115797,"line_start":954,"line_end":954,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127023,"byte_end":127047,"line_start":1304,"line_end":1304,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127398,"byte_end":127421,"line_start":1323,"line_end":1323,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127798,"byte_end":127821,"line_start":1338,"line_end":1338,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128110,"byte_end":128124,"line_start":1351,"line_end":1351,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128659,"byte_end":128673,"line_start":1368,"line_end":1368,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129111,"byte_end":129118,"line_start":1386,"line_end":1386,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130225,"byte_end":130248,"line_start":1424,"line_end":1424,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130943,"byte_end":130968,"line_start":1454,"line_end":1454,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131691,"byte_end":131695,"line_start":1483,"line_end":1483,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132482,"byte_end":132487,"line_start":1513,"line_end":1513,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132977,"byte_end":132982,"line_start":1529,"line_end":1529,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133104,"byte_end":133109,"line_start":1535,"line_end":1535,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133339,"byte_end":133354,"line_start":1548,"line_end":1548,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133477,"byte_end":133492,"line_start":1554,"line_end":1554,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135400,"byte_end":135415,"line_start":1620,"line_end":1620,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135651,"byte_end":135661,"line_start":1633,"line_end":1633,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136152,"byte_end":136162,"line_start":1649,"line_end":1649,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136569,"byte_end":136580,"line_start":1667,"line_end":1667,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":137136,"byte_end":137147,"line_start":1685,"line_end":1685,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144653,"byte_end":144663,"line_start":1942,"line_end":1942,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147415,"byte_end":147425,"line_start":2030,"line_end":2030,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147736,"byte_end":147746,"line_start":2045,"line_end":2045,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/dyngen.rs","byte_start":306620,"byte_end":306632,"line_start":69,"line_end":69,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/error.rs","byte_start":309580,"byte_end":309585,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/error.rs","byte_start":310027,"byte_end":310032,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321546,"byte_end":321555,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321911,"byte_end":321923,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":322785,"byte_end":322789,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/struct_layout.rs","byte_start":333842,"byte_end":333861,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":153136,"byte_end":153139,"line_start":166,"line_end":166,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":155332,"byte_end":155345,"line_start":236,"line_end":236,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":157905,"byte_end":157918,"line_start":330,"line_end":330,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158070,"byte_end":158083,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158375,"byte_end":158386,"line_start":350,"line_end":350,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158942,"byte_end":158953,"line_start":370,"line_end":370,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":160756,"byte_end":160760,"line_start":433,"line_end":433,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":162195,"byte_end":162201,"line_start":482,"line_end":482,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":165137,"byte_end":165140,"line_start":573,"line_end":573,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":169600,"byte_end":169604,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":181213,"byte_end":181219,"line_start":991,"line_end":991,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":181475,"byte_end":181481,"line_start":1005,"line_end":1005,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182117,"byte_end":182123,"line_start":1028,"line_end":1028,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182299,"byte_end":182305,"line_start":1034,"line_end":1034,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182611,"byte_end":182632,"line_start":1049,"line_end":1049,"column_start":24,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":185730,"byte_end":185735,"line_start":1140,"line_end":1140,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":187135,"byte_end":187144,"line_start":1192,"line_end":1192,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":191954,"byte_end":191966,"line_start":1344,"line_end":1344,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":192275,"byte_end":192283,"line_start":1357,"line_end":1357,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":193654,"byte_end":193666,"line_start":1398,"line_end":1398,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":197779,"byte_end":197787,"line_start":1532,"line_end":1532,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":201264,"byte_end":201272,"line_start":1633,"line_end":1633,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":221723,"byte_end":221729,"line_start":2196,"line_end":2196,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227745,"byte_end":227758,"line_start":2385,"line_end":2385,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":228185,"byte_end":228198,"line_start":2403,"line_end":2403,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":228303,"byte_end":228316,"line_start":2409,"line_end":2409,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":230047,"byte_end":230058,"line_start":2464,"line_end":2464,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":239927,"byte_end":239931,"line_start":2767,"line_end":2767,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250742,"byte_end":250760,"line_start":3066,"line_end":3066,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251029,"byte_end":251047,"line_start":3076,"line_end":3076,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251164,"byte_end":251182,"line_start":3082,"line_end":3082,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252150,"byte_end":252164,"line_start":3112,"line_end":3112,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252490,"byte_end":252504,"line_start":3123,"line_end":3123,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252614,"byte_end":252628,"line_start":3129,"line_end":3129,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":255087,"byte_end":255088,"line_start":3201,"line_end":3201,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":256288,"byte_end":256289,"line_start":3235,"line_end":3235,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258033,"byte_end":258034,"line_start":3283,"line_end":3283,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258379,"byte_end":258380,"line_start":3299,"line_end":3299,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258655,"byte_end":258656,"line_start":3314,"line_end":3314,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258946,"byte_end":258950,"line_start":3329,"line_end":3329,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259182,"byte_end":259186,"line_start":3341,"line_end":3341,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259436,"byte_end":259440,"line_start":3353,"line_end":3353,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259684,"byte_end":259688,"line_start":3365,"line_end":3365,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":268078,"byte_end":268099,"line_start":3567,"line_end":3567,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":268386,"byte_end":268407,"line_start":3581,"line_end":3581,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":270733,"byte_end":270744,"line_start":3648,"line_end":3648,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":271558,"byte_end":271566,"line_start":3673,"line_end":3673,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":278257,"byte_end":278270,"line_start":3875,"line_end":3875,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/features.rs","byte_start":351314,"byte_end":351326,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":374103,"byte_end":374125,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":382122,"byte_end":382144,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":390464,"byte_end":390471,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":394500,"byte_end":394512,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":407157,"byte_end":407168,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":412522,"byte_end":412533,"line_start":610,"line_end":610,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":412940,"byte_end":412952,"line_start":623,"line_end":623,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":415867,"byte_end":415874,"line_start":710,"line_end":710,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417262,"byte_end":417277,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417349,"byte_end":417364,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417523,"byte_end":417538,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417683,"byte_end":417698,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":419046,"byte_end":419063,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":420528,"byte_end":420545,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":423144,"byte_end":423151,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425952,"byte_end":425973,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":426866,"byte_end":426887,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":430382,"byte_end":430389,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":432207,"byte_end":432230,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":433632,"byte_end":433655,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":439358,"byte_end":439365,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":441041,"byte_end":441049,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":442247,"byte_end":442255,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":448048,"byte_end":448055,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450286,"byte_end":450301,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450380,"byte_end":450395,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450554,"byte_end":450569,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450714,"byte_end":450729,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451571,"byte_end":451588,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":453191,"byte_end":453208,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":458921,"byte_end":458928,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359324,"byte_end":359339,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359428,"byte_end":359443,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359744,"byte_end":359759,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462410,"byte_end":462421,"line_start":78,"line_end":78,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462827,"byte_end":462838,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471703,"byte_end":471713,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472622,"byte_end":472628,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474728,"byte_end":474740,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475459,"byte_end":475464,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475811,"byte_end":475816,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":476346,"byte_end":476351,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":477560,"byte_end":477569,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":477925,"byte_end":477933,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":478905,"byte_end":478913,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":481040,"byte_end":481048,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":481872,"byte_end":481880,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":482420,"byte_end":482428,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":490972,"byte_end":490982,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":491089,"byte_end":491099,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":495600,"byte_end":495610,"line_start":853,"line_end":853,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":496917,"byte_end":496926,"line_start":901,"line_end":901,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498078,"byte_end":498082,"line_start":959,"line_end":959,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":501543,"byte_end":501551,"line_start":1065,"line_end":1065,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":523503,"byte_end":523511,"line_start":1651,"line_end":1651,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":524935,"byte_end":524943,"line_start":1704,"line_end":1704,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":527133,"byte_end":527141,"line_start":1757,"line_end":1757,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":527280,"byte_end":527288,"line_start":1763,"line_end":1763,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534824,"byte_end":534830,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534989,"byte_end":534995,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535169,"byte_end":535170,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535381,"byte_end":535382,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535596,"byte_end":535597,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535802,"byte_end":535803,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536014,"byte_end":536015,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536302,"byte_end":536303,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536581,"byte_end":536582,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536891,"byte_end":536892,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":544307,"byte_end":544332,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":544638,"byte_end":544663,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":545075,"byte_end":545089,"line_start":510,"line_end":510,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2421},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624196,"byte_end":624202,"line_start":2615,"line_end":2615,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624355,"byte_end":624367,"line_start":2622,"line_end":2622,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624478,"byte_end":624490,"line_start":2631,"line_end":2631,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626380,"byte_end":626391,"line_start":2691,"line_end":2691,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626925,"byte_end":626936,"line_start":2710,"line_end":2710,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631742,"byte_end":631751,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631823,"byte_end":631832,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631991,"byte_end":632000,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":632134,"byte_end":632143,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635851,"byte_end":635855,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2630},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642748,"byte_end":642759,"line_start":250,"line_end":250,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644721,"byte_end":644733,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646879,"byte_end":646887,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647868,"byte_end":647876,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648766,"byte_end":648769,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648985,"byte_end":648988,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654186,"byte_end":654197,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":662451,"byte_end":662459,"line_start":575,"line_end":575,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":664652,"byte_end":664663,"line_start":640,"line_end":640,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666528,"byte_end":666535,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":671652,"byte_end":671668,"line_start":111,"line_end":111,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672008,"byte_end":672025,"line_start":130,"line_end":130,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672262,"byte_end":672279,"line_start":140,"line_end":140,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672709,"byte_end":672710,"line_start":159,"line_end":159,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672985,"byte_end":672989,"line_start":174,"line_end":174,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673208,"byte_end":673216,"line_start":186,"line_end":186,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673614,"byte_end":673615,"line_start":203,"line_end":203,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673927,"byte_end":673928,"line_start":216,"line_end":216,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674544,"byte_end":674545,"line_start":240,"line_end":240,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674737,"byte_end":674741,"line_start":249,"line_end":249,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674885,"byte_end":674887,"line_start":255,"line_end":255,"column_start":20,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":675138,"byte_end":675142,"line_start":269,"line_end":269,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677044,"byte_end":677048,"line_start":315,"line_end":315,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677189,"byte_end":677193,"line_start":321,"line_end":321,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677335,"byte_end":677339,"line_start":327,"line_end":327,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677475,"byte_end":677479,"line_start":333,"line_end":333,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677621,"byte_end":677625,"line_start":339,"line_end":339,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677778,"byte_end":677782,"line_start":345,"line_end":345,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677926,"byte_end":677930,"line_start":351,"line_end":351,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678061,"byte_end":678065,"line_start":357,"line_end":357,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680442,"byte_end":680446,"line_start":422,"line_end":422,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680514,"byte_end":680518,"line_start":428,"line_end":428,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702126,"byte_end":702127,"line_start":1059,"line_end":1059,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702459,"byte_end":702463,"line_start":1074,"line_end":1074,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702880,"byte_end":702881,"line_start":1088,"line_end":1088,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":703526,"byte_end":703530,"line_start":1111,"line_end":1111,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":703761,"byte_end":703762,"line_start":1121,"line_end":1121,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704041,"byte_end":704045,"line_start":1132,"line_end":1132,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704189,"byte_end":704190,"line_start":1138,"line_end":1138,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704506,"byte_end":704510,"line_start":1151,"line_end":1151,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704788,"byte_end":704789,"line_start":1161,"line_end":1161,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705066,"byte_end":705070,"line_start":1174,"line_end":1174,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705380,"byte_end":705384,"line_start":1187,"line_end":1187,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705939,"byte_end":705940,"line_start":1212,"line_end":1212,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":706196,"byte_end":706200,"line_start":1222,"line_end":1222,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":706358,"byte_end":706366,"line_start":1228,"line_end":1228,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":707596,"byte_end":707600,"line_start":1268,"line_end":1268,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":728798,"byte_end":728802,"line_start":1865,"line_end":1865,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":729433,"byte_end":729437,"line_start":1886,"line_end":1886,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730906,"byte_end":730917,"line_start":1938,"line_end":1938,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732404,"byte_end":732412,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735352,"byte_end":735360,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736848,"byte_end":736854,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738562,"byte_end":738568,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740937,"byte_end":740943,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741691,"byte_end":741697,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741970,"byte_end":741976,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744316,"byte_end":744329,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749378,"byte_end":749388,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":751992,"byte_end":752005,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759548,"byte_end":759569,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":762684,"byte_end":762705,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":763957,"byte_end":763978,"line_start":330,"line_end":330,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3424},{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":764862,"byte_end":764866,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":765059,"byte_end":765063,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":771977,"byte_end":771984,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3463},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":772495,"byte_end":772500,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":773957,"byte_end":773960,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":774137,"byte_end":774145,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":774724,"byte_end":774725,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":776331,"byte_end":776344,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":777185,"byte_end":777198,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":777767,"byte_end":777780,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780696,"byte_end":780700,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3640},{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791059,"byte_end":791063,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791550,"byte_end":791554,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3652},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791780,"byte_end":791788,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":792169,"byte_end":792173,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":792904,"byte_end":792912,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":793334,"byte_end":793342,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":795858,"byte_end":795862,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":796020,"byte_end":796028,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799937,"byte_end":799941,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":823735,"byte_end":823739,"line_start":1223,"line_end":1223,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827054,"byte_end":827057,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":828016,"byte_end":828019,"line_start":95,"line_end":95,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3749}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":830996,"byte_end":830999,"line_start":186,"line_end":186,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/regex_set.rs","byte_start":844354,"byte_end":844362,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3830},{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846616,"byte_end":846621,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":847723,"byte_end":847728,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848348,"byte_end":848368,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3876}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3419,"byte_end":3432,"line_start":117,"line_end":117,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4322,"byte_end":4335,"line_start":149,"line_end":149,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6619,"byte_end":6626,"line_start":218,"line_end":218,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3989},{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4007},{"krate":0,"index":4009},{"krate":0,"index":4011},{"krate":0,"index":4013},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4030},{"krate":0,"index":4032},{"krate":0,"index":4034},{"krate":0,"index":4036},{"krate":0,"index":4038},{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4053},{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064},{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":61512,"byte_end":61526,"line_start":1776,"line_end":1776,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":61536,"byte_end":61550,"line_start":1778,"line_end":1778,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":63038,"byte_end":63052,"line_start":1823,"line_end":1823,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":68675,"byte_end":68683,"line_start":1983,"line_end":1983,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83184,"byte_end":83198,"line_start":2430,"line_end":2430,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4166}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":1636,"byte_end":1645,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":3858}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87366,"byte_end":87372,"line_start":25,"line_end":25,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":87667,"byte_end":87673,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":109591,"byte_end":109600,"line_start":730,"line_end":730,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":110439,"byte_end":110448,"line_start":761,"line_end":761,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":111235,"byte_end":111245,"line_start":789,"line_end":789,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112360,"byte_end":112370,"line_start":823,"line_end":823,"column_start":15,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4172},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":112622,"byte_end":112640,"line_start":835,"line_end":835,"column_start":23,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":175},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113815,"byte_end":113821,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113948,"byte_end":113954,"line_start":885,"line_end":885,"column_start":13,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":113973,"byte_end":113979,"line_start":887,"line_end":887,"column_start":15,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114211,"byte_end":114215,"line_start":899,"line_end":899,"column_start":20,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4178},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114338,"byte_end":114342,"line_start":905,"line_end":905,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4178},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":114367,"byte_end":114371,"line_start":907,"line_end":907,"column_start":21,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4178},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115348,"byte_end":115359,"line_start":939,"line_end":939,"column_start":36,"column_end":47},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4183},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":115793,"byte_end":115797,"line_start":954,"line_end":954,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127023,"byte_end":127047,"line_start":1304,"line_end":1304,"column_start":6,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127398,"byte_end":127421,"line_start":1323,"line_end":1323,"column_start":19,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":127798,"byte_end":127821,"line_start":1338,"line_end":1338,"column_start":28,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128110,"byte_end":128124,"line_start":1351,"line_end":1351,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":128659,"byte_end":128673,"line_start":1368,"line_end":1368,"column_start":23,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":129111,"byte_end":129118,"line_start":1386,"line_end":1386,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130225,"byte_end":130248,"line_start":1424,"line_end":1424,"column_start":19,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":130943,"byte_end":130968,"line_start":1454,"line_end":1454,"column_start":19,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":131691,"byte_end":131695,"line_start":1483,"line_end":1483,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132482,"byte_end":132487,"line_start":1513,"line_end":1513,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":132977,"byte_end":132982,"line_start":1529,"line_end":1529,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":290},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133104,"byte_end":133109,"line_start":1535,"line_end":1535,"column_start":15,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":290},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133339,"byte_end":133354,"line_start":1548,"line_end":1548,"column_start":21,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":133477,"byte_end":133492,"line_start":1554,"line_end":1554,"column_start":6,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135400,"byte_end":135415,"line_start":1620,"line_end":1620,"column_start":15,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":135651,"byte_end":135661,"line_start":1633,"line_end":1633,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136152,"byte_end":136162,"line_start":1649,"line_end":1649,"column_start":15,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":136569,"byte_end":136580,"line_start":1667,"line_end":1667,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":137136,"byte_end":137147,"line_start":1685,"line_end":1685,"column_start":21,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":144653,"byte_end":144663,"line_start":1942,"line_end":1942,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147415,"byte_end":147425,"line_start":2030,"line_end":2030,"column_start":15,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4237},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/clang.rs","byte_start":147736,"byte_end":147746,"line_start":2045,"line_end":2045,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/dyngen.rs","byte_start":306620,"byte_end":306632,"line_start":69,"line_end":69,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/error.rs","byte_start":309580,"byte_end":309585,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/error.rs","byte_start":310027,"byte_end":310032,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4260},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321546,"byte_end":321555,"line_start":68,"line_end":68,"column_start":28,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4878},"to":{"krate":0,"index":498}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":321911,"byte_end":321923,"line_start":84,"line_end":84,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4840},"to":{"krate":0,"index":498}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/impl_debug.rs","byte_start":322785,"byte_end":322789,"line_start":113,"line_end":113,"column_start":28,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":498}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/struct_layout.rs","byte_start":333842,"byte_end":333861,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":153136,"byte_end":153139,"line_start":166,"line_end":166,"column_start":32,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":6773},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":155332,"byte_end":155345,"line_start":236,"line_end":236,"column_start":10,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":157905,"byte_end":157918,"line_start":330,"line_end":330,"column_start":25,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158070,"byte_end":158083,"line_start":338,"line_end":338,"column_start":28,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158375,"byte_end":158386,"line_start":350,"line_end":350,"column_start":29,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":23,"index":911},"to":{"krate":0,"index":870}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":158942,"byte_end":158953,"line_start":370,"line_end":370,"column_start":52,"column_end":63},"kind":{"Impl":{"id":49}},"from":{"krate":23,"index":911},"to":{"krate":0,"index":874}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":160756,"byte_end":160760,"line_start":433,"line_end":433,"column_start":24,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":162195,"byte_end":162201,"line_start":482,"line_end":482,"column_start":24,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5471},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":165137,"byte_end":165140,"line_start":573,"line_end":573,"column_start":24,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5697},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":169600,"byte_end":169604,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":181213,"byte_end":181219,"line_start":991,"line_end":991,"column_start":10,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":181475,"byte_end":181481,"line_start":1005,"line_end":1005,"column_start":28,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":909},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182117,"byte_end":182123,"line_start":1028,"line_end":1028,"column_start":32,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":909},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182299,"byte_end":182305,"line_start":1034,"line_end":1034,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":909},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":182611,"byte_end":182632,"line_start":1049,"line_end":1049,"column_start":24,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":185730,"byte_end":185735,"line_start":1140,"line_end":1140,"column_start":31,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":187135,"byte_end":187144,"line_start":1192,"line_end":1192,"column_start":31,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4878},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":191954,"byte_end":191966,"line_start":1344,"line_end":1344,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":192275,"byte_end":192283,"line_start":1357,"line_end":1357,"column_start":6,"column_end":14},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":193654,"byte_end":193666,"line_start":1398,"line_end":1398,"column_start":31,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4840},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":197779,"byte_end":197787,"line_start":1532,"line_end":1532,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":201264,"byte_end":201272,"line_start":1633,"line_end":1633,"column_start":24,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":221723,"byte_end":221729,"line_start":2196,"line_end":2196,"column_start":24,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4834},"to":{"krate":0,"index":985}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":227745,"byte_end":227758,"line_start":2385,"line_end":2385,"column_start":6,"column_end":19},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":228185,"byte_end":228198,"line_start":2403,"line_end":2403,"column_start":18,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4441},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":228303,"byte_end":228316,"line_start":2409,"line_end":2409,"column_start":28,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4441},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":230047,"byte_end":230058,"line_start":2464,"line_end":2464,"column_start":10,"column_end":21},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":239927,"byte_end":239931,"line_start":2767,"line_end":2767,"column_start":24,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5198},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":250742,"byte_end":250760,"line_start":3066,"line_end":3066,"column_start":6,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251029,"byte_end":251047,"line_start":3076,"line_end":3076,"column_start":18,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":251164,"byte_end":251182,"line_start":3082,"line_end":3082,"column_start":28,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252150,"byte_end":252164,"line_start":3112,"line_end":3112,"column_start":6,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252490,"byte_end":252504,"line_start":3123,"line_end":3123,"column_start":18,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":252614,"byte_end":252628,"line_start":3129,"line_end":3129,"column_start":28,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":254645,"byte_end":254656,"line_start":3185,"line_end":3185,"column_start":17,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1054},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":255087,"byte_end":255088,"line_start":3201,"line_end":3201,"column_start":22,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1064},"to":{"krate":0,"index":1059}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":256023,"byte_end":256034,"line_start":3225,"line_end":3225,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":1065},"to":{"krate":0,"index":1068}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":256037,"byte_end":256048,"line_start":3225,"line_end":3225,"column_start":42,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":1054},"to":{"krate":0,"index":1068}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":256288,"byte_end":256289,"line_start":3235,"line_end":3235,"column_start":36,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1073},"to":{"krate":0,"index":1068}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":257796,"byte_end":257807,"line_start":3273,"line_end":3273,"column_start":25,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1065},"to":{"krate":0,"index":1077}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":257810,"byte_end":257818,"line_start":3273,"line_end":3273,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1059},"to":{"krate":0,"index":1077}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258033,"byte_end":258034,"line_start":3283,"line_end":3283,"column_start":33,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1082},"to":{"krate":0,"index":1077}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258379,"byte_end":258380,"line_start":3299,"line_end":3299,"column_start":25,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258655,"byte_end":258656,"line_start":3314,"line_end":3314,"column_start":25,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":258946,"byte_end":258950,"line_start":3329,"line_end":3329,"column_start":22,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259182,"byte_end":259186,"line_start":3341,"line_end":3341,"column_start":22,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259436,"byte_end":259440,"line_start":3353,"line_end":3353,"column_start":22,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":259684,"byte_end":259688,"line_start":3365,"line_end":3365,"column_start":22,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":268078,"byte_end":268099,"line_start":3567,"line_end":3567,"column_start":22,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":1054}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":268386,"byte_end":268407,"line_start":3581,"line_end":3581,"column_start":22,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":270733,"byte_end":270744,"line_start":3648,"line_end":3648,"column_start":22,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5294},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":271558,"byte_end":271566,"line_start":3673,"line_end":3673,"column_start":24,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5264},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/codegen/mod.rs","byte_start":278257,"byte_end":278270,"line_start":3875,"line_end":3875,"column_start":24,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5479},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/features.rs","byte_start":351314,"byte_end":351326,"line_start":230,"line_end":230,"column_start":18,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4564},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":374103,"byte_end":374125,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":382122,"byte_end":382144,"line_start":374,"line_end":374,"column_start":34,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4593},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/template_params.rs","byte_start":390464,"byte_end":390471,"line_start":596,"line_end":596,"column_start":51,"column_end":58},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3967},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":394500,"byte_end":394512,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":407157,"byte_end":407168,"line_start":444,"line_end":444,"column_start":6,"column_end":17},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":412522,"byte_end":412533,"line_start":610,"line_end":610,"column_start":23,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4607},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":412940,"byte_end":412952,"line_start":623,"line_end":623,"column_start":34,"column_end":46},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4623},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/derive.rs","byte_start":415867,"byte_end":415874,"line_start":710,"line_end":710,"column_start":41,"column_end":48},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3967},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417262,"byte_end":417277,"line_start":25,"line_end":25,"column_start":18,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417349,"byte_end":417364,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417523,"byte_end":417538,"line_start":38,"line_end":38,"column_start":21,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":417683,"byte_end":417698,"line_start":46,"line_end":46,"column_start":27,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":419046,"byte_end":419063,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":420528,"byte_end":420545,"line_start":133,"line_end":133,"column_start":34,"column_end":51},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4658},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_vtable.rs","byte_start":423144,"byte_end":423151,"line_start":215,"line_end":215,"column_start":46,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3967},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":425952,"byte_end":425973,"line_start":42,"line_end":42,"column_start":12,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":426866,"byte_end":426887,"line_start":69,"line_end":69,"column_start":34,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4670},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_destructor.rs","byte_start":430382,"byte_end":430389,"line_start":172,"line_end":172,"column_start":50,"column_end":57},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3970},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":432207,"byte_end":432230,"line_start":42,"line_end":42,"column_start":12,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":433632,"byte_end":433655,"line_start":86,"line_end":86,"column_start":34,"column_end":57},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4681},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_type_param_in_array.rs","byte_start":439358,"byte_end":439365,"line_start":248,"line_end":248,"column_start":52,"column_end":59},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3970},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":441041,"byte_end":441049,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":442247,"byte_end":442255,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4692},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/has_float.rs","byte_start":448048,"byte_end":448055,"line_start":248,"line_end":248,"column_start":37,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3970},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450286,"byte_end":450301,"line_start":65,"line_end":65,"column_start":18,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450380,"byte_end":450395,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450554,"byte_end":450569,"line_start":78,"line_end":78,"column_start":21,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":450714,"byte_end":450729,"line_start":86,"line_end":86,"column_start":27,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":451571,"byte_end":451588,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":453191,"byte_end":453208,"line_start":165,"line_end":165,"column_start":34,"column_end":51},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4725},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/sizedness.rs","byte_start":458921,"byte_end":458928,"line_start":337,"line_end":337,"column_start":46,"column_end":53},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3967},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357020,"byte_end":357025,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":357033,"byte_end":357038,"line_start":76,"line_end":76,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":1808}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359324,"byte_end":359339,"line_start":133,"line_end":133,"column_start":18,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4734},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359428,"byte_end":359443,"line_start":139,"line_end":139,"column_start":21,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4734},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/analysis/mod.rs","byte_start":359744,"byte_end":359759,"line_start":151,"line_end":151,"column_start":27,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4734},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462410,"byte_end":462421,"line_start":78,"line_end":78,"column_start":18,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4767},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/annotations.rs","byte_start":462827,"byte_end":462838,"line_start":95,"line_end":95,"column_start":6,"column_end":17},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":471703,"byte_end":471713,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":472622,"byte_end":472628,"line_start":88,"line_end":88,"column_start":6,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":474728,"byte_end":474740,"line_start":172,"line_end":172,"column_start":6,"column_end":18},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475459,"byte_end":475464,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":475811,"byte_end":475816,"line_start":213,"line_end":213,"column_start":16,"column_end":21},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":476346,"byte_end":476351,"line_start":233,"line_end":233,"column_start":24,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4846},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":477560,"byte_end":477569,"line_start":273,"line_end":273,"column_start":24,"column_end":33},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4878},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":477925,"byte_end":477933,"line_start":291,"line_end":291,"column_start":24,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":478905,"byte_end":478913,"line_start":331,"line_end":331,"column_start":6,"column_end":14},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":481040,"byte_end":481048,"line_start":401,"line_end":401,"column_start":23,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4855},"to":{"krate":0,"index":1969}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":481872,"byte_end":481880,"line_start":438,"line_end":438,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":482420,"byte_end":482428,"line_start":461,"line_end":461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":1969}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":490972,"byte_end":490982,"line_start":717,"line_end":717,"column_start":18,"column_end":28},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4867},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":491089,"byte_end":491099,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":495600,"byte_end":495610,"line_start":853,"line_end":853,"column_start":16,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4867},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":496917,"byte_end":496926,"line_start":901,"line_end":901,"column_start":23,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4878},"to":{"krate":0,"index":1969}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":498078,"byte_end":498082,"line_start":959,"line_end":959,"column_start":6,"column_end":10},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":501543,"byte_end":501551,"line_start":1065,"line_end":1065,"column_start":6,"column_end":14},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":523503,"byte_end":523511,"line_start":1651,"line_end":1651,"column_start":24,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":524935,"byte_end":524943,"line_start":1704,"line_end":1704,"column_start":19,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":527133,"byte_end":527141,"line_start":1757,"line_end":1757,"column_start":29,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/comp.rs","byte_start":527280,"byte_end":527288,"line_start":1763,"line_end":1763,"column_start":16,"column_end":24},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534824,"byte_end":534830,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":534989,"byte_end":534995,"line_start":202,"line_end":202,"column_start":38,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4932},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535169,"byte_end":535170,"line_start":212,"line_end":212,"column_start":28,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2304},"to":{"krate":0,"index":2524}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535381,"byte_end":535382,"line_start":221,"line_end":221,"column_start":30,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535596,"byte_end":535597,"line_start":230,"line_end":230,"column_start":27,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2310},"to":{"krate":0,"index":2526}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":535802,"byte_end":535803,"line_start":239,"line_end":239,"column_start":27,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2313},"to":{"krate":0,"index":2530}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536014,"byte_end":536015,"line_start":248,"line_end":248,"column_start":33,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2316},"to":{"krate":0,"index":2534}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536302,"byte_end":536303,"line_start":259,"line_end":259,"column_start":32,"column_end":33},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2319},"to":{"krate":0,"index":2532}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536581,"byte_end":536582,"line_start":270,"line_end":270,"column_start":25,"column_end":26},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2322},"to":{"krate":0,"index":2536}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":536891,"byte_end":536892,"line_start":282,"line_end":282,"column_start":26,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2325},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":544307,"byte_end":544332,"line_start":477,"line_end":477,"column_start":25,"column_end":50},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2327},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":544638,"byte_end":544663,"line_start":493,"line_end":493,"column_start":12,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":545075,"byte_end":545089,"line_start":510,"line_end":510,"column_start":6,"column_end":20},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624196,"byte_end":624202,"line_start":2615,"line_end":2615,"column_start":6,"column_end":12},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624355,"byte_end":624367,"line_start":2622,"line_end":2622,"column_start":21,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5134},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":624478,"byte_end":624490,"line_start":2631,"line_end":2631,"column_start":6,"column_end":18},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626380,"byte_end":626391,"line_start":2691,"line_end":2691,"column_start":6,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/context.rs","byte_start":626925,"byte_end":626936,"line_start":2710,"line_end":2710,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5143},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631742,"byte_end":631751,"line_start":110,"line_end":110,"column_start":18,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631823,"byte_end":631832,"line_start":116,"line_end":116,"column_start":6,"column_end":15},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":631991,"byte_end":632000,"line_start":123,"line_end":123,"column_start":21,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/derive.rs","byte_start":632134,"byte_end":632143,"line_start":131,"line_end":131,"column_start":27,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5158},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":635851,"byte_end":635855,"line_start":37,"line_end":37,"column_start":6,"column_end":10},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/enum_ty.rs","byte_start":642748,"byte_end":642759,"line_start":250,"line_end":250,"column_start":6,"column_end":17},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":644721,"byte_end":644733,"line_start":30,"line_end":30,"column_start":6,"column_end":18},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":646879,"byte_end":646887,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":647868,"byte_end":647876,"line_start":143,"line_end":143,"column_start":24,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5264},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648766,"byte_end":648769,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":648985,"byte_end":648988,"line_start":195,"line_end":195,"column_start":26,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5273},"to":{"krate":21,"index":117}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":654186,"byte_end":654197,"line_start":347,"line_end":347,"column_start":6,"column_end":17},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":662451,"byte_end":662459,"line_start":575,"line_end":575,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5264},"to":{"krate":0,"index":3805}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/function.rs","byte_start":664652,"byte_end":664663,"line_start":640,"line_end":640,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5294},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/int.rs","byte_start":666528,"byte_end":666535,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":671652,"byte_end":671668,"line_start":111,"line_end":111,"column_start":6,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672008,"byte_end":672025,"line_start":130,"line_end":130,"column_start":10,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672262,"byte_end":672279,"line_start":140,"line_end":140,"column_start":23,"column_end":40},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2934},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672709,"byte_end":672710,"line_start":159,"line_end":159,"column_start":29,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2948},"to":{"krate":0,"index":3400}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":672985,"byte_end":672989,"line_start":174,"line_end":174,"column_start":26,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":3400}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673208,"byte_end":673216,"line_start":186,"line_end":186,"column_start":26,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5416},"to":{"krate":0,"index":3400}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673614,"byte_end":673615,"line_start":203,"line_end":203,"column_start":31,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2958},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":673927,"byte_end":673928,"line_start":216,"line_end":216,"column_start":31,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2961},"to":{"krate":0,"index":2915}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674544,"byte_end":674545,"line_start":240,"line_end":240,"column_start":27,"column_end":28},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2965},"to":{"krate":0,"index":2925}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674737,"byte_end":674741,"line_start":249,"line_end":249,"column_start":24,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2925}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":674885,"byte_end":674887,"line_start":255,"line_end":255,"column_start":20,"column_end":22},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2972},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":675138,"byte_end":675142,"line_start":269,"line_end":269,"column_start":16,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677044,"byte_end":677048,"line_start":315,"line_end":315,"column_start":25,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2524}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677189,"byte_end":677193,"line_start":321,"line_end":321,"column_start":27,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677335,"byte_end":677339,"line_start":327,"line_end":327,"column_start":24,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2526}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677475,"byte_end":677479,"line_start":333,"line_end":333,"column_start":24,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2530}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677621,"byte_end":677625,"line_start":339,"line_end":339,"column_start":30,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2534}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677778,"byte_end":677782,"line_start":345,"line_end":345,"column_start":29,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2532}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":677926,"byte_end":677930,"line_start":351,"line_end":351,"column_start":22,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2536}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":678061,"byte_end":678065,"line_start":357,"line_end":357,"column_start":23,"column_end":27},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2538}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680442,"byte_end":680446,"line_start":422,"line_end":422,"column_start":24,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5371},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":680514,"byte_end":680518,"line_start":428,"line_end":428,"column_start":6,"column_end":10},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702126,"byte_end":702127,"line_start":1059,"line_end":1059,"column_start":22,"column_end":23},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3062},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702459,"byte_end":702463,"line_start":1074,"line_end":1074,"column_start":19,"column_end":23},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":702880,"byte_end":702881,"line_start":1088,"line_end":1088,"column_start":23,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3070},"to":{"krate":0,"index":1493}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":703526,"byte_end":703530,"line_start":1111,"line_end":1111,"column_start":20,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":1493}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":703761,"byte_end":703762,"line_start":1121,"line_end":1121,"column_start":23,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3079},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704041,"byte_end":704045,"line_start":1132,"line_end":1132,"column_start":20,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704189,"byte_end":704190,"line_start":1138,"line_end":1138,"column_start":33,"column_end":34},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3085},"to":{"krate":0,"index":2921}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704506,"byte_end":704510,"line_start":1151,"line_end":1151,"column_start":30,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2921}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":704788,"byte_end":704789,"line_start":1161,"line_end":1161,"column_start":22,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3090},"to":{"krate":0,"index":2923}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705066,"byte_end":705070,"line_start":1174,"line_end":1174,"column_start":19,"column_end":23},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2923}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705380,"byte_end":705384,"line_start":1187,"line_end":1187,"column_start":24,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":705939,"byte_end":705940,"line_start":1212,"line_end":1212,"column_start":32,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3099},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":706196,"byte_end":706200,"line_start":1222,"line_end":1222,"column_start":29,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":706358,"byte_end":706366,"line_start":1228,"line_end":1228,"column_start":29,"column_end":37},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5416},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":707596,"byte_end":707600,"line_start":1268,"line_end":1268,"column_start":26,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":3807}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":728798,"byte_end":728802,"line_start":1865,"line_end":1865,"column_start":28,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":729433,"byte_end":729437,"line_start":1886,"line_end":1886,"column_start":28,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5371},"to":{"krate":0,"index":2915}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item.rs","byte_start":730906,"byte_end":730917,"line_start":1938,"line_end":1938,"column_start":10,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":732404,"byte_end":732412,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/item_kind.rs","byte_start":735352,"byte_end":735360,"line_start":129,"line_end":129,"column_start":24,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5416},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":736848,"byte_end":736854,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/layout.rs","byte_start":738562,"byte_end":738568,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":740937,"byte_end":740943,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741691,"byte_end":741697,"line_start":62,"line_end":62,"column_start":24,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5471},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/module.rs","byte_start":741970,"byte_end":741976,"line_start":75,"line_end":75,"column_start":29,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5471},"to":{"krate":0,"index":3805}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":744316,"byte_end":744329,"line_start":66,"line_end":66,"column_start":6,"column_end":19},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":749378,"byte_end":749388,"line_start":209,"line_end":209,"column_start":6,"column_end":16},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/objc.rs","byte_start":751992,"byte_end":752005,"line_start":305,"line_end":305,"column_start":16,"column_end":29},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5479},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":755991,"byte_end":755996,"line_start":102,"line_end":102,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":759548,"byte_end":759569,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":762684,"byte_end":762705,"line_start":293,"line_end":293,"column_start":19,"column_end":40},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/template.rs","byte_start":763957,"byte_end":763978,"line_start":330,"line_end":330,"column_start":16,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":764862,"byte_end":764866,"line_start":20,"line_end":20,"column_start":6,"column_end":10},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":765059,"byte_end":765063,"line_start":27,"line_end":27,"column_start":23,"column_end":27},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":771977,"byte_end":771984,"line_start":255,"line_end":255,"column_start":39,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3094},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":772495,"byte_end":772500,"line_start":271,"line_end":271,"column_start":39,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5576},"to":{"krate":0,"index":3457}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":773742,"byte_end":773749,"line_start":310,"line_end":310,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":773957,"byte_end":773960,"line_start":318,"line_end":318,"column_start":25,"column_end":28},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":774137,"byte_end":774145,"line_start":328,"line_end":328,"column_start":25,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":5,"index":3811},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":774724,"byte_end":774725,"line_start":349,"line_end":349,"column_start":20,"column_end":21},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3482},"to":{"krate":0,"index":3478}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":776331,"byte_end":776344,"line_start":403,"line_end":403,"column_start":5,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":777185,"byte_end":777198,"line_start":437,"line_end":437,"column_start":9,"column_end":22},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3488},"to":{"krate":0,"index":3478}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/traversal.rs","byte_start":777767,"byte_end":777780,"line_start":458,"line_end":458,"column_start":9,"column_end":22},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":780696,"byte_end":780700,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791059,"byte_end":791063,"line_start":392,"line_end":392,"column_start":19,"column_end":23},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":2918}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791550,"byte_end":791554,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":3400}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":791780,"byte_end":791788,"line_start":420,"line_end":420,"column_start":26,"column_end":34},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3400}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":792169,"byte_end":792173,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":792904,"byte_end":792912,"line_start":465,"line_end":465,"column_start":24,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":793334,"byte_end":793342,"line_start":488,"line_end":488,"column_start":6,"column_end":14},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":795858,"byte_end":795862,"line_start":566,"line_end":566,"column_start":29,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":796020,"byte_end":796028,"line_start":572,"line_end":572,"column_start":29,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5608},"to":{"krate":0,"index":3393}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":799937,"byte_end":799941,"line_start":711,"line_end":711,"column_start":6,"column_end":10},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/ty.rs","byte_start":823735,"byte_end":823739,"line_start":1223,"line_end":1223,"column_start":16,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5584},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":827054,"byte_end":827057,"line_start":50,"line_end":50,"column_start":6,"column_end":9},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":828016,"byte_end":828019,"line_start":95,"line_end":95,"column_start":24,"column_end":27},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5697},"to":{"krate":0,"index":2573}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/ir/var.rs","byte_start":830996,"byte_end":830999,"line_start":186,"line_end":186,"column_start":29,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5697},"to":{"krate":0,"index":3805}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":841624,"byte_end":841629,"line_start":32,"line_end":32,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3805}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/parse.rs","byte_start":842065,"byte_end":842070,"line_start":44,"line_end":44,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3807}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/regex_set.rs","byte_start":844354,"byte_end":844362,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":846616,"byte_end":846621,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/time.rs","byte_start":847723,"byte_end":847728,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5733},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848348,"byte_end":848368,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5741},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848563,"byte_end":848568,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/callbacks.rs","byte_start":848571,"byte_end":848581,"line_start":26,"line_end":26,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":6430},"to":{"krate":0,"index":3877}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":3419,"byte_end":3432,"line_start":117,"line_end":117,"column_start":6,"column_end":19},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":4322,"byte_end":4335,"line_start":149,"line_end":149,"column_start":18,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5757},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":6619,"byte_end":6626,"line_start":218,"line_end":218,"column_start":6,"column_end":13},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":61512,"byte_end":61526,"line_start":1776,"line_end":1776,"column_start":35,"column_end":49},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5877},"to":{"krate":1,"index":6430}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":61536,"byte_end":61550,"line_start":1778,"line_end":1778,"column_start":6,"column_end":20},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":63038,"byte_end":63052,"line_start":1823,"line_end":1823,"column_start":18,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5877},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":68675,"byte_end":68683,"line_start":1983,"line_end":1983,"column_start":6,"column_end":14},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/namn/.cargo/registry/src/github.com-1ecc6299db9ec823/bindgen-0.56.0/src/lib.rs","byte_start":83184,"byte_end":83198,"line_start":2430,"line_end":2430,"column_start":36,"column_end":50},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5980},"to":{"krate":0,"index":3877}}]}